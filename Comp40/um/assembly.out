
um:     file format elf64-x86-64


Disassembly of section .init:

0000000000400cb0 <_init>:
  400cb0:	48 83 ec 08          	sub    $0x8,%rsp
  400cb4:	48 8b 05 2d 63 20 00 	mov    0x20632d(%rip),%rax        # 606fe8 <__gmon_start__>
  400cbb:	48 85 c0             	test   %rax,%rax
  400cbe:	74 05                	je     400cc5 <_init+0x15>
  400cc0:	e8 0b 01 00 00       	callq  400dd0 <__gmon_start__@plt>
  400cc5:	48 83 c4 08          	add    $0x8,%rsp
  400cc9:	c3                   	retq   

Disassembly of section .plt:

0000000000400cd0 <.plt>:
  400cd0:	ff 35 32 63 20 00    	pushq  0x206332(%rip)        # 607008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400cd6:	ff 25 34 63 20 00    	jmpq   *0x206334(%rip)        # 607010 <_GLOBAL_OFFSET_TABLE_+0x10>
  400cdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400ce0 <free@plt>:
  400ce0:	ff 25 32 63 20 00    	jmpq   *0x206332(%rip)        # 607018 <free@GLIBC_2.2.5>
  400ce6:	68 00 00 00 00       	pushq  $0x0
  400ceb:	e9 e0 ff ff ff       	jmpq   400cd0 <.plt>

0000000000400cf0 <putchar@plt>:
  400cf0:	ff 25 2a 63 20 00    	jmpq   *0x20632a(%rip)        # 607020 <putchar@GLIBC_2.2.5>
  400cf6:	68 01 00 00 00       	pushq  $0x1
  400cfb:	e9 d0 ff ff ff       	jmpq   400cd0 <.plt>

0000000000400d00 <abort@plt>:
  400d00:	ff 25 22 63 20 00    	jmpq   *0x206322(%rip)        # 607028 <abort@GLIBC_2.2.5>
  400d06:	68 02 00 00 00       	pushq  $0x2
  400d0b:	e9 c0 ff ff ff       	jmpq   400cd0 <.plt>

0000000000400d10 <fclose@plt>:
  400d10:	ff 25 1a 63 20 00    	jmpq   *0x20631a(%rip)        # 607030 <fclose@GLIBC_2.2.5>
  400d16:	68 03 00 00 00       	pushq  $0x3
  400d1b:	e9 b0 ff ff ff       	jmpq   400cd0 <.plt>

0000000000400d20 <strlen@plt>:
  400d20:	ff 25 12 63 20 00    	jmpq   *0x206312(%rip)        # 607038 <strlen@GLIBC_2.2.5>
  400d26:	68 04 00 00 00       	pushq  $0x4
  400d2b:	e9 a0 ff ff ff       	jmpq   400cd0 <.plt>

0000000000400d30 <strchr@plt>:
  400d30:	ff 25 0a 63 20 00    	jmpq   *0x20630a(%rip)        # 607040 <strchr@GLIBC_2.2.5>
  400d36:	68 05 00 00 00       	pushq  $0x5
  400d3b:	e9 90 ff ff ff       	jmpq   400cd0 <.plt>

0000000000400d40 <printf@plt>:
  400d40:	ff 25 02 63 20 00    	jmpq   *0x206302(%rip)        # 607048 <printf@GLIBC_2.2.5>
  400d46:	68 06 00 00 00       	pushq  $0x6
  400d4b:	e9 80 ff ff ff       	jmpq   400cd0 <.plt>

0000000000400d50 <rewind@plt>:
  400d50:	ff 25 fa 62 20 00    	jmpq   *0x2062fa(%rip)        # 607050 <rewind@GLIBC_2.2.5>
  400d56:	68 07 00 00 00       	pushq  $0x7
  400d5b:	e9 70 ff ff ff       	jmpq   400cd0 <.plt>

0000000000400d60 <_IO_putc@plt>:
  400d60:	ff 25 f2 62 20 00    	jmpq   *0x2062f2(%rip)        # 607058 <_IO_putc@GLIBC_2.2.5>
  400d66:	68 08 00 00 00       	pushq  $0x8
  400d6b:	e9 60 ff ff ff       	jmpq   400cd0 <.plt>

0000000000400d70 <memset@plt>:
  400d70:	ff 25 ea 62 20 00    	jmpq   *0x2062ea(%rip)        # 607060 <memset@GLIBC_2.2.5>
  400d76:	68 09 00 00 00       	pushq  $0x9
  400d7b:	e9 50 ff ff ff       	jmpq   400cd0 <.plt>

0000000000400d80 <__libc_start_main@plt>:
  400d80:	ff 25 e2 62 20 00    	jmpq   *0x2062e2(%rip)        # 607068 <__libc_start_main@GLIBC_2.2.5>
  400d86:	68 0a 00 00 00       	pushq  $0xa
  400d8b:	e9 40 ff ff ff       	jmpq   400cd0 <.plt>

0000000000400d90 <_setjmp@plt>:
  400d90:	ff 25 da 62 20 00    	jmpq   *0x2062da(%rip)        # 607070 <_setjmp@GLIBC_2.2.5>
  400d96:	68 0b 00 00 00       	pushq  $0xb
  400d9b:	e9 30 ff ff ff       	jmpq   400cd0 <.plt>

0000000000400da0 <calloc@plt>:
  400da0:	ff 25 d2 62 20 00    	jmpq   *0x2062d2(%rip)        # 607078 <calloc@GLIBC_2.2.5>
  400da6:	68 0c 00 00 00       	pushq  $0xc
  400dab:	e9 20 ff ff ff       	jmpq   400cd0 <.plt>

0000000000400db0 <fprintf@plt>:
  400db0:	ff 25 ca 62 20 00    	jmpq   *0x2062ca(%rip)        # 607080 <fprintf@GLIBC_2.2.5>
  400db6:	68 0d 00 00 00       	pushq  $0xd
  400dbb:	e9 10 ff ff ff       	jmpq   400cd0 <.plt>

0000000000400dc0 <ftell@plt>:
  400dc0:	ff 25 c2 62 20 00    	jmpq   *0x2062c2(%rip)        # 607088 <ftell@GLIBC_2.2.5>
  400dc6:	68 0e 00 00 00       	pushq  $0xe
  400dcb:	e9 00 ff ff ff       	jmpq   400cd0 <.plt>

0000000000400dd0 <__gmon_start__@plt>:
  400dd0:	ff 25 ba 62 20 00    	jmpq   *0x2062ba(%rip)        # 607090 <__gmon_start__>
  400dd6:	68 0f 00 00 00       	pushq  $0xf
  400ddb:	e9 f0 fe ff ff       	jmpq   400cd0 <.plt>

0000000000400de0 <memcpy@plt>:
  400de0:	ff 25 b2 62 20 00    	jmpq   *0x2062b2(%rip)        # 607098 <memcpy@GLIBC_2.14>
  400de6:	68 10 00 00 00       	pushq  $0x10
  400deb:	e9 e0 fe ff ff       	jmpq   400cd0 <.plt>

0000000000400df0 <malloc@plt>:
  400df0:	ff 25 aa 62 20 00    	jmpq   *0x2062aa(%rip)        # 6070a0 <malloc@GLIBC_2.2.5>
  400df6:	68 11 00 00 00       	pushq  $0x11
  400dfb:	e9 d0 fe ff ff       	jmpq   400cd0 <.plt>

0000000000400e00 <fflush@plt>:
  400e00:	ff 25 a2 62 20 00    	jmpq   *0x2062a2(%rip)        # 6070a8 <fflush@GLIBC_2.2.5>
  400e06:	68 12 00 00 00       	pushq  $0x12
  400e0b:	e9 c0 fe ff ff       	jmpq   400cd0 <.plt>

0000000000400e10 <_IO_getc@plt>:
  400e10:	ff 25 9a 62 20 00    	jmpq   *0x20629a(%rip)        # 6070b0 <_IO_getc@GLIBC_2.2.5>
  400e16:	68 13 00 00 00       	pushq  $0x13
  400e1b:	e9 b0 fe ff ff       	jmpq   400cd0 <.plt>

0000000000400e20 <fseek@plt>:
  400e20:	ff 25 92 62 20 00    	jmpq   *0x206292(%rip)        # 6070b8 <fseek@GLIBC_2.2.5>
  400e26:	68 14 00 00 00       	pushq  $0x14
  400e2b:	e9 a0 fe ff ff       	jmpq   400cd0 <.plt>

0000000000400e30 <realloc@plt>:
  400e30:	ff 25 8a 62 20 00    	jmpq   *0x20628a(%rip)        # 6070c0 <realloc@GLIBC_2.2.5>
  400e36:	68 15 00 00 00       	pushq  $0x15
  400e3b:	e9 90 fe ff ff       	jmpq   400cd0 <.plt>

0000000000400e40 <longjmp@plt>:
  400e40:	ff 25 82 62 20 00    	jmpq   *0x206282(%rip)        # 6070c8 <longjmp@GLIBC_2.2.5>
  400e46:	68 16 00 00 00       	pushq  $0x16
  400e4b:	e9 80 fe ff ff       	jmpq   400cd0 <.plt>

0000000000400e50 <fopen@plt>:
  400e50:	ff 25 7a 62 20 00    	jmpq   *0x20627a(%rip)        # 6070d0 <fopen@GLIBC_2.2.5>
  400e56:	68 17 00 00 00       	pushq  $0x17
  400e5b:	e9 70 fe ff ff       	jmpq   400cd0 <.plt>

0000000000400e60 <sprintf@plt>:
  400e60:	ff 25 72 62 20 00    	jmpq   *0x206272(%rip)        # 6070d8 <sprintf@GLIBC_2.2.5>
  400e66:	68 18 00 00 00       	pushq  $0x18
  400e6b:	e9 60 fe ff ff       	jmpq   400cd0 <.plt>

0000000000400e70 <exit@plt>:
  400e70:	ff 25 6a 62 20 00    	jmpq   *0x20626a(%rip)        # 6070e0 <exit@GLIBC_2.2.5>
  400e76:	68 19 00 00 00       	pushq  $0x19
  400e7b:	e9 50 fe ff ff       	jmpq   400cd0 <.plt>

0000000000400e80 <fwrite@plt>:
  400e80:	ff 25 62 62 20 00    	jmpq   *0x206262(%rip)        # 6070e8 <fwrite@GLIBC_2.2.5>
  400e86:	68 1a 00 00 00       	pushq  $0x1a
  400e8b:	e9 40 fe ff ff       	jmpq   400cd0 <.plt>

0000000000400e90 <__ctype_b_loc@plt>:
  400e90:	ff 25 5a 62 20 00    	jmpq   *0x20625a(%rip)        # 6070f0 <__ctype_b_loc@GLIBC_2.3>
  400e96:	68 1b 00 00 00       	pushq  $0x1b
  400e9b:	e9 30 fe ff ff       	jmpq   400cd0 <.plt>

Disassembly of section .text:

0000000000400ea0 <_start>:
  400ea0:	31 ed                	xor    %ebp,%ebp
  400ea2:	49 89 d1             	mov    %rdx,%r9
  400ea5:	5e                   	pop    %rsi
  400ea6:	48 89 e2             	mov    %rsp,%rdx
  400ea9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400ead:	50                   	push   %rax
  400eae:	54                   	push   %rsp
  400eaf:	49 c7 c0 00 5b 40 00 	mov    $0x405b00,%r8
  400eb6:	48 c7 c1 90 5a 40 00 	mov    $0x405a90,%rcx
  400ebd:	48 c7 c7 72 0f 40 00 	mov    $0x400f72,%rdi
  400ec4:	e8 b7 fe ff ff       	callq  400d80 <__libc_start_main@plt>
  400ec9:	f4                   	hlt    
  400eca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400ed0 <deregister_tm_clones>:
  400ed0:	48 8d 3d 89 6a 20 00 	lea    0x206a89(%rip),%rdi        # 607960 <stdin@@GLIBC_2.2.5>
  400ed7:	48 8d 05 82 6a 20 00 	lea    0x206a82(%rip),%rax        # 607960 <stdin@@GLIBC_2.2.5>
  400ede:	48 39 f8             	cmp    %rdi,%rax
  400ee1:	74 15                	je     400ef8 <deregister_tm_clones+0x28>
  400ee3:	48 8b 05 ee 60 20 00 	mov    0x2060ee(%rip),%rax        # 606fd8 <_ITM_deregisterTMCloneTable>
  400eea:	48 85 c0             	test   %rax,%rax
  400eed:	74 09                	je     400ef8 <deregister_tm_clones+0x28>
  400eef:	ff e0                	jmpq   *%rax
  400ef1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400ef8:	c3                   	retq   
  400ef9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400f00 <register_tm_clones>:
  400f00:	48 8d 3d 59 6a 20 00 	lea    0x206a59(%rip),%rdi        # 607960 <stdin@@GLIBC_2.2.5>
  400f07:	48 8d 35 52 6a 20 00 	lea    0x206a52(%rip),%rsi        # 607960 <stdin@@GLIBC_2.2.5>
  400f0e:	48 29 fe             	sub    %rdi,%rsi
  400f11:	48 89 f0             	mov    %rsi,%rax
  400f14:	48 c1 ee 3f          	shr    $0x3f,%rsi
  400f18:	48 c1 f8 03          	sar    $0x3,%rax
  400f1c:	48 01 c6             	add    %rax,%rsi
  400f1f:	48 d1 fe             	sar    %rsi
  400f22:	74 14                	je     400f38 <register_tm_clones+0x38>
  400f24:	48 8b 05 c5 60 20 00 	mov    0x2060c5(%rip),%rax        # 606ff0 <_ITM_registerTMCloneTable>
  400f2b:	48 85 c0             	test   %rax,%rax
  400f2e:	74 08                	je     400f38 <register_tm_clones+0x38>
  400f30:	ff e0                	jmpq   *%rax
  400f32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400f38:	c3                   	retq   
  400f39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400f40 <__do_global_dtors_aux>:
  400f40:	80 3d 21 6a 20 00 00 	cmpb   $0x0,0x206a21(%rip)        # 607968 <completed.7307>
  400f47:	75 17                	jne    400f60 <__do_global_dtors_aux+0x20>
  400f49:	55                   	push   %rbp
  400f4a:	48 89 e5             	mov    %rsp,%rbp
  400f4d:	e8 7e ff ff ff       	callq  400ed0 <deregister_tm_clones>
  400f52:	c6 05 0f 6a 20 00 01 	movb   $0x1,0x206a0f(%rip)        # 607968 <completed.7307>
  400f59:	5d                   	pop    %rbp
  400f5a:	c3                   	retq   
  400f5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400f60:	c3                   	retq   
  400f61:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400f66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400f6d:	00 00 00 

0000000000400f70 <frame_dummy>:
  400f70:	eb 8e                	jmp    400f00 <register_tm_clones>

0000000000400f72 <main>:
  400f72:	55                   	push   %rbp
  400f73:	48 89 e5             	mov    %rsp,%rbp
  400f76:	48 83 ec 20          	sub    $0x20,%rsp
  400f7a:	89 7d ec             	mov    %edi,-0x14(%rbp)
  400f7d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  400f81:	83 7d ec 02          	cmpl   $0x2,-0x14(%rbp)
  400f85:	74 0a                	je     400f91 <main+0x1f>
  400f87:	bf 01 00 00 00       	mov    $0x1,%edi
  400f8c:	e8 df fe ff ff       	callq  400e70 <exit@plt>
  400f91:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400f95:	48 83 c0 08          	add    $0x8,%rax
  400f99:	48 8b 00             	mov    (%rax),%rax
  400f9c:	be 14 5b 40 00       	mov    $0x405b14,%esi
  400fa1:	48 89 c7             	mov    %rax,%rdi
  400fa4:	e8 a7 fe ff ff       	callq  400e50 <fopen@plt>
  400fa9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400fad:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  400fb2:	75 14                	jne    400fc8 <main+0x56>
  400fb4:	ba 10 00 00 00       	mov    $0x10,%edx
  400fb9:	be 16 5b 40 00       	mov    $0x405b16,%esi
  400fbe:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  400fc3:	e8 c8 1e 00 00       	callq  402e90 <Except_raise>
  400fc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400fcc:	48 89 c7             	mov    %rax,%rdi
  400fcf:	e8 26 00 00 00       	callq  400ffa <load_um>
  400fd4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400fd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400fdc:	48 89 c7             	mov    %rax,%rdi
  400fdf:	e8 2c fd ff ff       	callq  400d10 <fclose@plt>
  400fe4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400fe8:	48 89 c7             	mov    %rax,%rdi
  400feb:	e8 06 07 00 00       	callq  4016f6 <executeInstr>
  400ff0:	bf 00 00 00 00       	mov    $0x0,%edi
  400ff5:	e8 76 fe ff ff       	callq  400e70 <exit@plt>

0000000000400ffa <load_um>:
  400ffa:	55                   	push   %rbp
  400ffb:	48 89 e5             	mov    %rsp,%rbp
  400ffe:	48 83 ec 30          	sub    $0x30,%rsp
  401002:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  401006:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40100a:	ba 02 00 00 00       	mov    $0x2,%edx
  40100f:	be 00 00 00 00       	mov    $0x0,%esi
  401014:	48 89 c7             	mov    %rax,%rdi
  401017:	e8 04 fe ff ff       	callq  400e20 <fseek@plt>
  40101c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401020:	48 89 c7             	mov    %rax,%rdi
  401023:	e8 98 fd ff ff       	callq  400dc0 <ftell@plt>
  401028:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40102c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401031:	74 0c                	je     40103f <load_um+0x45>
  401033:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401037:	83 e0 03             	and    $0x3,%eax
  40103a:	48 85 c0             	test   %rax,%rax
  40103d:	74 0a                	je     401049 <load_um+0x4f>
  40103f:	bf 01 00 00 00       	mov    $0x1,%edi
  401044:	e8 27 fe ff ff       	callq  400e70 <exit@plt>
  401049:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40104d:	48 89 c7             	mov    %rax,%rdi
  401050:	e8 fb fc ff ff       	callq  400d50 <rewind@plt>
  401055:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401059:	48 8d 50 03          	lea    0x3(%rax),%rdx
  40105d:	48 85 c0             	test   %rax,%rax
  401060:	48 0f 48 c2          	cmovs  %rdx,%rax
  401064:	48 c1 f8 02          	sar    $0x2,%rax
  401068:	89 c7                	mov    %eax,%edi
  40106a:	e8 38 3c 00 00       	callq  404ca7 <Seq_new>
  40106f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  401073:	eb 25                	jmp    40109a <load_um+0xa0>
  401075:	8b 55 ec             	mov    -0x14(%rbp),%edx
  401078:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40107c:	89 d6                	mov    %edx,%esi
  40107e:	48 89 c7             	mov    %rax,%rdi
  401081:	e8 35 00 00 00       	callq  4010bb <getInstruction>
  401086:	89 c0                	mov    %eax,%eax
  401088:	48 89 c2             	mov    %rax,%rdx
  40108b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40108f:	48 89 d6             	mov    %rdx,%rsi
  401092:	48 89 c7             	mov    %rax,%rdi
  401095:	e8 4f 41 00 00       	callq  4051e9 <Seq_addhi>
  40109a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40109e:	48 89 c7             	mov    %rax,%rdi
  4010a1:	e8 6a fd ff ff       	callq  400e10 <_IO_getc@plt>
  4010a6:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4010a9:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4010ad:	74 06                	je     4010b5 <load_um+0xbb>
  4010af:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%rbp)
  4010b3:	75 c0                	jne    401075 <load_um+0x7b>
  4010b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4010b9:	c9                   	leaveq 
  4010ba:	c3                   	retq   

00000000004010bb <getInstruction>:
  4010bb:	55                   	push   %rbp
  4010bc:	48 89 e5             	mov    %rsp,%rbp
  4010bf:	48 83 ec 30          	sub    $0x30,%rsp
  4010c3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4010c7:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4010ca:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  4010d1:	00 
  4010d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4010d6:	48 89 c7             	mov    %rax,%rdi
  4010d9:	e8 32 fd ff ff       	callq  400e10 <_IO_getc@plt>
  4010de:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4010e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4010e5:	48 89 c7             	mov    %rax,%rdi
  4010e8:	e8 23 fd ff ff       	callq  400e10 <_IO_getc@plt>
  4010ed:	89 45 f0             	mov    %eax,-0x10(%rbp)
  4010f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4010f4:	48 89 c7             	mov    %rax,%rdi
  4010f7:	e8 14 fd ff ff       	callq  400e10 <_IO_getc@plt>
  4010fc:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4010ff:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  401102:	48 63 d0             	movslq %eax,%rdx
  401105:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401109:	48 89 d1             	mov    %rdx,%rcx
  40110c:	ba 18 00 00 00       	mov    $0x18,%edx
  401111:	be 08 00 00 00       	mov    $0x8,%esi
  401116:	48 89 c7             	mov    %rax,%rdi
  401119:	e8 62 0a 00 00       	callq  401b80 <Bitpack_newu>
  40111e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401122:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401125:	48 63 d0             	movslq %eax,%rdx
  401128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40112c:	48 89 d1             	mov    %rdx,%rcx
  40112f:	ba 10 00 00 00       	mov    $0x10,%edx
  401134:	be 08 00 00 00       	mov    $0x8,%esi
  401139:	48 89 c7             	mov    %rax,%rdi
  40113c:	e8 3f 0a 00 00       	callq  401b80 <Bitpack_newu>
  401141:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401145:	8b 45 f0             	mov    -0x10(%rbp),%eax
  401148:	48 63 d0             	movslq %eax,%rdx
  40114b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40114f:	48 89 d1             	mov    %rdx,%rcx
  401152:	ba 08 00 00 00       	mov    $0x8,%edx
  401157:	be 08 00 00 00       	mov    $0x8,%esi
  40115c:	48 89 c7             	mov    %rax,%rdi
  40115f:	e8 1c 0a 00 00       	callq  401b80 <Bitpack_newu>
  401164:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401168:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40116b:	48 63 d0             	movslq %eax,%rdx
  40116e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401172:	48 89 d1             	mov    %rdx,%rcx
  401175:	ba 00 00 00 00       	mov    $0x0,%edx
  40117a:	be 08 00 00 00       	mov    $0x8,%esi
  40117f:	48 89 c7             	mov    %rax,%rdi
  401182:	e8 f9 09 00 00       	callq  401b80 <Bitpack_newu>
  401187:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40118b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40118f:	c9                   	leaveq 
  401190:	c3                   	retq   

0000000000401191 <memNew>:
  401191:	55                   	push   %rbp
  401192:	48 89 e5             	mov    %rsp,%rbp
  401195:	48 83 ec 20          	sub    $0x20,%rsp
  401199:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40119d:	bf 10 00 00 00       	mov    $0x10,%edi
  4011a2:	e8 49 fc ff ff       	callq  400df0 <malloc@plt>
  4011a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4011ab:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4011b0:	75 14                	jne    4011c6 <memNew+0x35>
  4011b2:	ba 06 00 00 00       	mov    $0x6,%edx
  4011b7:	be 1b 5b 40 00       	mov    $0x405b1b,%esi
  4011bc:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  4011c1:	e8 ca 1c 00 00       	callq  402e90 <Except_raise>
  4011c6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4011cb:	75 14                	jne    4011e1 <memNew+0x50>
  4011cd:	ba 07 00 00 00       	mov    $0x7,%edx
  4011d2:	be 1b 5b 40 00       	mov    $0x405b1b,%esi
  4011d7:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  4011dc:	e8 af 1c 00 00       	callq  402e90 <Except_raise>
  4011e1:	bf 00 00 00 00       	mov    $0x0,%edi
  4011e6:	e8 bc 3a 00 00       	callq  404ca7 <Seq_new>
  4011eb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4011ef:	48 89 02             	mov    %rax,(%rdx)
  4011f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4011f6:	48 8b 00             	mov    (%rax),%rax
  4011f9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4011fd:	48 89 d6             	mov    %rdx,%rsi
  401200:	48 89 c7             	mov    %rax,%rdi
  401203:	e8 84 40 00 00       	callq  40528c <Seq_addlo>
  401208:	e8 53 41 00 00       	callq  405360 <Stack_new>
  40120d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401211:	48 89 42 08          	mov    %rax,0x8(%rdx)
  401215:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401219:	c9                   	leaveq 
  40121a:	c3                   	retq   

000000000040121b <memFree>:
  40121b:	55                   	push   %rbp
  40121c:	48 89 e5             	mov    %rsp,%rbp
  40121f:	48 83 ec 20          	sub    $0x20,%rsp
  401223:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401227:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40122c:	75 14                	jne    401242 <memFree+0x27>
  40122e:	ba 10 00 00 00       	mov    $0x10,%edx
  401233:	be 1b 5b 40 00       	mov    $0x405b1b,%esi
  401238:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  40123d:	e8 4e 1c 00 00       	callq  402e90 <Except_raise>
  401242:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  401249:	eb 28                	jmp    401273 <memFree+0x58>
  40124b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40124f:	48 8b 00             	mov    (%rax),%rax
  401252:	8b 55 fc             	mov    -0x4(%rbp),%edx
  401255:	89 d6                	mov    %edx,%esi
  401257:	48 89 c7             	mov    %rax,%rdi
  40125a:	e8 a0 3c 00 00       	callq  404eff <Seq_get>
  40125f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  401263:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  401267:	48 89 c7             	mov    %rax,%rdi
  40126a:	e8 0e 3c 00 00       	callq  404e7d <Seq_free>
  40126f:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  401273:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401277:	48 8b 00             	mov    (%rax),%rax
  40127a:	48 89 c7             	mov    %rax,%rdi
  40127d:	e8 46 3c 00 00       	callq  404ec8 <Seq_length>
  401282:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  401285:	7c c4                	jl     40124b <memFree+0x30>
  401287:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40128b:	48 89 c7             	mov    %rax,%rdi
  40128e:	e8 ea 3b 00 00       	callq  404e7d <Seq_free>
  401293:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401297:	48 83 c0 08          	add    $0x8,%rax
  40129b:	48 89 c7             	mov    %rax,%rdi
  40129e:	e8 6c 42 00 00       	callq  40550f <Stack_free>
  4012a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4012a7:	48 89 c7             	mov    %rax,%rdi
  4012aa:	e8 31 fa ff ff       	callq  400ce0 <free@plt>
  4012af:	90                   	nop
  4012b0:	c9                   	leaveq 
  4012b1:	c3                   	retq   

00000000004012b2 <segmentedLoad>:
  4012b2:	55                   	push   %rbp
  4012b3:	48 89 e5             	mov    %rsp,%rbp
  4012b6:	48 83 ec 20          	sub    $0x20,%rsp
  4012ba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4012be:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4012c1:	89 55 e0             	mov    %edx,-0x20(%rbp)
  4012c4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4012c9:	75 14                	jne    4012df <segmentedLoad+0x2d>
  4012cb:	ba 1e 00 00 00       	mov    $0x1e,%edx
  4012d0:	be 1b 5b 40 00       	mov    $0x405b1b,%esi
  4012d5:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  4012da:	e8 b1 1b 00 00       	callq  402e90 <Except_raise>
  4012df:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4012e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4012e6:	48 8b 00             	mov    (%rax),%rax
  4012e9:	89 d6                	mov    %edx,%esi
  4012eb:	48 89 c7             	mov    %rax,%rdi
  4012ee:	e8 0c 3c 00 00       	callq  404eff <Seq_get>
  4012f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4012f7:	8b 55 e0             	mov    -0x20(%rbp),%edx
  4012fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4012fe:	89 d6                	mov    %edx,%esi
  401300:	48 89 c7             	mov    %rax,%rdi
  401303:	e8 f7 3b 00 00       	callq  404eff <Seq_get>
  401308:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40130b:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40130e:	c9                   	leaveq 
  40130f:	c3                   	retq   

0000000000401310 <segmentedStore>:
  401310:	55                   	push   %rbp
  401311:	48 89 e5             	mov    %rsp,%rbp
  401314:	48 83 ec 30          	sub    $0x30,%rsp
  401318:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40131c:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40131f:	89 55 e0             	mov    %edx,-0x20(%rbp)
  401322:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  401325:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40132a:	75 14                	jne    401340 <segmentedStore+0x30>
  40132c:	ba 25 00 00 00       	mov    $0x25,%edx
  401331:	be 1b 5b 40 00       	mov    $0x405b1b,%esi
  401336:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  40133b:	e8 50 1b 00 00       	callq  402e90 <Except_raise>
  401340:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  401343:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401347:	48 8b 00             	mov    (%rax),%rax
  40134a:	89 d6                	mov    %edx,%esi
  40134c:	48 89 c7             	mov    %rax,%rdi
  40134f:	e8 ab 3b 00 00       	callq  404eff <Seq_get>
  401354:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401358:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40135b:	48 89 c2             	mov    %rax,%rdx
  40135e:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  401361:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401365:	89 ce                	mov    %ecx,%esi
  401367:	48 89 c7             	mov    %rax,%rdi
  40136a:	e8 2a 3c 00 00       	callq  404f99 <Seq_put>
  40136f:	90                   	nop
  401370:	c9                   	leaveq 
  401371:	c3                   	retq   

0000000000401372 <mapSegment>:
  401372:	55                   	push   %rbp
  401373:	48 89 e5             	mov    %rsp,%rbp
  401376:	48 83 ec 30          	sub    $0x30,%rsp
  40137a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40137e:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  401381:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  401386:	75 14                	jne    40139c <mapSegment+0x2a>
  401388:	ba 2e 00 00 00       	mov    $0x2e,%edx
  40138d:	be 1b 5b 40 00       	mov    $0x405b1b,%esi
  401392:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  401397:	e8 f4 1a 00 00       	callq  402e90 <Except_raise>
  40139c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40139f:	89 c7                	mov    %eax,%edi
  4013a1:	e8 01 39 00 00       	callq  404ca7 <Seq_new>
  4013a6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4013aa:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4013b1:	eb 15                	jmp    4013c8 <mapSegment+0x56>
  4013b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4013b7:	be 00 00 00 00       	mov    $0x0,%esi
  4013bc:	48 89 c7             	mov    %rax,%rdi
  4013bf:	e8 25 3e 00 00       	callq  4051e9 <Seq_addhi>
  4013c4:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4013c8:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4013cb:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  4013ce:	7c e3                	jl     4013b3 <mapSegment+0x41>
  4013d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4013d4:	48 8b 40 08          	mov    0x8(%rax),%rax
  4013d8:	48 89 c7             	mov    %rax,%rdi
  4013db:	e8 be 3f 00 00       	callq  40539e <Stack_empty>
  4013e0:	83 f8 01             	cmp    $0x1,%eax
  4013e3:	74 3d                	je     401422 <mapSegment+0xb0>
  4013e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4013e9:	48 8b 40 08          	mov    0x8(%rax),%rax
  4013ed:	48 89 c7             	mov    %rax,%rdi
  4013f0:	e8 6b 40 00 00       	callq  405460 <Stack_pop>
  4013f5:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4013f8:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  4013fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4013ff:	48 8b 00             	mov    (%rax),%rax
  401402:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  401406:	89 ce                	mov    %ecx,%esi
  401408:	48 89 c7             	mov    %rax,%rdi
  40140b:	e8 89 3b 00 00       	callq  404f99 <Seq_put>
  401410:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  401414:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
  401418:	48 89 c7             	mov    %rax,%rdi
  40141b:	e8 5d 3a 00 00       	callq  404e7d <Seq_free>
  401420:	eb 2b                	jmp    40144d <mapSegment+0xdb>
  401422:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401426:	48 8b 00             	mov    (%rax),%rax
  401429:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40142d:	48 89 d6             	mov    %rdx,%rsi
  401430:	48 89 c7             	mov    %rax,%rdi
  401433:	e8 b1 3d 00 00       	callq  4051e9 <Seq_addhi>
  401438:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40143c:	48 8b 00             	mov    (%rax),%rax
  40143f:	48 89 c7             	mov    %rax,%rdi
  401442:	e8 81 3a 00 00       	callq  404ec8 <Seq_length>
  401447:	83 e8 01             	sub    $0x1,%eax
  40144a:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40144d:	8b 45 f8             	mov    -0x8(%rbp),%eax
  401450:	c9                   	leaveq 
  401451:	c3                   	retq   

0000000000401452 <unmapSegment>:
  401452:	55                   	push   %rbp
  401453:	48 89 e5             	mov    %rsp,%rbp
  401456:	48 83 ec 10          	sub    $0x10,%rsp
  40145a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40145e:	89 75 f4             	mov    %esi,-0xc(%rbp)
  401461:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401466:	75 14                	jne    40147c <unmapSegment+0x2a>
  401468:	ba 41 00 00 00       	mov    $0x41,%edx
  40146d:	be 1b 5b 40 00       	mov    $0x405b1b,%esi
  401472:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  401477:	e8 14 1a 00 00       	callq  402e90 <Except_raise>
  40147c:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40147f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401483:	48 8b 00             	mov    (%rax),%rax
  401486:	89 d6                	mov    %edx,%esi
  401488:	48 89 c7             	mov    %rax,%rdi
  40148b:	e8 6f 3a 00 00       	callq  404eff <Seq_get>
  401490:	48 89 c7             	mov    %rax,%rdi
  401493:	e8 e5 39 00 00       	callq  404e7d <Seq_free>
  401498:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40149b:	48 89 c2             	mov    %rax,%rdx
  40149e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4014a2:	48 8b 40 08          	mov    0x8(%rax),%rax
  4014a6:	48 89 d6             	mov    %rdx,%rsi
  4014a9:	48 89 c7             	mov    %rax,%rdi
  4014ac:	e8 2b 3f 00 00       	callq  4053dc <Stack_push>
  4014b1:	90                   	nop
  4014b2:	c9                   	leaveq 
  4014b3:	c3                   	retq   

00000000004014b4 <conditionalMove>:
  4014b4:	55                   	push   %rbp
  4014b5:	48 89 e5             	mov    %rsp,%rbp
  4014b8:	89 7d fc             	mov    %edi,-0x4(%rbp)
  4014bb:	89 75 f8             	mov    %esi,-0x8(%rbp)
  4014be:	89 55 f4             	mov    %edx,-0xc(%rbp)
  4014c1:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4014c4:	8b 04 85 80 79 60 00 	mov    0x607980(,%rax,4),%eax
  4014cb:	85 c0                	test   %eax,%eax
  4014cd:	74 14                	je     4014e3 <conditionalMove+0x2f>
  4014cf:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4014d2:	8b 14 85 80 79 60 00 	mov    0x607980(,%rax,4),%edx
  4014d9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4014dc:	89 14 85 80 79 60 00 	mov    %edx,0x607980(,%rax,4)
  4014e3:	90                   	nop
  4014e4:	5d                   	pop    %rbp
  4014e5:	c3                   	retq   

00000000004014e6 <addition>:
  4014e6:	55                   	push   %rbp
  4014e7:	48 89 e5             	mov    %rsp,%rbp
  4014ea:	89 7d fc             	mov    %edi,-0x4(%rbp)
  4014ed:	89 75 f8             	mov    %esi,-0x8(%rbp)
  4014f0:	89 55 f4             	mov    %edx,-0xc(%rbp)
  4014f3:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4014f6:	8b 14 85 80 79 60 00 	mov    0x607980(,%rax,4),%edx
  4014fd:	8b 45 f8             	mov    -0x8(%rbp),%eax
  401500:	8b 04 85 80 79 60 00 	mov    0x607980(,%rax,4),%eax
  401507:	01 c2                	add    %eax,%edx
  401509:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40150c:	89 14 85 80 79 60 00 	mov    %edx,0x607980(,%rax,4)
  401513:	90                   	nop
  401514:	5d                   	pop    %rbp
  401515:	c3                   	retq   

0000000000401516 <multiplication>:
  401516:	55                   	push   %rbp
  401517:	48 89 e5             	mov    %rsp,%rbp
  40151a:	89 7d fc             	mov    %edi,-0x4(%rbp)
  40151d:	89 75 f8             	mov    %esi,-0x8(%rbp)
  401520:	89 55 f4             	mov    %edx,-0xc(%rbp)
  401523:	8b 45 f8             	mov    -0x8(%rbp),%eax
  401526:	8b 14 85 80 79 60 00 	mov    0x607980(,%rax,4),%edx
  40152d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401530:	8b 04 85 80 79 60 00 	mov    0x607980(,%rax,4),%eax
  401537:	0f af d0             	imul   %eax,%edx
  40153a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40153d:	89 14 85 80 79 60 00 	mov    %edx,0x607980(,%rax,4)
  401544:	90                   	nop
  401545:	5d                   	pop    %rbp
  401546:	c3                   	retq   

0000000000401547 <division>:
  401547:	55                   	push   %rbp
  401548:	48 89 e5             	mov    %rsp,%rbp
  40154b:	89 7d fc             	mov    %edi,-0x4(%rbp)
  40154e:	89 75 f8             	mov    %esi,-0x8(%rbp)
  401551:	89 55 f4             	mov    %edx,-0xc(%rbp)
  401554:	8b 45 f8             	mov    -0x8(%rbp),%eax
  401557:	8b 04 85 80 79 60 00 	mov    0x607980(,%rax,4),%eax
  40155e:	8b 55 f4             	mov    -0xc(%rbp),%edx
  401561:	8b 0c 95 80 79 60 00 	mov    0x607980(,%rdx,4),%ecx
  401568:	ba 00 00 00 00       	mov    $0x0,%edx
  40156d:	f7 f1                	div    %ecx
  40156f:	89 c2                	mov    %eax,%edx
  401571:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401574:	89 14 85 80 79 60 00 	mov    %edx,0x607980(,%rax,4)
  40157b:	90                   	nop
  40157c:	5d                   	pop    %rbp
  40157d:	c3                   	retq   

000000000040157e <bitwiseNAND>:
  40157e:	55                   	push   %rbp
  40157f:	48 89 e5             	mov    %rsp,%rbp
  401582:	89 7d fc             	mov    %edi,-0x4(%rbp)
  401585:	89 75 f8             	mov    %esi,-0x8(%rbp)
  401588:	89 55 f4             	mov    %edx,-0xc(%rbp)
  40158b:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40158e:	8b 14 85 80 79 60 00 	mov    0x607980(,%rax,4),%edx
  401595:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401598:	8b 04 85 80 79 60 00 	mov    0x607980(,%rax,4),%eax
  40159f:	21 d0                	and    %edx,%eax
  4015a1:	f7 d0                	not    %eax
  4015a3:	89 c2                	mov    %eax,%edx
  4015a5:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4015a8:	89 14 85 80 79 60 00 	mov    %edx,0x607980(,%rax,4)
  4015af:	90                   	nop
  4015b0:	5d                   	pop    %rbp
  4015b1:	c3                   	retq   

00000000004015b2 <halt>:
  4015b2:	55                   	push   %rbp
  4015b3:	48 89 e5             	mov    %rsp,%rbp
  4015b6:	48 83 ec 10          	sub    $0x10,%rsp
  4015ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4015be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4015c2:	48 89 c7             	mov    %rax,%rdi
  4015c5:	e8 51 fc ff ff       	callq  40121b <memFree>
  4015ca:	bf 00 00 00 00       	mov    $0x0,%edi
  4015cf:	e8 9c f8 ff ff       	callq  400e70 <exit@plt>

00000000004015d4 <output>:
  4015d4:	55                   	push   %rbp
  4015d5:	48 89 e5             	mov    %rsp,%rbp
  4015d8:	48 83 ec 10          	sub    $0x10,%rsp
  4015dc:	89 7d fc             	mov    %edi,-0x4(%rbp)
  4015df:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4015e2:	8b 04 85 80 79 60 00 	mov    0x607980(,%rax,4),%eax
  4015e9:	89 c7                	mov    %eax,%edi
  4015eb:	e8 00 f7 ff ff       	callq  400cf0 <putchar@plt>
  4015f0:	90                   	nop
  4015f1:	c9                   	leaveq 
  4015f2:	c3                   	retq   

00000000004015f3 <input>:
  4015f3:	55                   	push   %rbp
  4015f4:	48 89 e5             	mov    %rsp,%rbp
  4015f7:	48 83 ec 20          	sub    $0x20,%rsp
  4015fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4015ff:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  401602:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401606:	48 89 c7             	mov    %rax,%rdi
  401609:	e8 02 f8 ff ff       	callq  400e10 <_IO_getc@plt>
  40160e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  401611:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  401615:	75 0e                	jne    401625 <input+0x32>
  401617:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40161a:	c7 04 85 80 79 60 00 	movl   $0xffffffff,0x607980(,%rax,4)
  401621:	ff ff ff ff 
  401625:	90                   	nop
  401626:	c9                   	leaveq 
  401627:	c3                   	retq   

0000000000401628 <loadProgram>:
  401628:	55                   	push   %rbp
  401629:	48 89 e5             	mov    %rsp,%rbp
  40162c:	48 83 ec 40          	sub    $0x40,%rsp
  401630:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  401634:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  401637:	89 55 c0             	mov    %edx,-0x40(%rbp)
  40163a:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  40163d:	8b 04 85 80 79 60 00 	mov    0x607980(,%rax,4),%eax
  401644:	85 c0                	test   %eax,%eax
  401646:	0f 84 94 00 00 00    	je     4016e0 <loadProgram+0xb8>
  40164c:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  40164f:	8b 04 85 80 79 60 00 	mov    0x607980(,%rax,4),%eax
  401656:	89 c2                	mov    %eax,%edx
  401658:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40165c:	48 8b 00             	mov    (%rax),%rax
  40165f:	89 d6                	mov    %edx,%esi
  401661:	48 89 c7             	mov    %rax,%rdi
  401664:	e8 96 38 00 00       	callq  404eff <Seq_get>
  401669:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40166d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401671:	48 89 c7             	mov    %rax,%rdi
  401674:	e8 4f 38 00 00       	callq  404ec8 <Seq_length>
  401679:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40167c:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40167f:	89 c7                	mov    %eax,%edi
  401681:	e8 21 36 00 00       	callq  404ca7 <Seq_new>
  401686:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40168a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  401691:	eb 2d                	jmp    4016c0 <loadProgram+0x98>
  401693:	8b 55 fc             	mov    -0x4(%rbp),%edx
  401696:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40169a:	89 d6                	mov    %edx,%esi
  40169c:	48 89 c7             	mov    %rax,%rdi
  40169f:	e8 5b 38 00 00       	callq  404eff <Seq_get>
  4016a4:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4016a7:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4016aa:	48 89 c2             	mov    %rax,%rdx
  4016ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4016b1:	48 89 d6             	mov    %rdx,%rsi
  4016b4:	48 89 c7             	mov    %rax,%rdi
  4016b7:	e8 2d 3b 00 00       	callq  4051e9 <Seq_addhi>
  4016bc:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4016c0:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4016c3:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  4016c6:	7c cb                	jl     401693 <loadProgram+0x6b>
  4016c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4016cc:	48 8b 00             	mov    (%rax),%rax
  4016cf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4016d3:	be 00 00 00 00       	mov    $0x0,%esi
  4016d8:	48 89 c7             	mov    %rax,%rdi
  4016db:	e8 b9 38 00 00       	callq  404f99 <Seq_put>
  4016e0:	8b 45 c0             	mov    -0x40(%rbp),%eax
  4016e3:	8b 04 85 80 79 60 00 	mov    0x607980(,%rax,4),%eax
  4016ea:	83 e8 01             	sub    $0x1,%eax
  4016ed:	89 05 ad 62 20 00    	mov    %eax,0x2062ad(%rip)        # 6079a0 <prog_counter>
  4016f3:	90                   	nop
  4016f4:	c9                   	leaveq 
  4016f5:	c3                   	retq   

00000000004016f6 <executeInstr>:
  4016f6:	55                   	push   %rbp
  4016f7:	48 89 e5             	mov    %rsp,%rbp
  4016fa:	48 83 ec 30          	sub    $0x30,%rsp
  4016fe:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  401702:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401706:	48 89 c7             	mov    %rax,%rdi
  401709:	e8 83 fa ff ff       	callq  401191 <memNew>
  40170e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401712:	8b 15 88 62 20 00    	mov    0x206288(%rip),%edx        # 6079a0 <prog_counter>
  401718:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40171c:	be 00 00 00 00       	mov    $0x0,%esi
  401721:	48 89 c7             	mov    %rax,%rdi
  401724:	e8 89 fb ff ff       	callq  4012b2 <segmentedLoad>
  401729:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40172c:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40172f:	ba 1c 00 00 00       	mov    $0x1c,%edx
  401734:	be 04 00 00 00       	mov    $0x4,%esi
  401739:	48 89 c7             	mov    %rax,%rdi
  40173c:	e8 7f 03 00 00       	callq  401ac0 <Bitpack_getu>
  401741:	89 45 f0             	mov    %eax,-0x10(%rbp)
  401744:	83 7d f0 0d          	cmpl   $0xd,-0x10(%rbp)
  401748:	75 3f                	jne    401789 <executeInstr+0x93>
  40174a:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40174d:	ba 19 00 00 00       	mov    $0x19,%edx
  401752:	be 03 00 00 00       	mov    $0x3,%esi
  401757:	48 89 c7             	mov    %rax,%rdi
  40175a:	e8 61 03 00 00       	callq  401ac0 <Bitpack_getu>
  40175f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  401762:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401765:	ba 00 00 00 00       	mov    $0x0,%edx
  40176a:	be 19 00 00 00       	mov    $0x19,%esi
  40176f:	48 89 c7             	mov    %rax,%rdi
  401772:	e8 49 03 00 00       	callq  401ac0 <Bitpack_getu>
  401777:	89 45 e0             	mov    %eax,-0x20(%rbp)
  40177a:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40177d:	8b 55 e0             	mov    -0x20(%rbp),%edx
  401780:	89 14 85 80 79 60 00 	mov    %edx,0x607980(,%rax,4)
  401787:	eb 63                	jmp    4017ec <executeInstr+0xf6>
  401789:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40178c:	ba 06 00 00 00       	mov    $0x6,%edx
  401791:	be 03 00 00 00       	mov    $0x3,%esi
  401796:	48 89 c7             	mov    %rax,%rdi
  401799:	e8 22 03 00 00       	callq  401ac0 <Bitpack_getu>
  40179e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4017a1:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4017a4:	ba 03 00 00 00       	mov    $0x3,%edx
  4017a9:	be 03 00 00 00       	mov    $0x3,%esi
  4017ae:	48 89 c7             	mov    %rax,%rdi
  4017b1:	e8 0a 03 00 00       	callq  401ac0 <Bitpack_getu>
  4017b6:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4017b9:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4017bc:	ba 00 00 00 00       	mov    $0x0,%edx
  4017c1:	be 03 00 00 00       	mov    $0x3,%esi
  4017c6:	48 89 c7             	mov    %rax,%rdi
  4017c9:	e8 f2 02 00 00       	callq  401ac0 <Bitpack_getu>
  4017ce:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4017d1:	8b 7d e4             	mov    -0x1c(%rbp),%edi
  4017d4:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  4017d7:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4017da:	8b 75 f0             	mov    -0x10(%rbp),%esi
  4017dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4017e1:	41 89 f8             	mov    %edi,%r8d
  4017e4:	48 89 c7             	mov    %rax,%rdi
  4017e7:	e8 14 00 00 00       	callq  401800 <executeHelper>
  4017ec:	8b 05 ae 61 20 00    	mov    0x2061ae(%rip),%eax        # 6079a0 <prog_counter>
  4017f2:	83 c0 01             	add    $0x1,%eax
  4017f5:	89 05 a5 61 20 00    	mov    %eax,0x2061a5(%rip)        # 6079a0 <prog_counter>
  4017fb:	e9 12 ff ff ff       	jmpq   401712 <executeInstr+0x1c>

0000000000401800 <executeHelper>:
  401800:	55                   	push   %rbp
  401801:	48 89 e5             	mov    %rsp,%rbp
  401804:	48 83 ec 20          	sub    $0x20,%rsp
  401808:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40180c:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40180f:	89 55 f0             	mov    %edx,-0x10(%rbp)
  401812:	89 4d ec             	mov    %ecx,-0x14(%rbp)
  401815:	44 89 45 e8          	mov    %r8d,-0x18(%rbp)
  401819:	83 7d f4 0c          	cmpl   $0xc,-0xc(%rbp)
  40181d:	0f 87 63 01 00 00    	ja     401986 <executeHelper+0x186>
  401823:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401826:	48 8b 04 c5 28 5b 40 	mov    0x405b28(,%rax,8),%rax
  40182d:	00 
  40182e:	ff e0                	jmpq   *%rax
  401830:	8b 55 e8             	mov    -0x18(%rbp),%edx
  401833:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  401836:	8b 45 f0             	mov    -0x10(%rbp),%eax
  401839:	89 ce                	mov    %ecx,%esi
  40183b:	89 c7                	mov    %eax,%edi
  40183d:	e8 72 fc ff ff       	callq  4014b4 <conditionalMove>
  401842:	e9 3f 01 00 00       	jmpq   401986 <executeHelper+0x186>
  401847:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40184a:	8b 14 85 80 79 60 00 	mov    0x607980(,%rax,4),%edx
  401851:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401854:	8b 0c 85 80 79 60 00 	mov    0x607980(,%rax,4),%ecx
  40185b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40185f:	89 ce                	mov    %ecx,%esi
  401861:	48 89 c7             	mov    %rax,%rdi
  401864:	e8 49 fa ff ff       	callq  4012b2 <segmentedLoad>
  401869:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40186c:	89 04 95 80 79 60 00 	mov    %eax,0x607980(,%rdx,4)
  401873:	e9 0e 01 00 00       	jmpq   401986 <executeHelper+0x186>
  401878:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40187b:	8b 0c 85 80 79 60 00 	mov    0x607980(,%rax,4),%ecx
  401882:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401885:	8b 14 85 80 79 60 00 	mov    0x607980(,%rax,4),%edx
  40188c:	8b 45 f0             	mov    -0x10(%rbp),%eax
  40188f:	8b 34 85 80 79 60 00 	mov    0x607980(,%rax,4),%esi
  401896:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40189a:	48 89 c7             	mov    %rax,%rdi
  40189d:	e8 6e fa ff ff       	callq  401310 <segmentedStore>
  4018a2:	e9 df 00 00 00       	jmpq   401986 <executeHelper+0x186>
  4018a7:	8b 55 e8             	mov    -0x18(%rbp),%edx
  4018aa:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  4018ad:	8b 45 f0             	mov    -0x10(%rbp),%eax
  4018b0:	89 ce                	mov    %ecx,%esi
  4018b2:	89 c7                	mov    %eax,%edi
  4018b4:	e8 2d fc ff ff       	callq  4014e6 <addition>
  4018b9:	e9 c8 00 00 00       	jmpq   401986 <executeHelper+0x186>
  4018be:	8b 55 e8             	mov    -0x18(%rbp),%edx
  4018c1:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  4018c4:	8b 45 f0             	mov    -0x10(%rbp),%eax
  4018c7:	89 ce                	mov    %ecx,%esi
  4018c9:	89 c7                	mov    %eax,%edi
  4018cb:	e8 46 fc ff ff       	callq  401516 <multiplication>
  4018d0:	e9 b1 00 00 00       	jmpq   401986 <executeHelper+0x186>
  4018d5:	8b 55 e8             	mov    -0x18(%rbp),%edx
  4018d8:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  4018db:	8b 45 f0             	mov    -0x10(%rbp),%eax
  4018de:	89 ce                	mov    %ecx,%esi
  4018e0:	89 c7                	mov    %eax,%edi
  4018e2:	e8 60 fc ff ff       	callq  401547 <division>
  4018e7:	e9 9a 00 00 00       	jmpq   401986 <executeHelper+0x186>
  4018ec:	8b 55 e8             	mov    -0x18(%rbp),%edx
  4018ef:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  4018f2:	8b 45 f0             	mov    -0x10(%rbp),%eax
  4018f5:	89 ce                	mov    %ecx,%esi
  4018f7:	89 c7                	mov    %eax,%edi
  4018f9:	e8 80 fc ff ff       	callq  40157e <bitwiseNAND>
  4018fe:	e9 83 00 00 00       	jmpq   401986 <executeHelper+0x186>
  401903:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401907:	48 89 c7             	mov    %rax,%rdi
  40190a:	e8 a3 fc ff ff       	callq  4015b2 <halt>
  40190f:	eb 75                	jmp    401986 <executeHelper+0x186>
  401911:	8b 45 e8             	mov    -0x18(%rbp),%eax
  401914:	8b 14 85 80 79 60 00 	mov    0x607980(,%rax,4),%edx
  40191b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40191f:	89 d6                	mov    %edx,%esi
  401921:	48 89 c7             	mov    %rax,%rdi
  401924:	e8 49 fa ff ff       	callq  401372 <mapSegment>
  401929:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40192c:	89 04 95 80 79 60 00 	mov    %eax,0x607980(,%rdx,4)
  401933:	eb 51                	jmp    401986 <executeHelper+0x186>
  401935:	8b 45 e8             	mov    -0x18(%rbp),%eax
  401938:	8b 14 85 80 79 60 00 	mov    0x607980(,%rax,4),%edx
  40193f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401943:	89 d6                	mov    %edx,%esi
  401945:	48 89 c7             	mov    %rax,%rdi
  401948:	e8 05 fb ff ff       	callq  401452 <unmapSegment>
  40194d:	eb 37                	jmp    401986 <executeHelper+0x186>
  40194f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  401952:	89 c7                	mov    %eax,%edi
  401954:	e8 7b fc ff ff       	callq  4015d4 <output>
  401959:	eb 2b                	jmp    401986 <executeHelper+0x186>
  40195b:	48 8b 05 fe 5f 20 00 	mov    0x205ffe(%rip),%rax        # 607960 <stdin@@GLIBC_2.2.5>
  401962:	8b 55 e8             	mov    -0x18(%rbp),%edx
  401965:	89 d6                	mov    %edx,%esi
  401967:	48 89 c7             	mov    %rax,%rdi
  40196a:	e8 84 fc ff ff       	callq  4015f3 <input>
  40196f:	eb 15                	jmp    401986 <executeHelper+0x186>
  401971:	8b 55 e8             	mov    -0x18(%rbp),%edx
  401974:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  401977:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40197b:	89 ce                	mov    %ecx,%esi
  40197d:	48 89 c7             	mov    %rax,%rdi
  401980:	e8 a3 fc ff ff       	callq  401628 <loadProgram>
  401985:	90                   	nop
  401986:	90                   	nop
  401987:	c9                   	leaveq 
  401988:	c3                   	retq   
  401989:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401990 <Bitpack_gets.part.0>:
  401990:	41 55                	push   %r13
  401992:	41 54                	push   %r12
  401994:	49 89 fc             	mov    %rdi,%r12
  401997:	55                   	push   %rbp
  401998:	89 f5                	mov    %esi,%ebp
  40199a:	53                   	push   %rbx
  40199b:	8d 1c 32             	lea    (%rdx,%rsi,1),%ebx
  40199e:	48 83 ec 08          	sub    $0x8,%rsp
  4019a2:	83 fb 40             	cmp    $0x40,%ebx
  4019a5:	77 49                	ja     4019f0 <Bitpack_gets.part.0+0x60>
  4019a7:	b9 40 00 00 00       	mov    $0x40,%ecx
  4019ac:	89 c8                	mov    %ecx,%eax
  4019ae:	29 d9                	sub    %ebx,%ecx
  4019b0:	29 e8                	sub    %ebp,%eax
  4019b2:	83 f9 40             	cmp    $0x40,%ecx
  4019b5:	41 89 cd             	mov    %ecx,%r13d
  4019b8:	89 c5                	mov    %eax,%ebp
  4019ba:	77 74                	ja     401a30 <Bitpack_gets.part.0+0xa0>
  4019bc:	bb 00 00 00 00       	mov    $0x0,%ebx
  4019c1:	74 09                	je     4019cc <Bitpack_gets.part.0+0x3c>
  4019c3:	4c 89 e3             	mov    %r12,%rbx
  4019c6:	44 89 e9             	mov    %r13d,%ecx
  4019c9:	48 d3 e3             	shl    %cl,%rbx
  4019cc:	83 fd 40             	cmp    $0x40,%ebp
  4019cf:	77 3f                	ja     401a10 <Bitpack_gets.part.0+0x80>
  4019d1:	b9 3f 00 00 00       	mov    $0x3f,%ecx
  4019d6:	74 02                	je     4019da <Bitpack_gets.part.0+0x4a>
  4019d8:	89 e9                	mov    %ebp,%ecx
  4019da:	48 83 c4 08          	add    $0x8,%rsp
  4019de:	48 89 d8             	mov    %rbx,%rax
  4019e1:	5b                   	pop    %rbx
  4019e2:	5d                   	pop    %rbp
  4019e3:	41 5c                	pop    %r12
  4019e5:	48 d3 f8             	sar    %cl,%rax
  4019e8:	41 5d                	pop    %r13
  4019ea:	c3                   	retq   
  4019eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4019f0:	ba 50 00 00 00       	mov    $0x50,%edx
  4019f5:	be 90 5b 40 00       	mov    $0x405b90,%esi
  4019fa:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  4019ff:	e8 8c 14 00 00       	callq  402e90 <Except_raise>
  401a04:	eb a1                	jmp    4019a7 <Bitpack_gets.part.0+0x17>
  401a06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401a0d:	00 00 00 
  401a10:	ba 2c 00 00 00       	mov    $0x2c,%edx
  401a15:	be 90 5b 40 00       	mov    $0x405b90,%esi
  401a1a:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  401a1f:	e8 6c 14 00 00       	callq  402e90 <Except_raise>
  401a24:	eb b2                	jmp    4019d8 <Bitpack_gets.part.0+0x48>
  401a26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401a2d:	00 00 00 
  401a30:	ba 14 00 00 00       	mov    $0x14,%edx
  401a35:	be 90 5b 40 00       	mov    $0x405b90,%esi
  401a3a:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  401a3f:	e8 4c 14 00 00       	callq  402e90 <Except_raise>
  401a44:	e9 7a ff ff ff       	jmpq   4019c3 <Bitpack_gets.part.0+0x33>
  401a49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401a50 <Bitpack_fitss>:
  401a50:	83 fe 3f             	cmp    $0x3f,%esi
  401a53:	b8 01 00 00 00       	mov    $0x1,%eax
  401a58:	77 1d                	ja     401a77 <Bitpack_fitss+0x27>
  401a5a:	b9 40 00 00 00       	mov    $0x40,%ecx
  401a5f:	31 c0                	xor    %eax,%eax
  401a61:	29 f1                	sub    %esi,%ecx
  401a63:	83 f9 40             	cmp    $0x40,%ecx
  401a66:	74 09                	je     401a71 <Bitpack_fitss+0x21>
  401a68:	48 89 f8             	mov    %rdi,%rax
  401a6b:	48 d3 e0             	shl    %cl,%rax
  401a6e:	48 d3 f8             	sar    %cl,%rax
  401a71:	48 39 c7             	cmp    %rax,%rdi
  401a74:	0f 94 c0             	sete   %al
  401a77:	f3 c3                	repz retq 
  401a79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401a80 <Bitpack_fitsu>:
  401a80:	83 fe 3f             	cmp    $0x3f,%esi
  401a83:	b8 01 00 00 00       	mov    $0x1,%eax
  401a88:	77 0b                	ja     401a95 <Bitpack_fitsu+0x15>
  401a8a:	89 f1                	mov    %esi,%ecx
  401a8c:	48 d3 ef             	shr    %cl,%rdi
  401a8f:	48 85 ff             	test   %rdi,%rdi
  401a92:	0f 94 c0             	sete   %al
  401a95:	f3 c3                	repz retq 
  401a97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401a9e:	00 00 

0000000000401aa0 <Bitpack_gets>:
  401aa0:	85 f6                	test   %esi,%esi
  401aa2:	74 0c                	je     401ab0 <Bitpack_gets+0x10>
  401aa4:	e9 e7 fe ff ff       	jmpq   401990 <Bitpack_gets.part.0>
  401aa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401ab0:	31 c0                	xor    %eax,%eax
  401ab2:	c3                   	retq   
  401ab3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  401aba:	84 00 00 00 00 00 

0000000000401ac0 <Bitpack_getu>:
  401ac0:	41 55                	push   %r13
  401ac2:	49 89 fd             	mov    %rdi,%r13
  401ac5:	41 54                	push   %r12
  401ac7:	55                   	push   %rbp
  401ac8:	89 f5                	mov    %esi,%ebp
  401aca:	53                   	push   %rbx
  401acb:	8d 1c 32             	lea    (%rdx,%rsi,1),%ebx
  401ace:	48 83 ec 08          	sub    $0x8,%rsp
  401ad2:	83 fb 40             	cmp    $0x40,%ebx
  401ad5:	77 49                	ja     401b20 <Bitpack_getu+0x60>
  401ad7:	b8 40 00 00 00       	mov    $0x40,%eax
  401adc:	89 c6                	mov    %eax,%esi
  401ade:	29 d8                	sub    %ebx,%eax
  401ae0:	29 ee                	sub    %ebp,%esi
  401ae2:	83 f8 40             	cmp    $0x40,%eax
  401ae5:	89 c3                	mov    %eax,%ebx
  401ae7:	89 f5                	mov    %esi,%ebp
  401ae9:	77 75                	ja     401b60 <Bitpack_getu+0xa0>
  401aeb:	41 bc 00 00 00 00    	mov    $0x0,%r12d
  401af1:	74 08                	je     401afb <Bitpack_getu+0x3b>
  401af3:	89 d9                	mov    %ebx,%ecx
  401af5:	49 d3 e5             	shl    %cl,%r13
  401af8:	4d 89 ec             	mov    %r13,%r12
  401afb:	83 fd 40             	cmp    $0x40,%ebp
  401afe:	77 40                	ja     401b40 <Bitpack_getu+0x80>
  401b00:	b8 00 00 00 00       	mov    $0x0,%eax
  401b05:	74 08                	je     401b0f <Bitpack_getu+0x4f>
  401b07:	4c 89 e0             	mov    %r12,%rax
  401b0a:	89 e9                	mov    %ebp,%ecx
  401b0c:	48 d3 e8             	shr    %cl,%rax
  401b0f:	48 83 c4 08          	add    $0x8,%rsp
  401b13:	5b                   	pop    %rbx
  401b14:	5d                   	pop    %rbp
  401b15:	41 5c                	pop    %r12
  401b17:	41 5d                	pop    %r13
  401b19:	c3                   	retq   
  401b1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401b20:	ba 58 00 00 00       	mov    $0x58,%edx
  401b25:	be 90 5b 40 00       	mov    $0x405b90,%esi
  401b2a:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  401b2f:	e8 5c 13 00 00       	callq  402e90 <Except_raise>
  401b34:	eb a1                	jmp    401ad7 <Bitpack_getu+0x17>
  401b36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401b3d:	00 00 00 
  401b40:	ba 20 00 00 00       	mov    $0x20,%edx
  401b45:	be 90 5b 40 00       	mov    $0x405b90,%esi
  401b4a:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  401b4f:	e8 3c 13 00 00       	callq  402e90 <Except_raise>
  401b54:	eb b1                	jmp    401b07 <Bitpack_getu+0x47>
  401b56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401b5d:	00 00 00 
  401b60:	ba 14 00 00 00       	mov    $0x14,%edx
  401b65:	be 90 5b 40 00       	mov    $0x405b90,%esi
  401b6a:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  401b6f:	e8 1c 13 00 00       	callq  402e90 <Except_raise>
  401b74:	e9 7a ff ff ff       	jmpq   401af3 <Bitpack_getu+0x33>
  401b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401b80 <Bitpack_newu>:
  401b80:	41 56                	push   %r14
  401b82:	49 89 fe             	mov    %rdi,%r14
  401b85:	41 55                	push   %r13
  401b87:	41 89 f5             	mov    %esi,%r13d
  401b8a:	41 54                	push   %r12
  401b8c:	49 89 cc             	mov    %rcx,%r12
  401b8f:	55                   	push   %rbp
  401b90:	89 d5                	mov    %edx,%ebp
  401b92:	53                   	push   %rbx
  401b93:	8d 1c 32             	lea    (%rdx,%rsi,1),%ebx
  401b96:	83 fb 40             	cmp    $0x40,%ebx
  401b99:	0f 87 f9 00 00 00    	ja     401c98 <Bitpack_newu+0x118>
  401b9f:	44 89 ee             	mov    %r13d,%esi
  401ba2:	4c 89 e7             	mov    %r12,%rdi
  401ba5:	e8 d6 fe ff ff       	callq  401a80 <Bitpack_fitsu>
  401baa:	84 c0                	test   %al,%al
  401bac:	0f 84 c6 00 00 00    	je     401c78 <Bitpack_newu+0xf8>
  401bb2:	83 fb 40             	cmp    $0x40,%ebx
  401bb5:	0f 87 85 00 00 00    	ja     401c40 <Bitpack_newu+0xc0>
  401bbb:	41 bd 00 00 00 00    	mov    $0x0,%r13d
  401bc1:	74 0d                	je     401bd0 <Bitpack_newu+0x50>
  401bc3:	4d 89 f5             	mov    %r14,%r13
  401bc6:	89 d9                	mov    %ebx,%ecx
  401bc8:	49 d3 ed             	shr    %cl,%r13
  401bcb:	89 d9                	mov    %ebx,%ecx
  401bcd:	49 d3 e5             	shl    %cl,%r13
  401bd0:	bb 40 00 00 00       	mov    $0x40,%ebx
  401bd5:	29 eb                	sub    %ebp,%ebx
  401bd7:	83 fb 40             	cmp    $0x40,%ebx
  401bda:	77 34                	ja     401c10 <Bitpack_newu+0x90>
  401bdc:	ba 00 00 00 00       	mov    $0x0,%edx
  401be1:	74 0d                	je     401bf0 <Bitpack_newu+0x70>
  401be3:	89 d9                	mov    %ebx,%ecx
  401be5:	49 d3 e6             	shl    %cl,%r14
  401be8:	4c 89 f2             	mov    %r14,%rdx
  401beb:	89 d9                	mov    %ebx,%ecx
  401bed:	48 d3 ea             	shr    %cl,%rdx
  401bf0:	5b                   	pop    %rbx
  401bf1:	4c 89 e0             	mov    %r12,%rax
  401bf4:	89 e9                	mov    %ebp,%ecx
  401bf6:	5d                   	pop    %rbp
  401bf7:	41 5c                	pop    %r12
  401bf9:	48 d3 e0             	shl    %cl,%rax
  401bfc:	4c 09 e8             	or     %r13,%rax
  401bff:	41 5d                	pop    %r13
  401c01:	48 09 d0             	or     %rdx,%rax
  401c04:	41 5e                	pop    %r14
  401c06:	c3                   	retq   
  401c07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401c0e:	00 00 
  401c10:	ba 14 00 00 00       	mov    $0x14,%edx
  401c15:	be 90 5b 40 00       	mov    $0x405b90,%esi
  401c1a:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  401c1f:	e8 6c 12 00 00       	callq  402e90 <Except_raise>
  401c24:	89 d9                	mov    %ebx,%ecx
  401c26:	ba 20 00 00 00       	mov    $0x20,%edx
  401c2b:	be 90 5b 40 00       	mov    $0x405b90,%esi
  401c30:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  401c35:	49 d3 e6             	shl    %cl,%r14
  401c38:	e8 53 12 00 00       	callq  402e90 <Except_raise>
  401c3d:	eb a9                	jmp    401be8 <Bitpack_newu+0x68>
  401c3f:	90                   	nop
  401c40:	ba 20 00 00 00       	mov    $0x20,%edx
  401c45:	be 90 5b 40 00       	mov    $0x405b90,%esi
  401c4a:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  401c4f:	e8 3c 12 00 00       	callq  402e90 <Except_raise>
  401c54:	4d 89 f5             	mov    %r14,%r13
  401c57:	89 d9                	mov    %ebx,%ecx
  401c59:	ba 14 00 00 00       	mov    $0x14,%edx
  401c5e:	be 90 5b 40 00       	mov    $0x405b90,%esi
  401c63:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  401c68:	49 d3 ed             	shr    %cl,%r13
  401c6b:	e8 20 12 00 00       	callq  402e90 <Except_raise>
  401c70:	e9 56 ff ff ff       	jmpq   401bcb <Bitpack_newu+0x4b>
  401c75:	0f 1f 00             	nopl   (%rax)
  401c78:	ba 65 00 00 00       	mov    $0x65,%edx
  401c7d:	be 90 5b 40 00       	mov    $0x405b90,%esi
  401c82:	bf 10 71 60 00       	mov    $0x607110,%edi
  401c87:	e8 04 12 00 00       	callq  402e90 <Except_raise>
  401c8c:	e9 21 ff ff ff       	jmpq   401bb2 <Bitpack_newu+0x32>
  401c91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401c98:	ba 63 00 00 00       	mov    $0x63,%edx
  401c9d:	be 90 5b 40 00       	mov    $0x405b90,%esi
  401ca2:	bf c0 6d 60 00       	mov    $0x606dc0,%edi
  401ca7:	e8 e4 11 00 00       	callq  402e90 <Except_raise>
  401cac:	e9 ee fe ff ff       	jmpq   401b9f <Bitpack_newu+0x1f>
  401cb1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  401cb8:	0f 1f 84 00 00 00 00 
  401cbf:	00 

0000000000401cc0 <Bitpack_news>:
  401cc0:	41 55                	push   %r13
  401cc2:	41 89 d5             	mov    %edx,%r13d
  401cc5:	41 54                	push   %r12
  401cc7:	49 89 fc             	mov    %rdi,%r12
  401cca:	48 89 cf             	mov    %rcx,%rdi
  401ccd:	55                   	push   %rbp
  401cce:	48 89 cd             	mov    %rcx,%rbp
  401cd1:	53                   	push   %rbx
  401cd2:	89 f3                	mov    %esi,%ebx
  401cd4:	48 83 ec 08          	sub    $0x8,%rsp
  401cd8:	e8 73 fd ff ff       	callq  401a50 <Bitpack_fitss>
  401cdd:	84 c0                	test   %al,%al
  401cdf:	75 14                	jne    401cf5 <Bitpack_news+0x35>
  401ce1:	ba 6f 00 00 00       	mov    $0x6f,%edx
  401ce6:	be 90 5b 40 00       	mov    $0x405b90,%esi
  401ceb:	bf 10 71 60 00       	mov    $0x607110,%edi
  401cf0:	e8 9b 11 00 00       	callq  402e90 <Except_raise>
  401cf5:	89 de                	mov    %ebx,%esi
  401cf7:	48 89 ef             	mov    %rbp,%rdi
  401cfa:	31 d2                	xor    %edx,%edx
  401cfc:	e8 bf fd ff ff       	callq  401ac0 <Bitpack_getu>
  401d01:	48 83 c4 08          	add    $0x8,%rsp
  401d05:	89 de                	mov    %ebx,%esi
  401d07:	4c 89 e7             	mov    %r12,%rdi
  401d0a:	5b                   	pop    %rbx
  401d0b:	5d                   	pop    %rbp
  401d0c:	41 5c                	pop    %r12
  401d0e:	44 89 ea             	mov    %r13d,%edx
  401d11:	48 89 c1             	mov    %rax,%rcx
  401d14:	41 5d                	pop    %r13
  401d16:	e9 65 fe ff ff       	jmpq   401b80 <Bitpack_newu>
  401d1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401d20 <Bitpack_run_tests>:
  401d20:	41 56                	push   %r14
  401d22:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401d27:	55                   	push   %rbp
  401d28:	53                   	push   %rbx
  401d29:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
  401d30:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
  401d37:	00 
  401d38:	48 b8 ef be ad de ce 	movabs $0xfeedfacedeadbeef,%rax
  401d3f:	fa ed fe 
  401d42:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
  401d49:	00 
  401d4a:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
  401d51:	00 
  401d52:	8b 44 24 58          	mov    0x58(%rsp),%eax
  401d56:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
  401d5b:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
  401d60:	40 88 7c 24 43       	mov    %dil,0x43(%rsp)
  401d65:	48 c7 84 24 b0 00 00 	movq   $0x0,0xb0(%rsp)
  401d6c:	00 00 00 00 00 
  401d71:	83 f8 02             	cmp    $0x2,%eax
  401d74:	c7 84 24 a0 00 00 00 	movl   $0x0,0xa0(%rsp)
  401d7b:	00 00 00 00 
  401d7f:	c7 84 24 a4 00 00 00 	movl   $0x6,0xa4(%rsp)
  401d86:	06 00 00 00 
  401d8a:	c7 84 24 a8 00 00 00 	movl   $0x8,0xa8(%rsp)
  401d91:	08 00 00 00 
  401d95:	c7 84 24 ac 00 00 00 	movl   $0x40,0xac(%rsp)
  401d9c:	40 00 00 00 
  401da0:	c7 84 24 90 00 00 00 	movl   $0x10,0x90(%rsp)
  401da7:	10 00 00 00 
  401dab:	c7 84 24 94 00 00 00 	movl   $0x0,0x94(%rsp)
  401db2:	00 00 00 00 
  401db6:	c7 84 24 98 00 00 00 	movl   $0x63,0x98(%rsp)
  401dbd:	63 00 00 00 
  401dc1:	48 c7 84 24 00 01 00 	movq   $0xfffffffffffffffe,0x100(%rsp)
  401dc8:	00 fe ff ff ff 
  401dcd:	48 c7 84 24 08 01 00 	movq   $0x7,0x108(%rsp)
  401dd4:	00 07 00 00 00 
  401dd9:	48 c7 84 24 10 01 00 	movq   $0x0,0x110(%rsp)
  401de0:	00 00 00 00 00 
  401de5:	48 c7 84 24 18 01 00 	movq   $0xb,0x118(%rsp)
  401dec:	00 0b 00 00 00 
  401df1:	48 c7 84 24 20 01 00 	movq   $0xfffffffffffffff8,0x120(%rsp)
  401df8:	00 f8 ff ff ff 
  401dfd:	48 c7 84 24 28 01 00 	movq   $0xfffffffffffffff5,0x128(%rsp)
  401e04:	00 f5 ff ff ff 
  401e09:	48 c7 84 24 d0 00 00 	movq   $0x33,0xd0(%rsp)
  401e10:	00 33 00 00 00 
  401e15:	48 c7 84 24 d8 00 00 	movq   $0x7,0xd8(%rsp)
  401e1c:	00 07 00 00 00 
  401e21:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
  401e28:	00 00 00 00 00 
  401e2d:	48 c7 84 24 e8 00 00 	movq   $0xb,0xe8(%rsp)
  401e34:	00 0b 00 00 00 
  401e39:	48 c7 84 24 f0 00 00 	movq   $0x1,0xf0(%rsp)
  401e40:	00 01 00 00 00 
  401e45:	0f 87 bd 02 00 00    	ja     402108 <Bitpack_run_tests+0x3e8>
  401e4b:	48 8d 84 24 38 01 00 	lea    0x138(%rsp),%rax
  401e52:	00 
  401e53:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  401e58:	8b 44 24 58          	mov    0x58(%rsp),%eax
  401e5c:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%rsp)
  401e63:	00 
  401e64:	48 8b 84 c4 b0 00 00 	mov    0xb0(%rsp,%rax,8),%rax
  401e6b:	00 
  401e6c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  401e71:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  401e75:	83 f8 03             	cmp    $0x3,%eax
  401e78:	0f 87 72 02 00 00    	ja     4020f0 <Bitpack_run_tests+0x3d0>
  401e7e:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  401e82:	c7 44 24 60 00 00 00 	movl   $0x0,0x60(%rsp)
  401e89:	00 
  401e8a:	b9 40 00 00 00       	mov    $0x40,%ecx
  401e8f:	8b 84 84 a0 00 00 00 	mov    0xa0(%rsp,%rax,4),%eax
  401e96:	89 c3                	mov    %eax,%ebx
  401e98:	89 44 24 0c          	mov    %eax,0xc(%rsp)
  401e9c:	8b 44 24 60          	mov    0x60(%rsp),%eax
  401ea0:	29 d9                	sub    %ebx,%ecx
  401ea2:	89 4c 24 44          	mov    %ecx,0x44(%rsp)
  401ea6:	83 f8 02             	cmp    $0x2,%eax
  401ea9:	0f 87 29 02 00 00    	ja     4020d8 <Bitpack_run_tests+0x3b8>
  401eaf:	90                   	nop
  401eb0:	8b 44 24 60          	mov    0x60(%rsp),%eax
  401eb4:	83 bc 84 90 00 00 00 	cmpl   $0x63,0x90(%rsp,%rax,4)
  401ebb:	63 
  401ebc:	0f 84 76 09 00 00    	je     402838 <Bitpack_run_tests+0xb18>
  401ec2:	8b 44 24 60          	mov    0x60(%rsp),%eax
  401ec6:	8b 84 84 90 00 00 00 	mov    0x90(%rsp,%rax,4),%eax
  401ecd:	89 44 24 64          	mov    %eax,0x64(%rsp)
  401ed1:	c7 44 24 68 00 00 00 	movl   $0x0,0x68(%rsp)
  401ed8:	00 
  401ed9:	8b 44 24 68          	mov    0x68(%rsp),%eax
  401edd:	83 f8 05             	cmp    $0x5,%eax
  401ee0:	76 26                	jbe    401f08 <Bitpack_run_tests+0x1e8>
  401ee2:	e9 d9 00 00 00       	jmpq   401fc0 <Bitpack_run_tests+0x2a0>
  401ee7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401eee:	00 00 
  401ef0:	8b 44 24 68          	mov    0x68(%rsp),%eax
  401ef4:	83 c0 01             	add    $0x1,%eax
  401ef7:	89 44 24 68          	mov    %eax,0x68(%rsp)
  401efb:	8b 44 24 68          	mov    0x68(%rsp),%eax
  401eff:	83 f8 05             	cmp    $0x5,%eax
  401f02:	0f 87 b8 00 00 00    	ja     401fc0 <Bitpack_run_tests+0x2a0>
  401f08:	8b 44 24 68          	mov    0x68(%rsp),%eax
  401f0c:	48 83 bc c4 00 01 00 	cmpq   $0x0,0x100(%rsp,%rax,8)
  401f13:	00 00 
  401f15:	74 08                	je     401f1f <Bitpack_run_tests+0x1ff>
  401f17:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  401f1b:	85 c0                	test   %eax,%eax
  401f1d:	74 d1                	je     401ef0 <Bitpack_run_tests+0x1d0>
  401f1f:	8b 44 24 64          	mov    0x64(%rsp),%eax
  401f23:	03 44 24 0c          	add    0xc(%rsp),%eax
  401f27:	83 f8 40             	cmp    $0x40,%eax
  401f2a:	77 c4                	ja     401ef0 <Bitpack_run_tests+0x1d0>
  401f2c:	48 8b 05 75 5a 20 00 	mov    0x205a75(%rip),%rax        # 6079a8 <Except_stack>
  401f33:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  401f38:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  401f3f:	00 
  401f40:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  401f47:	00 
  401f48:	48 89 05 59 5a 20 00 	mov    %rax,0x205a59(%rip)        # 6079a8 <Except_stack>
  401f4f:	e8 3c ee ff ff       	callq  400d90 <_setjmp@plt>
  401f54:	89 44 24 6c          	mov    %eax,0x6c(%rsp)
  401f58:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
  401f5c:	85 c0                	test   %eax,%eax
  401f5e:	0f 84 3c 05 00 00    	je     4024a0 <Bitpack_run_tests+0x780>
  401f64:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  401f69:	c7 44 24 6c 02 00 00 	movl   $0x2,0x6c(%rsp)
  401f70:	00 
  401f71:	be 06 00 00 00       	mov    $0x6,%esi
  401f76:	74 2d                	je     401fa5 <Bitpack_run_tests+0x285>
  401f78:	8b 44 24 64          	mov    0x64(%rsp),%eax
  401f7c:	85 c0                	test   %eax,%eax
  401f7e:	0f 84 a4 01 00 00    	je     402128 <Bitpack_run_tests+0x408>
  401f84:	8b 44 24 64          	mov    0x64(%rsp),%eax
  401f88:	03 44 24 0c          	add    0xc(%rsp),%eax
  401f8c:	83 f8 40             	cmp    $0x40,%eax
  401f8f:	0f 84 93 01 00 00    	je     402128 <Bitpack_run_tests+0x408>
  401f95:	31 c0                	xor    %eax,%eax
  401f97:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
  401f9b:	31 f6                	xor    %esi,%esi
  401f9d:	85 c9                	test   %ecx,%ecx
  401f9f:	40 0f 94 c6          	sete   %sil
  401fa3:	09 c6                	or     %eax,%esi
  401fa5:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  401faa:	31 d2                	xor    %edx,%edx
  401fac:	bf c0 5b 40 00       	mov    $0x405bc0,%edi
  401fb1:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  401fb6:	ff d0                	callq  *%rax
  401fb8:	e9 33 ff ff ff       	jmpq   401ef0 <Bitpack_run_tests+0x1d0>
  401fbd:	0f 1f 00             	nopl   (%rax)
  401fc0:	c7 44 24 7c 00 00 00 	movl   $0x0,0x7c(%rsp)
  401fc7:	00 
  401fc8:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  401fcc:	83 f8 04             	cmp    $0x4,%eax
  401fcf:	76 27                	jbe    401ff8 <Bitpack_run_tests+0x2d8>
  401fd1:	e9 ea 00 00 00       	jmpq   4020c0 <Bitpack_run_tests+0x3a0>
  401fd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401fdd:	00 00 00 
  401fe0:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  401fe4:	83 c0 01             	add    $0x1,%eax
  401fe7:	89 44 24 7c          	mov    %eax,0x7c(%rsp)
  401feb:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  401fef:	83 f8 04             	cmp    $0x4,%eax
  401ff2:	0f 87 c8 00 00 00    	ja     4020c0 <Bitpack_run_tests+0x3a0>
  401ff8:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  401ffc:	48 83 bc c4 d0 00 00 	cmpq   $0x0,0xd0(%rsp,%rax,8)
  402003:	00 00 
  402005:	74 0a                	je     402011 <Bitpack_run_tests+0x2f1>
  402007:	44 8b 54 24 0c       	mov    0xc(%rsp),%r10d
  40200c:	45 85 d2             	test   %r10d,%r10d
  40200f:	74 cf                	je     401fe0 <Bitpack_run_tests+0x2c0>
  402011:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402015:	03 44 24 0c          	add    0xc(%rsp),%eax
  402019:	83 f8 40             	cmp    $0x40,%eax
  40201c:	77 c2                	ja     401fe0 <Bitpack_run_tests+0x2c0>
  40201e:	48 8b 05 83 59 20 00 	mov    0x205983(%rip),%rax        # 6079a8 <Except_stack>
  402025:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40202a:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  402031:	00 
  402032:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  402039:	00 
  40203a:	48 89 05 67 59 20 00 	mov    %rax,0x205967(%rip)        # 6079a8 <Except_stack>
  402041:	e8 4a ed ff ff       	callq  400d90 <_setjmp@plt>
  402046:	89 84 24 80 00 00 00 	mov    %eax,0x80(%rsp)
  40204d:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
  402054:	85 c0                	test   %eax,%eax
  402056:	0f 84 dc 00 00 00    	je     402138 <Bitpack_run_tests+0x418>
  40205c:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402061:	c7 84 24 80 00 00 00 	movl   $0x2,0x80(%rsp)
  402068:	02 00 00 00 
  40206c:	be 06 00 00 00       	mov    $0x6,%esi
  402071:	74 2d                	je     4020a0 <Bitpack_run_tests+0x380>
  402073:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402077:	85 c0                	test   %eax,%eax
  402079:	0f 84 99 00 00 00    	je     402118 <Bitpack_run_tests+0x3f8>
  40207f:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402083:	03 44 24 0c          	add    0xc(%rsp),%eax
  402087:	83 f8 40             	cmp    $0x40,%eax
  40208a:	0f 84 88 00 00 00    	je     402118 <Bitpack_run_tests+0x3f8>
  402090:	31 c0                	xor    %eax,%eax
  402092:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  402096:	31 f6                	xor    %esi,%esi
  402098:	85 d2                	test   %edx,%edx
  40209a:	40 0f 94 c6          	sete   %sil
  40209e:	09 c6                	or     %eax,%esi
  4020a0:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4020a5:	31 d2                	xor    %edx,%edx
  4020a7:	bf 00 5d 40 00       	mov    $0x405d00,%edi
  4020ac:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4020b1:	ff d0                	callq  *%rax
  4020b3:	e9 28 ff ff ff       	jmpq   401fe0 <Bitpack_run_tests+0x2c0>
  4020b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4020bf:	00 
  4020c0:	8b 44 24 60          	mov    0x60(%rsp),%eax
  4020c4:	83 c0 01             	add    $0x1,%eax
  4020c7:	89 44 24 60          	mov    %eax,0x60(%rsp)
  4020cb:	8b 44 24 60          	mov    0x60(%rsp),%eax
  4020cf:	83 f8 02             	cmp    $0x2,%eax
  4020d2:	0f 86 d8 fd ff ff    	jbe    401eb0 <Bitpack_run_tests+0x190>
  4020d8:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  4020dc:	83 c0 01             	add    $0x1,%eax
  4020df:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
  4020e3:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  4020e7:	83 f8 03             	cmp    $0x3,%eax
  4020ea:	0f 86 8e fd ff ff    	jbe    401e7e <Bitpack_run_tests+0x15e>
  4020f0:	8b 44 24 58          	mov    0x58(%rsp),%eax
  4020f4:	83 c0 01             	add    $0x1,%eax
  4020f7:	89 44 24 58          	mov    %eax,0x58(%rsp)
  4020fb:	8b 44 24 58          	mov    0x58(%rsp),%eax
  4020ff:	83 f8 02             	cmp    $0x2,%eax
  402102:	0f 86 50 fd ff ff    	jbe    401e58 <Bitpack_run_tests+0x138>
  402108:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
  40210f:	5b                   	pop    %rbx
  402110:	5d                   	pop    %rbp
  402111:	41 5e                	pop    %r14
  402113:	c3                   	retq   
  402114:	0f 1f 40 00          	nopl   0x0(%rax)
  402118:	b8 04 00 00 00       	mov    $0x4,%eax
  40211d:	e9 70 ff ff ff       	jmpq   402092 <Bitpack_run_tests+0x372>
  402122:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402128:	b8 04 00 00 00       	mov    $0x4,%eax
  40212d:	e9 65 fe ff ff       	jmpq   401f97 <Bitpack_run_tests+0x277>
  402132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402138:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  40213c:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  402140:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402144:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402149:	48 8b 8c c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%rcx
  402150:	00 
  402151:	e8 2a fa ff ff       	callq  401b80 <Bitpack_newu>
  402156:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
  40215d:	85 c0                	test   %eax,%eax
  40215f:	75 11                	jne    402172 <Bitpack_run_tests+0x452>
  402161:	48 8b 05 40 58 20 00 	mov    0x205840(%rip),%rax        # 6079a8 <Except_stack>
  402168:	48 8b 00             	mov    (%rax),%rax
  40216b:	48 89 05 36 58 20 00 	mov    %rax,0x205836(%rip)        # 6079a8 <Except_stack>
  402172:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
  402179:	83 f8 01             	cmp    $0x1,%eax
  40217c:	0f 84 d0 0b 00 00    	je     402d52 <Bitpack_run_tests+0x1032>
  402182:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  402186:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  40218a:	8b 54 24 64          	mov    0x64(%rsp),%edx
  40218e:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402193:	48 8b 8c c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%rcx
  40219a:	00 
  40219b:	e8 e0 f9 ff ff       	callq  401b80 <Bitpack_newu>
  4021a0:	80 7c 24 43 00       	cmpb   $0x0,0x43(%rsp)
  4021a5:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  4021aa:	0f 85 98 0a 00 00    	jne    402c48 <Bitpack_run_tests+0xf28>
  4021b0:	48 8b 05 f1 57 20 00 	mov    0x2057f1(%rip),%rax        # 6079a8 <Except_stack>
  4021b7:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4021bc:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  4021c3:	00 
  4021c4:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  4021cb:	00 
  4021cc:	48 89 05 d5 57 20 00 	mov    %rax,0x2057d5(%rip)        # 6079a8 <Except_stack>
  4021d3:	e8 b8 eb ff ff       	callq  400d90 <_setjmp@plt>
  4021d8:	89 84 24 84 00 00 00 	mov    %eax,0x84(%rsp)
  4021df:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
  4021e6:	85 c0                	test   %eax,%eax
  4021e8:	0f 84 c2 09 00 00    	je     402bb0 <Bitpack_run_tests+0xe90>
  4021ee:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
  4021f3:	c7 84 24 84 00 00 00 	movl   $0x2,0x84(%rsp)
  4021fa:	02 00 00 00 
  4021fe:	bb 05 00 00 00       	mov    $0x5,%ebx
  402203:	45 85 c0             	test   %r8d,%r8d
  402206:	74 28                	je     402230 <Bitpack_run_tests+0x510>
  402208:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  40220d:	b3 06                	mov    $0x6,%bl
  40220f:	74 1f                	je     402230 <Bitpack_run_tests+0x510>
  402211:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402215:	85 c0                	test   %eax,%eax
  402217:	0f 84 b3 0a 00 00    	je     402cd0 <Bitpack_run_tests+0xfb0>
  40221d:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402221:	03 44 24 0c          	add    0xc(%rsp),%eax
  402225:	83 f8 40             	cmp    $0x40,%eax
  402228:	0f 84 a2 0a 00 00    	je     402cd0 <Bitpack_run_tests+0xfb0>
  40222e:	30 db                	xor    %bl,%bl
  402230:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  402235:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  40223a:	bf 60 5c 40 00       	mov    $0x405c60,%edi
  40223f:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402243:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  402248:	31 c0                	xor    %eax,%eax
  40224a:	e8 29 1d 00 00       	callq  403f78 <Fmt_string>
  40224f:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402254:	31 d2                	xor    %edx,%edx
  402256:	48 89 c7             	mov    %rax,%rdi
  402259:	89 de                	mov    %ebx,%esi
  40225b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402260:	ff d0                	callq  *%rax
  402262:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
  402269:	85 c0                	test   %eax,%eax
  40226b:	75 11                	jne    40227e <Bitpack_run_tests+0x55e>
  40226d:	48 8b 05 34 57 20 00 	mov    0x205734(%rip),%rax        # 6079a8 <Except_stack>
  402274:	48 8b 00             	mov    (%rax),%rax
  402277:	48 89 05 2a 57 20 00 	mov    %rax,0x20572a(%rip)        # 6079a8 <Except_stack>
  40227e:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
  402285:	83 f8 01             	cmp    $0x1,%eax
  402288:	0f 84 27 0b 00 00    	je     402db5 <Bitpack_run_tests+0x1095>
  40228e:	48 8b 05 13 57 20 00 	mov    0x205713(%rip),%rax        # 6079a8 <Except_stack>
  402295:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40229a:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  4022a1:	00 
  4022a2:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  4022a9:	00 
  4022aa:	48 89 05 f7 56 20 00 	mov    %rax,0x2056f7(%rip)        # 6079a8 <Except_stack>
  4022b1:	e8 da ea ff ff       	callq  400d90 <_setjmp@plt>
  4022b6:	89 84 24 88 00 00 00 	mov    %eax,0x88(%rsp)
  4022bd:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
  4022c4:	85 c0                	test   %eax,%eax
  4022c6:	0f 84 04 08 00 00    	je     402ad0 <Bitpack_run_tests+0xdb0>
  4022cc:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  4022d0:	c7 84 24 88 00 00 00 	movl   $0x2,0x88(%rsp)
  4022d7:	02 00 00 00 
  4022db:	bb 05 00 00 00       	mov    $0x5,%ebx
  4022e0:	85 ff                	test   %edi,%edi
  4022e2:	74 2c                	je     402310 <Bitpack_run_tests+0x5f0>
  4022e4:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4022e9:	b3 06                	mov    $0x6,%bl
  4022eb:	74 23                	je     402310 <Bitpack_run_tests+0x5f0>
  4022ed:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4022f1:	85 c0                	test   %eax,%eax
  4022f3:	0f 84 97 09 00 00    	je     402c90 <Bitpack_run_tests+0xf70>
  4022f9:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4022fd:	03 44 24 0c          	add    0xc(%rsp),%eax
  402301:	83 f8 40             	cmp    $0x40,%eax
  402304:	0f 84 86 09 00 00    	je     402c90 <Bitpack_run_tests+0xf70>
  40230a:	30 db                	xor    %bl,%bl
  40230c:	0f 1f 40 00          	nopl   0x0(%rax)
  402310:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402314:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402318:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  40231e:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402322:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402326:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  40232a:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  40232f:	41 29 f1             	sub    %esi,%r9d
  402332:	be 40 00 00 00       	mov    $0x40,%esi
  402337:	29 d6                	sub    %edx,%esi
  402339:	89 f2                	mov    %esi,%edx
  40233b:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  402340:	01 f8                	add    %edi,%eax
  402342:	01 f9                	add    %edi,%ecx
  402344:	29 fa                	sub    %edi,%edx
  402346:	89 04 24             	mov    %eax,(%rsp)
  402349:	41 29 f9             	sub    %edi,%r9d
  40234c:	31 c0                	xor    %eax,%eax
  40234e:	bf 98 5c 40 00       	mov    $0x405c98,%edi
  402353:	e8 20 1c 00 00       	callq  403f78 <Fmt_string>
  402358:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  40235d:	31 d2                	xor    %edx,%edx
  40235f:	48 89 c7             	mov    %rax,%rdi
  402362:	89 de                	mov    %ebx,%esi
  402364:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402369:	ff d0                	callq  *%rax
  40236b:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
  402372:	85 c0                	test   %eax,%eax
  402374:	75 11                	jne    402387 <Bitpack_run_tests+0x667>
  402376:	48 8b 05 2b 56 20 00 	mov    0x20562b(%rip),%rax        # 6079a8 <Except_stack>
  40237d:	48 8b 00             	mov    (%rax),%rax
  402380:	48 89 05 21 56 20 00 	mov    %rax,0x205621(%rip)        # 6079a8 <Except_stack>
  402387:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
  40238e:	83 f8 01             	cmp    $0x1,%eax
  402391:	0f 84 3f 0a 00 00    	je     402dd6 <Bitpack_run_tests+0x10b6>
  402397:	48 8b 05 0a 56 20 00 	mov    0x20560a(%rip),%rax        # 6079a8 <Except_stack>
  40239e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4023a3:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  4023aa:	00 
  4023ab:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  4023b2:	00 
  4023b3:	48 89 05 ee 55 20 00 	mov    %rax,0x2055ee(%rip)        # 6079a8 <Except_stack>
  4023ba:	e8 d1 e9 ff ff       	callq  400d90 <_setjmp@plt>
  4023bf:	89 84 24 8c 00 00 00 	mov    %eax,0x8c(%rsp)
  4023c6:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
  4023cd:	85 c0                	test   %eax,%eax
  4023cf:	0f 84 63 06 00 00    	je     402a38 <Bitpack_run_tests+0xd18>
  4023d5:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  4023d9:	c7 84 24 8c 00 00 00 	movl   $0x2,0x8c(%rsp)
  4023e0:	02 00 00 00 
  4023e4:	bb 05 00 00 00       	mov    $0x5,%ebx
  4023e9:	85 f6                	test   %esi,%esi
  4023eb:	74 2b                	je     402418 <Bitpack_run_tests+0x6f8>
  4023ed:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4023f2:	b3 06                	mov    $0x6,%bl
  4023f4:	74 22                	je     402418 <Bitpack_run_tests+0x6f8>
  4023f6:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4023fa:	85 c0                	test   %eax,%eax
  4023fc:	0f 84 9e 08 00 00    	je     402ca0 <Bitpack_run_tests+0xf80>
  402402:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402406:	03 44 24 0c          	add    0xc(%rsp),%eax
  40240a:	83 f8 40             	cmp    $0x40,%eax
  40240d:	0f 84 8d 08 00 00    	je     402ca0 <Bitpack_run_tests+0xf80>
  402413:	30 db                	xor    %bl,%bl
  402415:	0f 1f 00             	nopl   (%rax)
  402418:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  40241c:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  402420:	bf 78 5d 40 00       	mov    $0x405d78,%edi
  402425:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402429:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  40242e:	4c 8b 84 c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%r8
  402435:	00 
  402436:	31 c0                	xor    %eax,%eax
  402438:	e8 3b 1b 00 00       	callq  403f78 <Fmt_string>
  40243d:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402442:	31 d2                	xor    %edx,%edx
  402444:	48 89 c7             	mov    %rax,%rdi
  402447:	89 de                	mov    %ebx,%esi
  402449:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  40244e:	ff d0                	callq  *%rax
  402450:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
  402457:	85 c0                	test   %eax,%eax
  402459:	75 11                	jne    40246c <Bitpack_run_tests+0x74c>
  40245b:	48 8b 05 46 55 20 00 	mov    0x205546(%rip),%rax        # 6079a8 <Except_stack>
  402462:	48 8b 00             	mov    (%rax),%rax
  402465:	48 89 05 3c 55 20 00 	mov    %rax,0x20553c(%rip)        # 6079a8 <Except_stack>
  40246c:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
  402473:	83 f8 01             	cmp    $0x1,%eax
  402476:	0f 85 64 fb ff ff    	jne    401fe0 <Bitpack_run_tests+0x2c0>
  40247c:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402483:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  40248a:	00 
  40248b:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402492:	00 
  402493:	e8 f8 09 00 00       	callq  402e90 <Except_raise>
  402498:	e9 43 fb ff ff       	jmpq   401fe0 <Bitpack_run_tests+0x2c0>
  40249d:	0f 1f 00             	nopl   (%rax)
  4024a0:	8b 44 24 68          	mov    0x68(%rsp),%eax
  4024a4:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  4024a8:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4024ac:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  4024b1:	48 8b 8c c4 00 01 00 	mov    0x100(%rsp,%rax,8),%rcx
  4024b8:	00 
  4024b9:	e8 02 f8 ff ff       	callq  401cc0 <Bitpack_news>
  4024be:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
  4024c2:	85 c0                	test   %eax,%eax
  4024c4:	75 11                	jne    4024d7 <Bitpack_run_tests+0x7b7>
  4024c6:	48 8b 05 db 54 20 00 	mov    0x2054db(%rip),%rax        # 6079a8 <Except_stack>
  4024cd:	48 8b 00             	mov    (%rax),%rax
  4024d0:	48 89 05 d1 54 20 00 	mov    %rax,0x2054d1(%rip)        # 6079a8 <Except_stack>
  4024d7:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
  4024db:	83 f8 01             	cmp    $0x1,%eax
  4024de:	0f 84 b0 08 00 00    	je     402d94 <Bitpack_run_tests+0x1074>
  4024e4:	8b 44 24 68          	mov    0x68(%rsp),%eax
  4024e8:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  4024ec:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4024f0:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  4024f5:	48 8b 8c c4 00 01 00 	mov    0x100(%rsp,%rax,8),%rcx
  4024fc:	00 
  4024fd:	e8 be f7 ff ff       	callq  401cc0 <Bitpack_news>
  402502:	80 7c 24 43 00       	cmpb   $0x0,0x43(%rsp)
  402507:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
  40250c:	0f 85 1e 04 00 00    	jne    402930 <Bitpack_run_tests+0xc10>
  402512:	48 8b 05 8f 54 20 00 	mov    0x20548f(%rip),%rax        # 6079a8 <Except_stack>
  402519:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40251e:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  402525:	00 
  402526:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  40252d:	00 
  40252e:	48 89 05 73 54 20 00 	mov    %rax,0x205473(%rip)        # 6079a8 <Except_stack>
  402535:	e8 56 e8 ff ff       	callq  400d90 <_setjmp@plt>
  40253a:	89 44 24 70          	mov    %eax,0x70(%rsp)
  40253e:	8b 44 24 70          	mov    0x70(%rsp),%eax
  402542:	85 c0                	test   %eax,%eax
  402544:	0f 84 56 04 00 00    	je     4029a0 <Bitpack_run_tests+0xc80>
  40254a:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  40254f:	c7 44 24 70 02 00 00 	movl   $0x2,0x70(%rsp)
  402556:	00 
  402557:	bb 05 00 00 00       	mov    $0x5,%ebx
  40255c:	45 85 f6             	test   %r14d,%r14d
  40255f:	74 2f                	je     402590 <Bitpack_run_tests+0x870>
  402561:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402566:	b3 06                	mov    $0x6,%bl
  402568:	74 26                	je     402590 <Bitpack_run_tests+0x870>
  40256a:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40256e:	85 c0                	test   %eax,%eax
  402570:	0f 84 4a 07 00 00    	je     402cc0 <Bitpack_run_tests+0xfa0>
  402576:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40257a:	03 44 24 0c          	add    0xc(%rsp),%eax
  40257e:	83 f8 40             	cmp    $0x40,%eax
  402581:	0f 84 39 07 00 00    	je     402cc0 <Bitpack_run_tests+0xfa0>
  402587:	30 db                	xor    %bl,%bl
  402589:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402590:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  402595:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  40259a:	bf 60 5c 40 00       	mov    $0x405c60,%edi
  40259f:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4025a3:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  4025a8:	31 c0                	xor    %eax,%eax
  4025aa:	e8 c9 19 00 00       	callq  403f78 <Fmt_string>
  4025af:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4025b4:	31 d2                	xor    %edx,%edx
  4025b6:	48 89 c7             	mov    %rax,%rdi
  4025b9:	89 de                	mov    %ebx,%esi
  4025bb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4025c0:	ff d0                	callq  *%rax
  4025c2:	8b 44 24 70          	mov    0x70(%rsp),%eax
  4025c6:	85 c0                	test   %eax,%eax
  4025c8:	75 11                	jne    4025db <Bitpack_run_tests+0x8bb>
  4025ca:	48 8b 05 d7 53 20 00 	mov    0x2053d7(%rip),%rax        # 6079a8 <Except_stack>
  4025d1:	48 8b 00             	mov    (%rax),%rax
  4025d4:	48 89 05 cd 53 20 00 	mov    %rax,0x2053cd(%rip)        # 6079a8 <Except_stack>
  4025db:	8b 44 24 70          	mov    0x70(%rsp),%eax
  4025df:	83 f8 01             	cmp    $0x1,%eax
  4025e2:	0f 84 8b 07 00 00    	je     402d73 <Bitpack_run_tests+0x1053>
  4025e8:	48 8b 05 b9 53 20 00 	mov    0x2053b9(%rip),%rax        # 6079a8 <Except_stack>
  4025ef:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4025f4:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  4025fb:	00 
  4025fc:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  402603:	00 
  402604:	48 89 05 9d 53 20 00 	mov    %rax,0x20539d(%rip)        # 6079a8 <Except_stack>
  40260b:	e8 80 e7 ff ff       	callq  400d90 <_setjmp@plt>
  402610:	89 44 24 74          	mov    %eax,0x74(%rsp)
  402614:	8b 44 24 74          	mov    0x74(%rsp),%eax
  402618:	85 c0                	test   %eax,%eax
  40261a:	0f 84 28 02 00 00    	je     402848 <Bitpack_run_tests+0xb28>
  402620:	8b 6c 24 0c          	mov    0xc(%rsp),%ebp
  402624:	c7 44 24 74 02 00 00 	movl   $0x2,0x74(%rsp)
  40262b:	00 
  40262c:	bb 05 00 00 00       	mov    $0x5,%ebx
  402631:	85 ed                	test   %ebp,%ebp
  402633:	74 2b                	je     402660 <Bitpack_run_tests+0x940>
  402635:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  40263a:	b3 06                	mov    $0x6,%bl
  40263c:	74 22                	je     402660 <Bitpack_run_tests+0x940>
  40263e:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402642:	85 c0                	test   %eax,%eax
  402644:	0f 84 66 06 00 00    	je     402cb0 <Bitpack_run_tests+0xf90>
  40264a:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40264e:	03 44 24 0c          	add    0xc(%rsp),%eax
  402652:	83 f8 40             	cmp    $0x40,%eax
  402655:	0f 84 55 06 00 00    	je     402cb0 <Bitpack_run_tests+0xf90>
  40265b:	30 db                	xor    %bl,%bl
  40265d:	0f 1f 00             	nopl   (%rax)
  402660:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402664:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402668:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  40266e:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402672:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402676:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  40267a:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  40267f:	41 29 f1             	sub    %esi,%r9d
  402682:	be 40 00 00 00       	mov    $0x40,%esi
  402687:	29 d6                	sub    %edx,%esi
  402689:	89 f2                	mov    %esi,%edx
  40268b:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402690:	01 f8                	add    %edi,%eax
  402692:	01 f9                	add    %edi,%ecx
  402694:	29 fa                	sub    %edi,%edx
  402696:	89 04 24             	mov    %eax,(%rsp)
  402699:	41 29 f9             	sub    %edi,%r9d
  40269c:	31 c0                	xor    %eax,%eax
  40269e:	bf 98 5c 40 00       	mov    $0x405c98,%edi
  4026a3:	e8 d0 18 00 00       	callq  403f78 <Fmt_string>
  4026a8:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4026ad:	31 d2                	xor    %edx,%edx
  4026af:	48 89 c7             	mov    %rax,%rdi
  4026b2:	89 de                	mov    %ebx,%esi
  4026b4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4026b9:	ff d0                	callq  *%rax
  4026bb:	8b 44 24 74          	mov    0x74(%rsp),%eax
  4026bf:	85 c0                	test   %eax,%eax
  4026c1:	75 11                	jne    4026d4 <Bitpack_run_tests+0x9b4>
  4026c3:	48 8b 05 de 52 20 00 	mov    0x2052de(%rip),%rax        # 6079a8 <Except_stack>
  4026ca:	48 8b 00             	mov    (%rax),%rax
  4026cd:	48 89 05 d4 52 20 00 	mov    %rax,0x2052d4(%rip)        # 6079a8 <Except_stack>
  4026d4:	8b 44 24 74          	mov    0x74(%rsp),%eax
  4026d8:	83 f8 01             	cmp    $0x1,%eax
  4026db:	0f 84 50 06 00 00    	je     402d31 <Bitpack_run_tests+0x1011>
  4026e1:	48 8b 05 c0 52 20 00 	mov    0x2052c0(%rip),%rax        # 6079a8 <Except_stack>
  4026e8:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4026ed:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  4026f4:	00 
  4026f5:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  4026fc:	00 
  4026fd:	48 89 05 a4 52 20 00 	mov    %rax,0x2052a4(%rip)        # 6079a8 <Except_stack>
  402704:	e8 87 e6 ff ff       	callq  400d90 <_setjmp@plt>
  402709:	89 44 24 78          	mov    %eax,0x78(%rsp)
  40270d:	8b 44 24 78          	mov    0x78(%rsp),%eax
  402711:	85 c0                	test   %eax,%eax
  402713:	0f 85 a7 00 00 00    	jne    4027c0 <Bitpack_run_tests+0xaa0>
  402719:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
  40271d:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402721:	85 db                	test   %ebx,%ebx
  402723:	0f 85 b1 05 00 00    	jne    402cda <Bitpack_run_tests+0xfba>
  402729:	8b 44 24 68          	mov    0x68(%rsp),%eax
  40272d:	31 ed                	xor    %ebp,%ebp
  40272f:	bb 05 00 00 00       	mov    $0x5,%ebx
  402734:	48 83 bc c4 00 01 00 	cmpq   $0x0,0x100(%rsp,%rax,8)
  40273b:	00 00 
  40273d:	40 0f 94 c5          	sete   %bpl
  402741:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402745:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  402749:	bf d8 5c 40 00       	mov    $0x405cd8,%edi
  40274e:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402752:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402757:	4c 8b 84 c4 00 01 00 	mov    0x100(%rsp,%rax,8),%r8
  40275e:	00 
  40275f:	31 c0                	xor    %eax,%eax
  402761:	e8 12 18 00 00       	callq  403f78 <Fmt_string>
  402766:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  40276b:	89 ea                	mov    %ebp,%edx
  40276d:	48 89 c7             	mov    %rax,%rdi
  402770:	89 de                	mov    %ebx,%esi
  402772:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402777:	ff d0                	callq  *%rax
  402779:	8b 44 24 78          	mov    0x78(%rsp),%eax
  40277d:	85 c0                	test   %eax,%eax
  40277f:	75 11                	jne    402792 <Bitpack_run_tests+0xa72>
  402781:	48 8b 05 20 52 20 00 	mov    0x205220(%rip),%rax        # 6079a8 <Except_stack>
  402788:	48 8b 00             	mov    (%rax),%rax
  40278b:	48 89 05 16 52 20 00 	mov    %rax,0x205216(%rip)        # 6079a8 <Except_stack>
  402792:	8b 44 24 78          	mov    0x78(%rsp),%eax
  402796:	83 f8 01             	cmp    $0x1,%eax
  402799:	0f 85 51 f7 ff ff    	jne    401ef0 <Bitpack_run_tests+0x1d0>
  40279f:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  4027a6:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  4027ad:	00 
  4027ae:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  4027b5:	00 
  4027b6:	e8 d5 06 00 00       	callq  402e90 <Except_raise>
  4027bb:	e9 30 f7 ff ff       	jmpq   401ef0 <Bitpack_run_tests+0x1d0>
  4027c0:	44 8b 5c 24 0c       	mov    0xc(%rsp),%r11d
  4027c5:	c7 44 24 78 02 00 00 	movl   $0x2,0x78(%rsp)
  4027cc:	00 
  4027cd:	bb 05 00 00 00       	mov    $0x5,%ebx
  4027d2:	45 85 db             	test   %r11d,%r11d
  4027d5:	74 29                	je     402800 <Bitpack_run_tests+0xae0>
  4027d7:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4027dc:	b3 06                	mov    $0x6,%bl
  4027de:	74 20                	je     402800 <Bitpack_run_tests+0xae0>
  4027e0:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4027e4:	85 c0                	test   %eax,%eax
  4027e6:	0f 84 15 06 00 00    	je     402e01 <Bitpack_run_tests+0x10e1>
  4027ec:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4027f0:	03 44 24 0c          	add    0xc(%rsp),%eax
  4027f4:	83 f8 40             	cmp    $0x40,%eax
  4027f7:	0f 84 04 06 00 00    	je     402e01 <Bitpack_run_tests+0x10e1>
  4027fd:	30 db                	xor    %bl,%bl
  4027ff:	90                   	nop
  402800:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402804:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  402808:	bf d8 5c 40 00       	mov    $0x405cd8,%edi
  40280d:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402811:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402816:	4c 8b 84 c4 00 01 00 	mov    0x100(%rsp,%rax,8),%r8
  40281d:	00 
  40281e:	31 c0                	xor    %eax,%eax
  402820:	e8 53 17 00 00       	callq  403f78 <Fmt_string>
  402825:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  40282a:	31 d2                	xor    %edx,%edx
  40282c:	e9 3c ff ff ff       	jmpq   40276d <Bitpack_run_tests+0xa4d>
  402831:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402838:	8b 44 24 44          	mov    0x44(%rsp),%eax
  40283c:	e9 8c f6 ff ff       	jmpq   401ecd <Bitpack_run_tests+0x1ad>
  402841:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402848:	8b 54 24 64          	mov    0x64(%rsp),%edx
  40284c:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402850:	be 40 00 00 00       	mov    $0x40,%esi
  402855:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  40285a:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  40285f:	31 ed                	xor    %ebp,%ebp
  402861:	29 c6                	sub    %eax,%esi
  402863:	44 01 f2             	add    %r14d,%edx
  402866:	44 29 f6             	sub    %r14d,%esi
  402869:	e8 52 f2 ff ff       	callq  401ac0 <Bitpack_getu>
  40286e:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402872:	48 89 c3             	mov    %rax,%rbx
  402875:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402879:	be 40 00 00 00       	mov    $0x40,%esi
  40287e:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402883:	29 c6                	sub    %eax,%esi
  402885:	44 01 f2             	add    %r14d,%edx
  402888:	44 29 f6             	sub    %r14d,%esi
  40288b:	e8 30 f2 ff ff       	callq  401ac0 <Bitpack_getu>
  402890:	48 39 c3             	cmp    %rax,%rbx
  402893:	bb 05 00 00 00       	mov    $0x5,%ebx
  402898:	40 0f 94 c5          	sete   %bpl
  40289c:	45 85 f6             	test   %r14d,%r14d
  40289f:	74 2f                	je     4028d0 <Bitpack_run_tests+0xbb0>
  4028a1:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4028a6:	b3 06                	mov    $0x6,%bl
  4028a8:	74 26                	je     4028d0 <Bitpack_run_tests+0xbb0>
  4028aa:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4028ae:	85 c0                	test   %eax,%eax
  4028b0:	0f 84 93 05 00 00    	je     402e49 <Bitpack_run_tests+0x1129>
  4028b6:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4028ba:	03 44 24 0c          	add    0xc(%rsp),%eax
  4028be:	83 f8 40             	cmp    $0x40,%eax
  4028c1:	0f 84 82 05 00 00    	je     402e49 <Bitpack_run_tests+0x1129>
  4028c7:	30 db                	xor    %bl,%bl
  4028c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4028d0:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4028d4:	8b 74 24 64          	mov    0x64(%rsp),%esi
  4028d8:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  4028de:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4028e2:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4028e6:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  4028ea:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  4028ef:	41 29 f1             	sub    %esi,%r9d
  4028f2:	be 40 00 00 00       	mov    $0x40,%esi
  4028f7:	29 c6                	sub    %eax,%esi
  4028f9:	89 f0                	mov    %esi,%eax
  4028fb:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402900:	01 fa                	add    %edi,%edx
  402902:	29 f8                	sub    %edi,%eax
  402904:	01 f9                	add    %edi,%ecx
  402906:	89 14 24             	mov    %edx,(%rsp)
  402909:	41 29 f9             	sub    %edi,%r9d
  40290c:	89 c2                	mov    %eax,%edx
  40290e:	bf 98 5c 40 00       	mov    $0x405c98,%edi
  402913:	31 c0                	xor    %eax,%eax
  402915:	e8 5e 16 00 00       	callq  403f78 <Fmt_string>
  40291a:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  40291f:	89 ea                	mov    %ebp,%edx
  402921:	e9 89 fd ff ff       	jmpq   4026af <Bitpack_run_tests+0x98f>
  402926:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40292d:	00 00 00 
  402930:	8b 54 24 68          	mov    0x68(%rsp),%edx
  402934:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402938:	bf f8 5b 40 00       	mov    $0x405bf8,%edi
  40293d:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
  402941:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402945:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  40294a:	4c 8b 84 c4 00 01 00 	mov    0x100(%rsp,%rax,8),%r8
  402951:	00 
  402952:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  402957:	4c 8b 8c d4 00 01 00 	mov    0x100(%rsp,%rdx,8),%r9
  40295e:	00 
  40295f:	89 da                	mov    %ebx,%edx
  402961:	48 89 04 24          	mov    %rax,(%rsp)
  402965:	31 c0                	xor    %eax,%eax
  402967:	e8 d4 e3 ff ff       	callq  400d40 <printf@plt>
  40296c:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402970:	31 f6                	xor    %esi,%esi
  402972:	85 db                	test   %ebx,%ebx
  402974:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402978:	48 8b 8c c4 00 01 00 	mov    0x100(%rsp,%rax,8),%rcx
  40297f:	00 
  402980:	0f 85 85 04 00 00    	jne    402e0b <Bitpack_run_tests+0x10eb>
  402986:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
  40298b:	bf 30 5c 40 00       	mov    $0x405c30,%edi
  402990:	31 c0                	xor    %eax,%eax
  402992:	e8 a9 e3 ff ff       	callq  400d40 <printf@plt>
  402997:	e9 76 fb ff ff       	jmpq   402512 <Bitpack_run_tests+0x7f2>
  40299c:	0f 1f 40 00          	nopl   0x0(%rax)
  4029a0:	8b 74 24 64          	mov    0x64(%rsp),%esi
  4029a4:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  4029a9:	31 d2                	xor    %edx,%edx
  4029ab:	31 ed                	xor    %ebp,%ebp
  4029ad:	e8 0e f1 ff ff       	callq  401ac0 <Bitpack_getu>
  4029b2:	8b 74 24 64          	mov    0x64(%rsp),%esi
  4029b6:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  4029bb:	48 89 c3             	mov    %rax,%rbx
  4029be:	31 d2                	xor    %edx,%edx
  4029c0:	e8 fb f0 ff ff       	callq  401ac0 <Bitpack_getu>
  4029c5:	48 39 c3             	cmp    %rax,%rbx
  4029c8:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  4029cc:	bb 05 00 00 00       	mov    $0x5,%ebx
  4029d1:	40 0f 94 c5          	sete   %bpl
  4029d5:	85 c0                	test   %eax,%eax
  4029d7:	74 2f                	je     402a08 <Bitpack_run_tests+0xce8>
  4029d9:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4029de:	b3 06                	mov    $0x6,%bl
  4029e0:	74 26                	je     402a08 <Bitpack_run_tests+0xce8>
  4029e2:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4029e6:	85 c0                	test   %eax,%eax
  4029e8:	0f 84 65 04 00 00    	je     402e53 <Bitpack_run_tests+0x1133>
  4029ee:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4029f2:	03 44 24 0c          	add    0xc(%rsp),%eax
  4029f6:	83 f8 40             	cmp    $0x40,%eax
  4029f9:	0f 84 54 04 00 00    	je     402e53 <Bitpack_run_tests+0x1133>
  4029ff:	30 db                	xor    %bl,%bl
  402a01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402a08:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  402a0d:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  402a12:	bf 60 5c 40 00       	mov    $0x405c60,%edi
  402a17:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402a1b:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402a20:	31 c0                	xor    %eax,%eax
  402a22:	e8 51 15 00 00       	callq  403f78 <Fmt_string>
  402a27:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402a2c:	89 ea                	mov    %ebp,%edx
  402a2e:	e9 83 fb ff ff       	jmpq   4025b6 <Bitpack_run_tests+0x896>
  402a33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402a38:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  402a3d:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402a41:	31 ed                	xor    %ebp,%ebp
  402a43:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  402a48:	bb 05 00 00 00       	mov    $0x5,%ebx
  402a4d:	44 89 f6             	mov    %r14d,%esi
  402a50:	e8 6b f0 ff ff       	callq  401ac0 <Bitpack_getu>
  402a55:	8b 54 24 7c          	mov    0x7c(%rsp),%edx
  402a59:	48 3b 84 d4 d0 00 00 	cmp    0xd0(%rsp,%rdx,8),%rax
  402a60:	00 
  402a61:	40 0f 94 c5          	sete   %bpl
  402a65:	45 85 f6             	test   %r14d,%r14d
  402a68:	74 2e                	je     402a98 <Bitpack_run_tests+0xd78>
  402a6a:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402a6f:	b3 06                	mov    $0x6,%bl
  402a71:	74 25                	je     402a98 <Bitpack_run_tests+0xd78>
  402a73:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402a77:	85 c0                	test   %eax,%eax
  402a79:	0f 84 c0 03 00 00    	je     402e3f <Bitpack_run_tests+0x111f>
  402a7f:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402a83:	03 44 24 0c          	add    0xc(%rsp),%eax
  402a87:	83 f8 40             	cmp    $0x40,%eax
  402a8a:	0f 84 af 03 00 00    	je     402e3f <Bitpack_run_tests+0x111f>
  402a90:	30 db                	xor    %bl,%bl
  402a92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402a98:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  402a9c:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  402aa0:	bf 78 5d 40 00       	mov    $0x405d78,%edi
  402aa5:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402aa9:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  402aae:	4c 8b 84 c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%r8
  402ab5:	00 
  402ab6:	31 c0                	xor    %eax,%eax
  402ab8:	e8 bb 14 00 00       	callq  403f78 <Fmt_string>
  402abd:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402ac2:	89 ea                	mov    %ebp,%edx
  402ac4:	e9 7b f9 ff ff       	jmpq   402444 <Bitpack_run_tests+0x724>
  402ac9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402ad0:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402ad4:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402ad8:	be 40 00 00 00       	mov    $0x40,%esi
  402add:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  402ae2:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  402ae7:	31 ed                	xor    %ebp,%ebp
  402ae9:	29 c6                	sub    %eax,%esi
  402aeb:	44 01 f2             	add    %r14d,%edx
  402aee:	44 29 f6             	sub    %r14d,%esi
  402af1:	e8 ca ef ff ff       	callq  401ac0 <Bitpack_getu>
  402af6:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402afa:	48 89 c3             	mov    %rax,%rbx
  402afd:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402b01:	be 40 00 00 00       	mov    $0x40,%esi
  402b06:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402b0b:	29 c6                	sub    %eax,%esi
  402b0d:	44 01 f2             	add    %r14d,%edx
  402b10:	44 29 f6             	sub    %r14d,%esi
  402b13:	e8 a8 ef ff ff       	callq  401ac0 <Bitpack_getu>
  402b18:	48 39 c3             	cmp    %rax,%rbx
  402b1b:	bb 05 00 00 00       	mov    $0x5,%ebx
  402b20:	40 0f 94 c5          	sete   %bpl
  402b24:	45 85 f6             	test   %r14d,%r14d
  402b27:	74 2f                	je     402b58 <Bitpack_run_tests+0xe38>
  402b29:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402b2e:	b3 06                	mov    $0x6,%bl
  402b30:	74 26                	je     402b58 <Bitpack_run_tests+0xe38>
  402b32:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402b36:	85 c0                	test   %eax,%eax
  402b38:	0f 84 ed 02 00 00    	je     402e2b <Bitpack_run_tests+0x110b>
  402b3e:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402b42:	03 44 24 0c          	add    0xc(%rsp),%eax
  402b46:	83 f8 40             	cmp    $0x40,%eax
  402b49:	0f 84 dc 02 00 00    	je     402e2b <Bitpack_run_tests+0x110b>
  402b4f:	30 db                	xor    %bl,%bl
  402b51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402b58:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402b5c:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402b60:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  402b66:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402b6a:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402b6e:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  402b72:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  402b77:	41 29 f1             	sub    %esi,%r9d
  402b7a:	be 40 00 00 00       	mov    $0x40,%esi
  402b7f:	29 c6                	sub    %eax,%esi
  402b81:	89 f0                	mov    %esi,%eax
  402b83:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  402b88:	01 fa                	add    %edi,%edx
  402b8a:	29 f8                	sub    %edi,%eax
  402b8c:	01 f9                	add    %edi,%ecx
  402b8e:	89 14 24             	mov    %edx,(%rsp)
  402b91:	41 29 f9             	sub    %edi,%r9d
  402b94:	89 c2                	mov    %eax,%edx
  402b96:	bf 98 5c 40 00       	mov    $0x405c98,%edi
  402b9b:	31 c0                	xor    %eax,%eax
  402b9d:	e8 d6 13 00 00       	callq  403f78 <Fmt_string>
  402ba2:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402ba7:	89 ea                	mov    %ebp,%edx
  402ba9:	e9 b1 f7 ff ff       	jmpq   40235f <Bitpack_run_tests+0x63f>
  402bae:	66 90                	xchg   %ax,%ax
  402bb0:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402bb4:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  402bb9:	31 d2                	xor    %edx,%edx
  402bbb:	31 ed                	xor    %ebp,%ebp
  402bbd:	e8 fe ee ff ff       	callq  401ac0 <Bitpack_getu>
  402bc2:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402bc6:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402bcb:	31 d2                	xor    %edx,%edx
  402bcd:	48 89 c3             	mov    %rax,%rbx
  402bd0:	e8 eb ee ff ff       	callq  401ac0 <Bitpack_getu>
  402bd5:	44 8b 4c 24 0c       	mov    0xc(%rsp),%r9d
  402bda:	48 39 c3             	cmp    %rax,%rbx
  402bdd:	bb 05 00 00 00       	mov    $0x5,%ebx
  402be2:	40 0f 94 c5          	sete   %bpl
  402be6:	45 85 c9             	test   %r9d,%r9d
  402be9:	74 2d                	je     402c18 <Bitpack_run_tests+0xef8>
  402beb:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402bf0:	b3 06                	mov    $0x6,%bl
  402bf2:	74 24                	je     402c18 <Bitpack_run_tests+0xef8>
  402bf4:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402bf8:	85 c0                	test   %eax,%eax
  402bfa:	0f 84 35 02 00 00    	je     402e35 <Bitpack_run_tests+0x1115>
  402c00:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402c04:	03 44 24 0c          	add    0xc(%rsp),%eax
  402c08:	83 f8 40             	cmp    $0x40,%eax
  402c0b:	0f 84 24 02 00 00    	je     402e35 <Bitpack_run_tests+0x1115>
  402c11:	30 db                	xor    %bl,%bl
  402c13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402c18:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  402c1d:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  402c22:	bf 60 5c 40 00       	mov    $0x405c60,%edi
  402c27:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402c2b:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  402c30:	31 c0                	xor    %eax,%eax
  402c32:	e8 41 13 00 00       	callq  403f78 <Fmt_string>
  402c37:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402c3c:	89 ea                	mov    %ebp,%edx
  402c3e:	e9 13 f6 ff ff       	jmpq   402256 <Bitpack_run_tests+0x536>
  402c43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402c48:	8b 54 24 7c          	mov    0x7c(%rsp),%edx
  402c4c:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  402c50:	bf 40 5d 40 00       	mov    $0x405d40,%edi
  402c55:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402c59:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  402c5e:	4c 8b 84 c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%r8
  402c65:	00 
  402c66:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  402c6b:	4c 8b 8c d4 d0 00 00 	mov    0xd0(%rsp,%rdx,8),%r9
  402c72:	00 
  402c73:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  402c77:	48 89 04 24          	mov    %rax,(%rsp)
  402c7b:	31 c0                	xor    %eax,%eax
  402c7d:	e8 be e0 ff ff       	callq  400d40 <printf@plt>
  402c82:	e9 29 f5 ff ff       	jmpq   4021b0 <Bitpack_run_tests+0x490>
  402c87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  402c8e:	00 00 
  402c90:	bb 04 00 00 00       	mov    $0x4,%ebx
  402c95:	e9 76 f6 ff ff       	jmpq   402310 <Bitpack_run_tests+0x5f0>
  402c9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402ca0:	bb 04 00 00 00       	mov    $0x4,%ebx
  402ca5:	e9 6e f7 ff ff       	jmpq   402418 <Bitpack_run_tests+0x6f8>
  402caa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402cb0:	bb 04 00 00 00       	mov    $0x4,%ebx
  402cb5:	e9 a6 f9 ff ff       	jmpq   402660 <Bitpack_run_tests+0x940>
  402cba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402cc0:	bb 04 00 00 00       	mov    $0x4,%ebx
  402cc5:	e9 c6 f8 ff ff       	jmpq   402590 <Bitpack_run_tests+0x870>
  402cca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402cd0:	bb 04 00 00 00       	mov    $0x4,%ebx
  402cd5:	e9 56 f5 ff ff       	jmpq   402230 <Bitpack_run_tests+0x510>
  402cda:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  402cdf:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  402ce4:	31 ed                	xor    %ebp,%ebp
  402ce6:	bb 06 00 00 00       	mov    $0x6,%ebx
  402ceb:	44 89 f6             	mov    %r14d,%esi
  402cee:	e8 9d ec ff ff       	callq  401990 <Bitpack_gets.part.0>
  402cf3:	8b 54 24 68          	mov    0x68(%rsp),%edx
  402cf7:	48 3b 84 d4 00 01 00 	cmp    0x100(%rsp,%rdx,8),%rax
  402cfe:	00 
  402cff:	40 0f 94 c5          	sete   %bpl
  402d03:	41 83 fe 40          	cmp    $0x40,%r14d
  402d07:	0f 84 34 fa ff ff    	je     402741 <Bitpack_run_tests+0xa21>
  402d0d:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402d11:	85 c0                	test   %eax,%eax
  402d13:	0f 84 de 00 00 00    	je     402df7 <Bitpack_run_tests+0x10d7>
  402d19:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402d1d:	03 44 24 0c          	add    0xc(%rsp),%eax
  402d21:	83 f8 40             	cmp    $0x40,%eax
  402d24:	0f 84 cd 00 00 00    	je     402df7 <Bitpack_run_tests+0x10d7>
  402d2a:	30 db                	xor    %bl,%bl
  402d2c:	e9 10 fa ff ff       	jmpq   402741 <Bitpack_run_tests+0xa21>
  402d31:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402d38:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402d3f:	00 
  402d40:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402d47:	00 
  402d48:	e8 43 01 00 00       	callq  402e90 <Except_raise>
  402d4d:	e9 8f f9 ff ff       	jmpq   4026e1 <Bitpack_run_tests+0x9c1>
  402d52:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402d59:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402d60:	00 
  402d61:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402d68:	00 
  402d69:	e8 22 01 00 00       	callq  402e90 <Except_raise>
  402d6e:	e9 0f f4 ff ff       	jmpq   402182 <Bitpack_run_tests+0x462>
  402d73:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402d7a:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402d81:	00 
  402d82:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402d89:	00 
  402d8a:	e8 01 01 00 00       	callq  402e90 <Except_raise>
  402d8f:	e9 54 f8 ff ff       	jmpq   4025e8 <Bitpack_run_tests+0x8c8>
  402d94:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402d9b:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402da2:	00 
  402da3:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402daa:	00 
  402dab:	e8 e0 00 00 00       	callq  402e90 <Except_raise>
  402db0:	e9 2f f7 ff ff       	jmpq   4024e4 <Bitpack_run_tests+0x7c4>
  402db5:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402dbc:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402dc3:	00 
  402dc4:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402dcb:	00 
  402dcc:	e8 bf 00 00 00       	callq  402e90 <Except_raise>
  402dd1:	e9 b8 f4 ff ff       	jmpq   40228e <Bitpack_run_tests+0x56e>
  402dd6:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402ddd:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402de4:	00 
  402de5:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402dec:	00 
  402ded:	e8 9e 00 00 00       	callq  402e90 <Except_raise>
  402df2:	e9 a0 f5 ff ff       	jmpq   402397 <Bitpack_run_tests+0x677>
  402df7:	bb 04 00 00 00       	mov    $0x4,%ebx
  402dfc:	e9 40 f9 ff ff       	jmpq   402741 <Bitpack_run_tests+0xa21>
  402e01:	bb 04 00 00 00       	mov    $0x4,%ebx
  402e06:	e9 f5 f9 ff ff       	jmpq   402800 <Bitpack_run_tests+0xae0>
  402e0b:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  402e0f:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  402e14:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
  402e19:	e8 72 eb ff ff       	callq  401990 <Bitpack_gets.part.0>
  402e1e:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
  402e23:	48 89 c6             	mov    %rax,%rsi
  402e26:	e9 5b fb ff ff       	jmpq   402986 <Bitpack_run_tests+0xc66>
  402e2b:	bb 04 00 00 00       	mov    $0x4,%ebx
  402e30:	e9 23 fd ff ff       	jmpq   402b58 <Bitpack_run_tests+0xe38>
  402e35:	bb 04 00 00 00       	mov    $0x4,%ebx
  402e3a:	e9 d9 fd ff ff       	jmpq   402c18 <Bitpack_run_tests+0xef8>
  402e3f:	bb 04 00 00 00       	mov    $0x4,%ebx
  402e44:	e9 4f fc ff ff       	jmpq   402a98 <Bitpack_run_tests+0xd78>
  402e49:	bb 04 00 00 00       	mov    $0x4,%ebx
  402e4e:	e9 7d fa ff ff       	jmpq   4028d0 <Bitpack_run_tests+0xbb0>
  402e53:	bb 04 00 00 00       	mov    $0x4,%ebx
  402e58:	e9 ab fb ff ff       	jmpq   402a08 <Bitpack_run_tests+0xce8>
  402e5d:	0f 1f 00             	nopl   (%rax)

0000000000402e60 <assert>:
  402e60:	55                   	push   %rbp
  402e61:	48 89 e5             	mov    %rsp,%rbp
  402e64:	48 83 ec 10          	sub    $0x10,%rsp
  402e68:	89 7d fc             	mov    %edi,-0x4(%rbp)
  402e6b:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  402e6f:	75 1b                	jne    402e8c <assert+0x2c>
  402e71:	ba 05 00 00 00       	mov    $0x5,%edx
  402e76:	48 8d 35 34 2f 00 00 	lea    0x2f34(%rip),%rsi        # 405db1 <_IO_stdin_used+0x2a1>
  402e7d:	48 8d 05 3c 3f 20 00 	lea    0x203f3c(%rip),%rax        # 606dc0 <Assert_Failed>
  402e84:	48 89 c7             	mov    %rax,%rdi
  402e87:	e8 04 00 00 00       	callq  402e90 <Except_raise>
  402e8c:	c9                   	leaveq 
  402e8d:	c3                   	retq   
  402e8e:	66 90                	xchg   %ax,%ax

0000000000402e90 <Except_raise>:
  402e90:	55                   	push   %rbp
  402e91:	48 89 e5             	mov    %rsp,%rbp
  402e94:	53                   	push   %rbx
  402e95:	48 83 ec 38          	sub    $0x38,%rsp
  402e99:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  402e9d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  402ea1:	89 55 cc             	mov    %edx,-0x34(%rbp)
  402ea4:	48 8d 05 fd 4a 20 00 	lea    0x204afd(%rip),%rax        # 6079a8 <Except_stack>
  402eab:	48 8b 00             	mov    (%rax),%rax
  402eae:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  402eb2:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  402eb7:	75 1b                	jne    402ed4 <Except_raise+0x44>
  402eb9:	ba 13 00 00 00       	mov    $0x13,%edx
  402ebe:	48 8d 35 f9 2e 00 00 	lea    0x2ef9(%rip),%rsi        # 405dbe <_IO_stdin_used+0x2ae>
  402ec5:	48 8d 05 f4 3e 20 00 	lea    0x203ef4(%rip),%rax        # 606dc0 <Assert_Failed>
  402ecc:	48 89 c7             	mov    %rax,%rdi
  402ecf:	e8 bc ff ff ff       	callq  402e90 <Except_raise>
  402ed4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  402ed9:	0f 85 f9 00 00 00    	jne    402fd8 <Except_raise+0x148>
  402edf:	48 8b 05 12 41 20 00 	mov    0x204112(%rip),%rax        # 606ff8 <stderr@GLIBC_2.2.5>
  402ee6:	48 8b 00             	mov    (%rax),%rax
  402ee9:	48 89 c2             	mov    %rax,%rdx
  402eec:	48 8d 05 d8 2e 00 00 	lea    0x2ed8(%rip),%rax        # 405dcb <_IO_stdin_used+0x2bb>
  402ef3:	48 89 d1             	mov    %rdx,%rcx
  402ef6:	ba 12 00 00 00       	mov    $0x12,%edx
  402efb:	be 01 00 00 00       	mov    $0x1,%esi
  402f00:	48 89 c7             	mov    %rax,%rdi
  402f03:	e8 78 df ff ff       	callq  400e80 <fwrite@plt>
  402f08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402f0c:	48 8b 00             	mov    (%rax),%rax
  402f0f:	48 85 c0             	test   %rax,%rax
  402f12:	74 2a                	je     402f3e <Except_raise+0xae>
  402f14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  402f18:	48 8b 10             	mov    (%rax),%rdx
  402f1b:	48 8d 0d bc 2e 00 00 	lea    0x2ebc(%rip),%rcx        # 405dde <_IO_stdin_used+0x2ce>
  402f22:	48 8b 05 cf 40 20 00 	mov    0x2040cf(%rip),%rax        # 606ff8 <stderr@GLIBC_2.2.5>
  402f29:	48 8b 00             	mov    (%rax),%rax
  402f2c:	48 89 ce             	mov    %rcx,%rsi
  402f2f:	48 89 c7             	mov    %rax,%rdi
  402f32:	b8 00 00 00 00       	mov    $0x0,%eax
  402f37:	e8 74 de ff ff       	callq  400db0 <fprintf@plt>
  402f3c:	eb 25                	jmp    402f63 <Except_raise+0xd3>
  402f3e:	48 8d 0d 9d 2e 00 00 	lea    0x2e9d(%rip),%rcx        # 405de2 <_IO_stdin_used+0x2d2>
  402f45:	48 8b 05 ac 40 20 00 	mov    0x2040ac(%rip),%rax        # 606ff8 <stderr@GLIBC_2.2.5>
  402f4c:	48 8b 00             	mov    (%rax),%rax
  402f4f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  402f53:	48 89 ce             	mov    %rcx,%rsi
  402f56:	48 89 c7             	mov    %rax,%rdi
  402f59:	b8 00 00 00 00       	mov    $0x0,%eax
  402f5e:	e8 4d de ff ff       	callq  400db0 <fprintf@plt>
  402f63:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  402f68:	74 2e                	je     402f98 <Except_raise+0x108>
  402f6a:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  402f6e:	7e 28                	jle    402f98 <Except_raise+0x108>
  402f70:	48 8d 1d 74 2e 00 00 	lea    0x2e74(%rip),%rbx        # 405deb <_IO_stdin_used+0x2db>
  402f77:	48 8b 05 7a 40 20 00 	mov    0x20407a(%rip),%rax        # 606ff8 <stderr@GLIBC_2.2.5>
  402f7e:	48 8b 00             	mov    (%rax),%rax
  402f81:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  402f84:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  402f88:	48 89 de             	mov    %rbx,%rsi
  402f8b:	48 89 c7             	mov    %rax,%rdi
  402f8e:	b8 00 00 00 00       	mov    $0x0,%eax
  402f93:	e8 18 de ff ff       	callq  400db0 <fprintf@plt>
  402f98:	48 8b 05 59 40 20 00 	mov    0x204059(%rip),%rax        # 606ff8 <stderr@GLIBC_2.2.5>
  402f9f:	48 8b 00             	mov    (%rax),%rax
  402fa2:	48 89 c2             	mov    %rax,%rdx
  402fa5:	48 8d 05 51 2e 00 00 	lea    0x2e51(%rip),%rax        # 405dfd <_IO_stdin_used+0x2ed>
  402fac:	48 89 d1             	mov    %rdx,%rcx
  402faf:	ba 0c 00 00 00       	mov    $0xc,%edx
  402fb4:	be 01 00 00 00       	mov    $0x1,%esi
  402fb9:	48 89 c7             	mov    %rax,%rdi
  402fbc:	e8 bf de ff ff       	callq  400e80 <fwrite@plt>
  402fc1:	48 8b 05 30 40 20 00 	mov    0x204030(%rip),%rax        # 606ff8 <stderr@GLIBC_2.2.5>
  402fc8:	48 8b 00             	mov    (%rax),%rax
  402fcb:	48 89 c7             	mov    %rax,%rdi
  402fce:	e8 2d de ff ff       	callq  400e00 <fflush@plt>
  402fd3:	e8 28 dd ff ff       	callq  400d00 <abort@plt>
  402fd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402fdc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  402fe0:	48 89 90 e0 00 00 00 	mov    %rdx,0xe0(%rax)
  402fe7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402feb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  402fef:	48 89 90 d0 00 00 00 	mov    %rdx,0xd0(%rax)
  402ff6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402ffa:	8b 55 cc             	mov    -0x34(%rbp),%edx
  402ffd:	89 90 d8 00 00 00    	mov    %edx,0xd8(%rax)
  403003:	48 8d 05 9e 49 20 00 	lea    0x20499e(%rip),%rax        # 6079a8 <Except_stack>
  40300a:	48 8b 00             	mov    (%rax),%rax
  40300d:	48 8b 10             	mov    (%rax),%rdx
  403010:	48 8d 05 91 49 20 00 	lea    0x204991(%rip),%rax        # 6079a8 <Except_stack>
  403017:	48 89 10             	mov    %rdx,(%rax)
  40301a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40301e:	48 83 c0 08          	add    $0x8,%rax
  403022:	be 01 00 00 00       	mov    $0x1,%esi
  403027:	48 89 c7             	mov    %rax,%rdi
  40302a:	e8 11 de ff ff       	callq  400e40 <longjmp@plt>
  40302f:	90                   	nop

0000000000403030 <cvt_s>:
  403030:	55                   	push   %rbp
  403031:	48 89 e5             	mov    %rsp,%rbp
  403034:	53                   	push   %rbx
  403035:	48 83 ec 58          	sub    $0x58,%rsp
  403039:	89 7d dc             	mov    %edi,-0x24(%rbp)
  40303c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  403040:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  403044:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  403048:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  40304c:	44 89 4d b4          	mov    %r9d,-0x4c(%rbp)
  403050:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403054:	8b 10                	mov    (%rax),%edx
  403056:	83 fa 30             	cmp    $0x30,%edx
  403059:	73 15                	jae    403070 <cvt_s+0x40>
  40305b:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40305f:	8b 10                	mov    (%rax),%edx
  403061:	89 d2                	mov    %edx,%edx
  403063:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403067:	8b 08                	mov    (%rax),%ecx
  403069:	83 c1 08             	add    $0x8,%ecx
  40306c:	89 08                	mov    %ecx,(%rax)
  40306e:	eb 0f                	jmp    40307f <cvt_s+0x4f>
  403070:	48 8b 48 08          	mov    0x8(%rax),%rcx
  403074:	48 89 ca             	mov    %rcx,%rdx
  403077:	48 83 c1 08          	add    $0x8,%rcx
  40307b:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40307f:	48 89 d0             	mov    %rdx,%rax
  403082:	48 8b 00             	mov    (%rax),%rax
  403085:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  403089:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40308e:	75 1b                	jne    4030ab <cvt_s+0x7b>
  403090:	ba 1b 00 00 00       	mov    $0x1b,%edx
  403095:	48 8d 35 6e 2d 00 00 	lea    0x2d6e(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  40309c:	48 8d 05 1d 3d 20 00 	lea    0x203d1d(%rip),%rax        # 606dc0 <Assert_Failed>
  4030a3:	48 89 c7             	mov    %rax,%rdi
  4030a6:	e8 e5 fd ff ff       	callq  402e90 <Except_raise>
  4030ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4030af:	48 89 c7             	mov    %rax,%rdi
  4030b2:	e8 69 dc ff ff       	callq  400d20 <strlen@plt>
  4030b7:	89 c3                	mov    %eax,%ebx
  4030b9:	44 8b 45 b4          	mov    -0x4c(%rbp),%r8d
  4030bd:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  4030c1:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  4030c5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4030c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4030cd:	8b 75 10             	mov    0x10(%rbp),%esi
  4030d0:	89 34 24             	mov    %esi,(%rsp)
  4030d3:	45 89 c1             	mov    %r8d,%r9d
  4030d6:	49 89 f8             	mov    %rdi,%r8
  4030d9:	89 de                	mov    %ebx,%esi
  4030db:	48 89 c7             	mov    %rax,%rdi
  4030de:	e8 d2 08 00 00       	callq  4039b5 <Fmt_puts>
  4030e3:	48 83 c4 58          	add    $0x58,%rsp
  4030e7:	5b                   	pop    %rbx
  4030e8:	c9                   	leaveq 
  4030e9:	c3                   	retq   

00000000004030ea <cvt_d>:
  4030ea:	55                   	push   %rbp
  4030eb:	48 89 e5             	mov    %rsp,%rbp
  4030ee:	53                   	push   %rbx
  4030ef:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  4030f6:	89 7d ac             	mov    %edi,-0x54(%rbp)
  4030f9:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  4030fd:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  403101:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  403105:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  403109:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  40310d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  403111:	8b 10                	mov    (%rax),%edx
  403113:	83 fa 30             	cmp    $0x30,%edx
  403116:	73 15                	jae    40312d <cvt_d+0x43>
  403118:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40311c:	8b 10                	mov    (%rax),%edx
  40311e:	89 d2                	mov    %edx,%edx
  403120:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403124:	8b 08                	mov    (%rax),%ecx
  403126:	83 c1 08             	add    $0x8,%ecx
  403129:	89 08                	mov    %ecx,(%rax)
  40312b:	eb 0f                	jmp    40313c <cvt_d+0x52>
  40312d:	48 8b 48 08          	mov    0x8(%rax),%rcx
  403131:	48 89 ca             	mov    %rcx,%rdx
  403134:	48 83 c1 08          	add    $0x8,%rcx
  403138:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40313c:	48 89 d0             	mov    %rdx,%rax
  40313f:	8b 00                	mov    (%rax),%eax
  403141:	89 45 dc             	mov    %eax,-0x24(%rbp)
  403144:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403148:	48 83 c0 2b          	add    $0x2b,%rax
  40314c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403150:	81 7d dc 00 00 00 80 	cmpl   $0x80000000,-0x24(%rbp)
  403157:	75 09                	jne    403162 <cvt_d+0x78>
  403159:	c7 45 ec 00 00 00 80 	movl   $0x80000000,-0x14(%rbp)
  403160:	eb 16                	jmp    403178 <cvt_d+0x8e>
  403162:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  403166:	79 0a                	jns    403172 <cvt_d+0x88>
  403168:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40316b:	f7 d8                	neg    %eax
  40316d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403170:	eb 06                	jmp    403178 <cvt_d+0x8e>
  403172:	8b 45 dc             	mov    -0x24(%rbp),%eax
  403175:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403178:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  40317d:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  403180:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  403185:	89 c8                	mov    %ecx,%eax
  403187:	f7 e2                	mul    %edx
  403189:	c1 ea 03             	shr    $0x3,%edx
  40318c:	89 d0                	mov    %edx,%eax
  40318e:	c1 e0 02             	shl    $0x2,%eax
  403191:	01 d0                	add    %edx,%eax
  403193:	01 c0                	add    %eax,%eax
  403195:	89 ca                	mov    %ecx,%edx
  403197:	29 c2                	sub    %eax,%edx
  403199:	89 d0                	mov    %edx,%eax
  40319b:	83 c0 30             	add    $0x30,%eax
  40319e:	89 c2                	mov    %eax,%edx
  4031a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4031a4:	88 10                	mov    %dl,(%rax)
  4031a6:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  4031a9:	89 8d 7c ff ff ff    	mov    %ecx,-0x84(%rbp)
  4031af:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  4031b4:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  4031ba:	f7 e2                	mul    %edx
  4031bc:	89 d0                	mov    %edx,%eax
  4031be:	c1 e8 03             	shr    $0x3,%eax
  4031c1:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4031c4:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4031c8:	75 ae                	jne    403178 <cvt_d+0x8e>
  4031ca:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  4031ce:	79 0c                	jns    4031dc <cvt_d+0xf2>
  4031d0:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  4031d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4031d9:	c6 00 2d             	movb   $0x2d,(%rax)
  4031dc:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  4031e0:	48 83 c0 2b          	add    $0x2b,%rax
  4031e4:	89 c2                	mov    %eax,%edx
  4031e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4031ea:	89 d1                	mov    %edx,%ecx
  4031ec:	29 c1                	sub    %eax,%ecx
  4031ee:	89 c8                	mov    %ecx,%eax
  4031f0:	89 c3                	mov    %eax,%ebx
  4031f2:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  4031f6:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  4031fa:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  4031fe:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  403202:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403206:	8b 75 10             	mov    0x10(%rbp),%esi
  403209:	89 34 24             	mov    %esi,(%rsp)
  40320c:	45 89 c1             	mov    %r8d,%r9d
  40320f:	49 89 f8             	mov    %rdi,%r8
  403212:	89 de                	mov    %ebx,%esi
  403214:	48 89 c7             	mov    %rax,%rdi
  403217:	e8 cd 14 00 00       	callq  4046e9 <Fmt_putd>
  40321c:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
  403223:	5b                   	pop    %rbx
  403224:	c9                   	leaveq 
  403225:	c3                   	retq   

0000000000403226 <cvt_u>:
  403226:	55                   	push   %rbp
  403227:	48 89 e5             	mov    %rsp,%rbp
  40322a:	53                   	push   %rbx
  40322b:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  403232:	89 7d ac             	mov    %edi,-0x54(%rbp)
  403235:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  403239:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  40323d:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  403241:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  403245:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  403249:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40324d:	8b 10                	mov    (%rax),%edx
  40324f:	83 fa 30             	cmp    $0x30,%edx
  403252:	73 15                	jae    403269 <cvt_u+0x43>
  403254:	48 8b 48 10          	mov    0x10(%rax),%rcx
  403258:	8b 10                	mov    (%rax),%edx
  40325a:	89 d2                	mov    %edx,%edx
  40325c:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403260:	8b 08                	mov    (%rax),%ecx
  403262:	83 c1 08             	add    $0x8,%ecx
  403265:	89 08                	mov    %ecx,(%rax)
  403267:	eb 0f                	jmp    403278 <cvt_u+0x52>
  403269:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40326d:	48 89 ca             	mov    %rcx,%rdx
  403270:	48 83 c1 08          	add    $0x8,%rcx
  403274:	48 89 48 08          	mov    %rcx,0x8(%rax)
  403278:	48 89 d0             	mov    %rdx,%rax
  40327b:	8b 00                	mov    (%rax),%eax
  40327d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403280:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403284:	48 83 c0 2b          	add    $0x2b,%rax
  403288:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40328c:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403291:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  403294:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  403299:	89 c8                	mov    %ecx,%eax
  40329b:	f7 e2                	mul    %edx
  40329d:	c1 ea 03             	shr    $0x3,%edx
  4032a0:	89 d0                	mov    %edx,%eax
  4032a2:	c1 e0 02             	shl    $0x2,%eax
  4032a5:	01 d0                	add    %edx,%eax
  4032a7:	01 c0                	add    %eax,%eax
  4032a9:	89 ca                	mov    %ecx,%edx
  4032ab:	29 c2                	sub    %eax,%edx
  4032ad:	89 d0                	mov    %edx,%eax
  4032af:	83 c0 30             	add    $0x30,%eax
  4032b2:	89 c2                	mov    %eax,%edx
  4032b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4032b8:	88 10                	mov    %dl,(%rax)
  4032ba:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  4032bd:	89 8d 7c ff ff ff    	mov    %ecx,-0x84(%rbp)
  4032c3:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  4032c8:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  4032ce:	f7 e2                	mul    %edx
  4032d0:	89 d0                	mov    %edx,%eax
  4032d2:	c1 e8 03             	shr    $0x3,%eax
  4032d5:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4032d8:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4032dc:	75 ae                	jne    40328c <cvt_u+0x66>
  4032de:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  4032e2:	48 83 c0 2b          	add    $0x2b,%rax
  4032e6:	89 c2                	mov    %eax,%edx
  4032e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4032ec:	89 d1                	mov    %edx,%ecx
  4032ee:	29 c1                	sub    %eax,%ecx
  4032f0:	89 c8                	mov    %ecx,%eax
  4032f2:	89 c3                	mov    %eax,%ebx
  4032f4:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  4032f8:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  4032fc:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  403300:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  403304:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403308:	8b 75 10             	mov    0x10(%rbp),%esi
  40330b:	89 34 24             	mov    %esi,(%rsp)
  40330e:	45 89 c1             	mov    %r8d,%r9d
  403311:	49 89 f8             	mov    %rdi,%r8
  403314:	89 de                	mov    %ebx,%esi
  403316:	48 89 c7             	mov    %rax,%rdi
  403319:	e8 cb 13 00 00       	callq  4046e9 <Fmt_putd>
  40331e:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
  403325:	5b                   	pop    %rbx
  403326:	c9                   	leaveq 
  403327:	c3                   	retq   

0000000000403328 <cvt_o>:
  403328:	55                   	push   %rbp
  403329:	48 89 e5             	mov    %rsp,%rbp
  40332c:	53                   	push   %rbx
  40332d:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  403334:	89 7d ac             	mov    %edi,-0x54(%rbp)
  403337:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  40333b:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  40333f:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  403343:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  403347:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  40334b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40334f:	8b 10                	mov    (%rax),%edx
  403351:	83 fa 30             	cmp    $0x30,%edx
  403354:	73 15                	jae    40336b <cvt_o+0x43>
  403356:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40335a:	8b 10                	mov    (%rax),%edx
  40335c:	89 d2                	mov    %edx,%edx
  40335e:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403362:	8b 08                	mov    (%rax),%ecx
  403364:	83 c1 08             	add    $0x8,%ecx
  403367:	89 08                	mov    %ecx,(%rax)
  403369:	eb 0f                	jmp    40337a <cvt_o+0x52>
  40336b:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40336f:	48 89 ca             	mov    %rcx,%rdx
  403372:	48 83 c1 08          	add    $0x8,%rcx
  403376:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40337a:	48 89 d0             	mov    %rdx,%rax
  40337d:	8b 00                	mov    (%rax),%eax
  40337f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403382:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403386:	48 83 c0 2b          	add    $0x2b,%rax
  40338a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40338e:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403393:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403396:	83 e0 07             	and    $0x7,%eax
  403399:	83 c0 30             	add    $0x30,%eax
  40339c:	89 c2                	mov    %eax,%edx
  40339e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4033a2:	88 10                	mov    %dl,(%rax)
  4033a4:	c1 6d ec 03          	shrl   $0x3,-0x14(%rbp)
  4033a8:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4033ac:	75 e0                	jne    40338e <cvt_o+0x66>
  4033ae:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  4033b2:	48 83 c0 2b          	add    $0x2b,%rax
  4033b6:	89 c2                	mov    %eax,%edx
  4033b8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4033bc:	89 d1                	mov    %edx,%ecx
  4033be:	29 c1                	sub    %eax,%ecx
  4033c0:	89 c8                	mov    %ecx,%eax
  4033c2:	89 c3                	mov    %eax,%ebx
  4033c4:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  4033c8:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  4033cc:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  4033d0:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  4033d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4033d8:	8b 75 10             	mov    0x10(%rbp),%esi
  4033db:	89 34 24             	mov    %esi,(%rsp)
  4033de:	45 89 c1             	mov    %r8d,%r9d
  4033e1:	49 89 f8             	mov    %rdi,%r8
  4033e4:	89 de                	mov    %ebx,%esi
  4033e6:	48 89 c7             	mov    %rax,%rdi
  4033e9:	e8 fb 12 00 00       	callq  4046e9 <Fmt_putd>
  4033ee:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  4033f5:	5b                   	pop    %rbx
  4033f6:	c9                   	leaveq 
  4033f7:	c3                   	retq   

00000000004033f8 <cvt_x>:
  4033f8:	55                   	push   %rbp
  4033f9:	48 89 e5             	mov    %rsp,%rbp
  4033fc:	53                   	push   %rbx
  4033fd:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  403404:	89 7d ac             	mov    %edi,-0x54(%rbp)
  403407:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  40340b:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  40340f:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  403413:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  403417:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  40341b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40341f:	8b 10                	mov    (%rax),%edx
  403421:	83 fa 30             	cmp    $0x30,%edx
  403424:	73 15                	jae    40343b <cvt_x+0x43>
  403426:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40342a:	8b 10                	mov    (%rax),%edx
  40342c:	89 d2                	mov    %edx,%edx
  40342e:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403432:	8b 08                	mov    (%rax),%ecx
  403434:	83 c1 08             	add    $0x8,%ecx
  403437:	89 08                	mov    %ecx,(%rax)
  403439:	eb 0f                	jmp    40344a <cvt_x+0x52>
  40343b:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40343f:	48 89 ca             	mov    %rcx,%rdx
  403442:	48 83 c1 08          	add    $0x8,%rcx
  403446:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40344a:	48 89 d0             	mov    %rdx,%rax
  40344d:	8b 00                	mov    (%rax),%eax
  40344f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403452:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403456:	48 83 c0 2b          	add    $0x2b,%rax
  40345a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40345e:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403463:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403466:	83 e0 0f             	and    $0xf,%eax
  403469:	89 c2                	mov    %eax,%edx
  40346b:	48 8d 05 a2 29 00 00 	lea    0x29a2(%rip),%rax        # 405e14 <_IO_stdin_used+0x304>
  403472:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
  403476:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40347a:	88 10                	mov    %dl,(%rax)
  40347c:	c1 6d ec 04          	shrl   $0x4,-0x14(%rbp)
  403480:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  403484:	75 d8                	jne    40345e <cvt_x+0x66>
  403486:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  40348a:	48 83 c0 2b          	add    $0x2b,%rax
  40348e:	89 c2                	mov    %eax,%edx
  403490:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403494:	89 d1                	mov    %edx,%ecx
  403496:	29 c1                	sub    %eax,%ecx
  403498:	89 c8                	mov    %ecx,%eax
  40349a:	89 c3                	mov    %eax,%ebx
  40349c:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  4034a0:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  4034a4:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  4034a8:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  4034ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4034b0:	8b 75 10             	mov    0x10(%rbp),%esi
  4034b3:	89 34 24             	mov    %esi,(%rsp)
  4034b6:	45 89 c1             	mov    %r8d,%r9d
  4034b9:	49 89 f8             	mov    %rdi,%r8
  4034bc:	89 de                	mov    %ebx,%esi
  4034be:	48 89 c7             	mov    %rax,%rdi
  4034c1:	e8 23 12 00 00       	callq  4046e9 <Fmt_putd>
  4034c6:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  4034cd:	5b                   	pop    %rbx
  4034ce:	c9                   	leaveq 
  4034cf:	c3                   	retq   

00000000004034d0 <cvt_p>:
  4034d0:	55                   	push   %rbp
  4034d1:	48 89 e5             	mov    %rsp,%rbp
  4034d4:	53                   	push   %rbx
  4034d5:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  4034dc:	89 7d ac             	mov    %edi,-0x54(%rbp)
  4034df:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  4034e3:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  4034e7:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  4034eb:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  4034ef:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  4034f3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  4034f7:	8b 10                	mov    (%rax),%edx
  4034f9:	83 fa 30             	cmp    $0x30,%edx
  4034fc:	73 15                	jae    403513 <cvt_p+0x43>
  4034fe:	48 8b 48 10          	mov    0x10(%rax),%rcx
  403502:	8b 10                	mov    (%rax),%edx
  403504:	89 d2                	mov    %edx,%edx
  403506:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  40350a:	8b 08                	mov    (%rax),%ecx
  40350c:	83 c1 08             	add    $0x8,%ecx
  40350f:	89 08                	mov    %ecx,(%rax)
  403511:	eb 0f                	jmp    403522 <cvt_p+0x52>
  403513:	48 8b 48 08          	mov    0x8(%rax),%rcx
  403517:	48 89 ca             	mov    %rcx,%rdx
  40351a:	48 83 c1 08          	add    $0x8,%rcx
  40351e:	48 89 48 08          	mov    %rcx,0x8(%rax)
  403522:	48 89 d0             	mov    %rdx,%rax
  403525:	48 8b 00             	mov    (%rax),%rax
  403528:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40352c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403530:	48 83 c0 2b          	add    $0x2b,%rax
  403534:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403538:	c7 45 dc 00 00 00 80 	movl   $0x80000000,-0x24(%rbp)
  40353f:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403544:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403548:	48 89 c2             	mov    %rax,%rdx
  40354b:	83 e2 0f             	and    $0xf,%edx
  40354e:	48 8d 05 bf 28 00 00 	lea    0x28bf(%rip),%rax        # 405e14 <_IO_stdin_used+0x304>
  403555:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
  403559:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40355d:	88 10                	mov    %dl,(%rax)
  40355f:	48 c1 6d e8 04       	shrq   $0x4,-0x18(%rbp)
  403564:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  403569:	75 d4                	jne    40353f <cvt_p+0x6f>
  40356b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  40356f:	48 83 c0 2b          	add    $0x2b,%rax
  403573:	89 c2                	mov    %eax,%edx
  403575:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403579:	89 d1                	mov    %edx,%ecx
  40357b:	29 c1                	sub    %eax,%ecx
  40357d:	89 c8                	mov    %ecx,%eax
  40357f:	89 c3                	mov    %eax,%ebx
  403581:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  403585:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  403589:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  40358d:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  403591:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403595:	8b 75 dc             	mov    -0x24(%rbp),%esi
  403598:	89 34 24             	mov    %esi,(%rsp)
  40359b:	45 89 c1             	mov    %r8d,%r9d
  40359e:	49 89 f8             	mov    %rdi,%r8
  4035a1:	89 de                	mov    %ebx,%esi
  4035a3:	48 89 c7             	mov    %rax,%rdi
  4035a6:	e8 3e 11 00 00       	callq  4046e9 <Fmt_putd>
  4035ab:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  4035b2:	5b                   	pop    %rbx
  4035b3:	c9                   	leaveq 
  4035b4:	c3                   	retq   

00000000004035b5 <cvt_c>:
  4035b5:	55                   	push   %rbp
  4035b6:	48 89 e5             	mov    %rsp,%rbp
  4035b9:	48 83 ec 40          	sub    $0x40,%rsp
  4035bd:	89 7d ec             	mov    %edi,-0x14(%rbp)
  4035c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4035c4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4035c8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  4035cc:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  4035d0:	44 89 4d c4          	mov    %r9d,-0x3c(%rbp)
  4035d4:	81 7d c4 00 00 00 80 	cmpl   $0x80000000,-0x3c(%rbp)
  4035db:	75 07                	jne    4035e4 <cvt_c+0x2f>
  4035dd:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  4035e4:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  4035e8:	79 0e                	jns    4035f8 <cvt_c+0x43>
  4035ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4035ee:	48 83 c0 2d          	add    $0x2d,%rax
  4035f2:	c6 00 01             	movb   $0x1,(%rax)
  4035f5:	f7 5d c4             	negl   -0x3c(%rbp)
  4035f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4035fc:	48 83 c0 2d          	add    $0x2d,%rax
  403600:	0f b6 00             	movzbl (%rax),%eax
  403603:	84 c0                	test   %al,%al
  403605:	75 2c                	jne    403633 <cvt_c+0x7e>
  403607:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  40360a:	83 e8 01             	sub    $0x1,%eax
  40360d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  403610:	eb 12                	jmp    403624 <cvt_c+0x6f>
  403612:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403616:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40361a:	48 89 c6             	mov    %rax,%rsi
  40361d:	bf 20 00 00 00       	mov    $0x20,%edi
  403622:	ff d2                	callq  *%rdx
  403624:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  403628:	0f 9f c0             	setg   %al
  40362b:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  40362f:	84 c0                	test   %al,%al
  403631:	75 df                	jne    403612 <cvt_c+0x5d>
  403633:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403637:	8b 10                	mov    (%rax),%edx
  403639:	83 fa 30             	cmp    $0x30,%edx
  40363c:	73 15                	jae    403653 <cvt_c+0x9e>
  40363e:	48 8b 48 10          	mov    0x10(%rax),%rcx
  403642:	8b 10                	mov    (%rax),%edx
  403644:	89 d2                	mov    %edx,%edx
  403646:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  40364a:	8b 08                	mov    (%rax),%ecx
  40364c:	83 c1 08             	add    $0x8,%ecx
  40364f:	89 08                	mov    %ecx,(%rax)
  403651:	eb 0f                	jmp    403662 <cvt_c+0xad>
  403653:	48 8b 48 08          	mov    0x8(%rax),%rcx
  403657:	48 89 ca             	mov    %rcx,%rdx
  40365a:	48 83 c1 08          	add    $0x8,%rcx
  40365e:	48 89 48 08          	mov    %rcx,0x8(%rax)
  403662:	48 89 d0             	mov    %rdx,%rax
  403665:	8b 00                	mov    (%rax),%eax
  403667:	0f b6 c0             	movzbl %al,%eax
  40366a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40366e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  403672:	48 89 d6             	mov    %rdx,%rsi
  403675:	89 c7                	mov    %eax,%edi
  403677:	ff d1                	callq  *%rcx
  403679:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40367d:	48 83 c0 2d          	add    $0x2d,%rax
  403681:	0f b6 00             	movzbl (%rax),%eax
  403684:	84 c0                	test   %al,%al
  403686:	74 2c                	je     4036b4 <cvt_c+0xff>
  403688:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  40368b:	83 e8 01             	sub    $0x1,%eax
  40368e:	89 45 f8             	mov    %eax,-0x8(%rbp)
  403691:	eb 12                	jmp    4036a5 <cvt_c+0xf0>
  403693:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403697:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40369b:	48 89 c6             	mov    %rax,%rsi
  40369e:	bf 20 00 00 00       	mov    $0x20,%edi
  4036a3:	ff d2                	callq  *%rdx
  4036a5:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  4036a9:	0f 9f c0             	setg   %al
  4036ac:	83 6d f8 01          	subl   $0x1,-0x8(%rbp)
  4036b0:	84 c0                	test   %al,%al
  4036b2:	75 df                	jne    403693 <cvt_c+0xde>
  4036b4:	c9                   	leaveq 
  4036b5:	c3                   	retq   

00000000004036b6 <cvt_f>:
  4036b6:	55                   	push   %rbp
  4036b7:	48 89 e5             	mov    %rsp,%rbp
  4036ba:	53                   	push   %rbx
  4036bb:	48 81 ec e8 01 00 00 	sub    $0x1e8,%rsp
  4036c2:	89 bd 4c fe ff ff    	mov    %edi,-0x1b4(%rbp)
  4036c8:	48 89 b5 40 fe ff ff 	mov    %rsi,-0x1c0(%rbp)
  4036cf:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
  4036d6:	48 89 8d 30 fe ff ff 	mov    %rcx,-0x1d0(%rbp)
  4036dd:	4c 89 85 28 fe ff ff 	mov    %r8,-0x1d8(%rbp)
  4036e4:	44 89 8d 24 fe ff ff 	mov    %r9d,-0x1dc(%rbp)
  4036eb:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  4036ef:	79 07                	jns    4036f8 <cvt_f+0x42>
  4036f1:	c7 45 10 06 00 00 00 	movl   $0x6,0x10(%rbp)
  4036f8:	83 bd 4c fe ff ff 67 	cmpl   $0x67,-0x1b4(%rbp)
  4036ff:	75 0d                	jne    40370e <cvt_f+0x58>
  403701:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  403705:	75 07                	jne    40370e <cvt_f+0x58>
  403707:	c7 45 10 01 00 00 00 	movl   $0x1,0x10(%rbp)
  40370e:	83 7d 10 63          	cmpl   $0x63,0x10(%rbp)
  403712:	7e 1b                	jle    40372f <cvt_f+0x79>
  403714:	ba 7e 00 00 00       	mov    $0x7e,%edx
  403719:	48 8d 35 ea 26 00 00 	lea    0x26ea(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  403720:	48 8d 05 99 36 20 00 	lea    0x203699(%rip),%rax        # 606dc0 <Assert_Failed>
  403727:	48 89 c7             	mov    %rax,%rdi
  40372a:	e8 61 f7 ff ff       	callq  402e90 <Except_raise>
  40372f:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
  403735:	88 05 fa 39 20 00    	mov    %al,0x2039fa(%rip)        # 607135 <fmt.2280+0x4>
  40373b:	8b 4d 10             	mov    0x10(%rbp),%ecx
  40373e:	ba 67 66 66 66       	mov    $0x66666667,%edx
  403743:	89 c8                	mov    %ecx,%eax
  403745:	f7 ea                	imul   %edx
  403747:	c1 fa 02             	sar    $0x2,%edx
  40374a:	89 c8                	mov    %ecx,%eax
  40374c:	c1 f8 1f             	sar    $0x1f,%eax
  40374f:	29 c2                	sub    %eax,%edx
  403751:	89 d0                	mov    %edx,%eax
  403753:	c1 e0 02             	shl    $0x2,%eax
  403756:	01 d0                	add    %edx,%eax
  403758:	01 c0                	add    %eax,%eax
  40375a:	89 ca                	mov    %ecx,%edx
  40375c:	29 c2                	sub    %eax,%edx
  40375e:	89 d0                	mov    %edx,%eax
  403760:	83 c0 30             	add    $0x30,%eax
  403763:	88 05 cb 39 20 00    	mov    %al,0x2039cb(%rip)        # 607134 <fmt.2280+0x3>
  403769:	8b 4d 10             	mov    0x10(%rbp),%ecx
  40376c:	ba 67 66 66 66       	mov    $0x66666667,%edx
  403771:	89 c8                	mov    %ecx,%eax
  403773:	f7 ea                	imul   %edx
  403775:	c1 fa 02             	sar    $0x2,%edx
  403778:	89 c8                	mov    %ecx,%eax
  40377a:	c1 f8 1f             	sar    $0x1f,%eax
  40377d:	89 d1                	mov    %edx,%ecx
  40377f:	29 c1                	sub    %eax,%ecx
  403781:	ba 67 66 66 66       	mov    $0x66666667,%edx
  403786:	89 c8                	mov    %ecx,%eax
  403788:	f7 ea                	imul   %edx
  40378a:	c1 fa 02             	sar    $0x2,%edx
  40378d:	89 c8                	mov    %ecx,%eax
  40378f:	c1 f8 1f             	sar    $0x1f,%eax
  403792:	29 c2                	sub    %eax,%edx
  403794:	89 d0                	mov    %edx,%eax
  403796:	c1 e0 02             	shl    $0x2,%eax
  403799:	01 d0                	add    %edx,%eax
  40379b:	01 c0                	add    %eax,%eax
  40379d:	89 ca                	mov    %ecx,%edx
  40379f:	29 c2                	sub    %eax,%edx
  4037a1:	89 d0                	mov    %edx,%eax
  4037a3:	83 c0 30             	add    $0x30,%eax
  4037a6:	88 05 87 39 20 00    	mov    %al,0x203987(%rip)        # 607133 <fmt.2280+0x2>
  4037ac:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  4037b3:	8b 50 04             	mov    0x4(%rax),%edx
  4037b6:	81 fa b0 00 00 00    	cmp    $0xb0,%edx
  4037bc:	73 18                	jae    4037d6 <cvt_f+0x120>
  4037be:	48 8b 48 10          	mov    0x10(%rax),%rcx
  4037c2:	8b 50 04             	mov    0x4(%rax),%edx
  4037c5:	89 d2                	mov    %edx,%edx
  4037c7:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  4037cb:	8b 48 04             	mov    0x4(%rax),%ecx
  4037ce:	83 c1 10             	add    $0x10,%ecx
  4037d1:	89 48 04             	mov    %ecx,0x4(%rax)
  4037d4:	eb 0f                	jmp    4037e5 <cvt_f+0x12f>
  4037d6:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4037da:	48 89 ca             	mov    %rcx,%rdx
  4037dd:	48 83 c1 08          	add    $0x8,%rcx
  4037e1:	48 89 48 08          	mov    %rcx,0x8(%rax)
  4037e5:	48 89 d0             	mov    %rdx,%rax
  4037e8:	f2 0f 10 00          	movsd  (%rax),%xmm0
  4037ec:	48 8d 15 3e 39 20 00 	lea    0x20393e(%rip),%rdx        # 607131 <fmt.2280>
  4037f3:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  4037fa:	48 89 d6             	mov    %rdx,%rsi
  4037fd:	48 89 c7             	mov    %rax,%rdi
  403800:	b8 01 00 00 00       	mov    $0x1,%eax
  403805:	e8 56 d6 ff ff       	callq  400e60 <sprintf@plt>
  40380a:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  403811:	48 89 c7             	mov    %rax,%rdi
  403814:	e8 07 d5 ff ff       	callq  400d20 <strlen@plt>
  403819:	89 c3                	mov    %eax,%ebx
  40381b:	44 8b 85 24 fe ff ff 	mov    -0x1dc(%rbp),%r8d
  403822:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
  403829:	48 8b 8d 30 fe ff ff 	mov    -0x1d0(%rbp),%rcx
  403830:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx
  403837:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  40383e:	8b 75 10             	mov    0x10(%rbp),%esi
  403841:	89 34 24             	mov    %esi,(%rsp)
  403844:	45 89 c1             	mov    %r8d,%r9d
  403847:	49 89 f8             	mov    %rdi,%r8
  40384a:	89 de                	mov    %ebx,%esi
  40384c:	48 89 c7             	mov    %rax,%rdi
  40384f:	e8 95 0e 00 00       	callq  4046e9 <Fmt_putd>
  403854:	48 81 c4 e8 01 00 00 	add    $0x1e8,%rsp
  40385b:	5b                   	pop    %rbx
  40385c:	c9                   	leaveq 
  40385d:	c3                   	retq   

000000000040385e <outc>:
  40385e:	55                   	push   %rbp
  40385f:	48 89 e5             	mov    %rsp,%rbp
  403862:	48 83 ec 20          	sub    $0x20,%rsp
  403866:	89 7d ec             	mov    %edi,-0x14(%rbp)
  403869:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40386d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403871:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403875:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  403879:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40387c:	48 89 d6             	mov    %rdx,%rsi
  40387f:	89 c7                	mov    %eax,%edi
  403881:	e8 da d4 ff ff       	callq  400d60 <_IO_putc@plt>
  403886:	c9                   	leaveq 
  403887:	c3                   	retq   

0000000000403888 <insert>:
  403888:	55                   	push   %rbp
  403889:	48 89 e5             	mov    %rsp,%rbp
  40388c:	48 83 ec 20          	sub    $0x20,%rsp
  403890:	89 7d ec             	mov    %edi,-0x14(%rbp)
  403893:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  403897:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40389b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40389f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4038a3:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4038a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4038ab:	48 8b 08             	mov    (%rax),%rcx
  4038ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4038b2:	8b 40 10             	mov    0x10(%rax),%eax
  4038b5:	48 98                	cltq   
  4038b7:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax
  4038bb:	48 39 c2             	cmp    %rax,%rdx
  4038be:	72 1b                	jb     4038db <insert+0x53>
  4038c0:	ba a2 00 00 00       	mov    $0xa2,%edx
  4038c5:	48 8d 35 3e 25 00 00 	lea    0x253e(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  4038cc:	48 8d 05 f5 34 20 00 	lea    0x2034f5(%rip),%rax        # 606dc8 <Fmt_Overflow>
  4038d3:	48 89 c7             	mov    %rax,%rdi
  4038d6:	e8 b5 f5 ff ff       	callq  402e90 <Except_raise>
  4038db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4038df:	48 8b 40 08          	mov    0x8(%rax),%rax
  4038e3:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4038e6:	88 10                	mov    %dl,(%rax)
  4038e8:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4038ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4038f0:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4038f4:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4038f7:	c9                   	leaveq 
  4038f8:	c3                   	retq   

00000000004038f9 <append>:
  4038f9:	55                   	push   %rbp
  4038fa:	48 89 e5             	mov    %rsp,%rbp
  4038fd:	53                   	push   %rbx
  4038fe:	48 83 ec 28          	sub    $0x28,%rsp
  403902:	89 7d dc             	mov    %edi,-0x24(%rbp)
  403905:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  403909:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40390d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  403911:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403915:	48 8b 50 08          	mov    0x8(%rax),%rdx
  403919:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40391d:	48 8b 08             	mov    (%rax),%rcx
  403920:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403924:	8b 40 10             	mov    0x10(%rax),%eax
  403927:	48 98                	cltq   
  403929:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax
  40392d:	48 39 c2             	cmp    %rax,%rdx
  403930:	72 60                	jb     403992 <append+0x99>
  403932:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403936:	8b 40 10             	mov    0x10(%rax),%eax
  403939:	01 c0                	add    %eax,%eax
  40393b:	48 63 d8             	movslq %eax,%rbx
  40393e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403942:	48 8b 00             	mov    (%rax),%rax
  403945:	b9 a9 00 00 00       	mov    $0xa9,%ecx
  40394a:	48 8d 15 b9 24 00 00 	lea    0x24b9(%rip),%rdx        # 405e0a <_IO_stdin_used+0x2fa>
  403951:	48 89 de             	mov    %rbx,%rsi
  403954:	48 89 c7             	mov    %rax,%rdi
  403957:	e8 ef 11 00 00       	callq  404b4b <Mem_resize>
  40395c:	48 89 c2             	mov    %rax,%rdx
  40395f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403963:	48 89 10             	mov    %rdx,(%rax)
  403966:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40396a:	48 8b 10             	mov    (%rax),%rdx
  40396d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403971:	8b 40 10             	mov    0x10(%rax),%eax
  403974:	48 98                	cltq   
  403976:	48 01 c2             	add    %rax,%rdx
  403979:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40397d:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403981:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403985:	8b 40 10             	mov    0x10(%rax),%eax
  403988:	8d 14 00             	lea    (%rax,%rax,1),%edx
  40398b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40398f:	89 50 10             	mov    %edx,0x10(%rax)
  403992:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403996:	48 8b 40 08          	mov    0x8(%rax),%rax
  40399a:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40399d:	88 10                	mov    %dl,(%rax)
  40399f:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4039a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4039a7:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4039ab:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4039ae:	48 83 c4 28          	add    $0x28,%rsp
  4039b2:	5b                   	pop    %rbx
  4039b3:	c9                   	leaveq 
  4039b4:	c3                   	retq   

00000000004039b5 <Fmt_puts>:
  4039b5:	55                   	push   %rbp
  4039b6:	48 89 e5             	mov    %rsp,%rbp
  4039b9:	48 83 ec 40          	sub    $0x40,%rsp
  4039bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4039c1:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4039c4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4039c8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  4039cc:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  4039d0:	44 89 4d c4          	mov    %r9d,-0x3c(%rbp)
  4039d4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4039d9:	75 1b                	jne    4039f6 <Fmt_puts+0x41>
  4039db:	ba b3 00 00 00       	mov    $0xb3,%edx
  4039e0:	48 8d 35 23 24 00 00 	lea    0x2423(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  4039e7:	48 8d 05 d2 33 20 00 	lea    0x2033d2(%rip),%rax        # 606dc0 <Assert_Failed>
  4039ee:	48 89 c7             	mov    %rax,%rdi
  4039f1:	e8 9a f4 ff ff       	callq  402e90 <Except_raise>
  4039f6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4039fa:	79 1b                	jns    403a17 <Fmt_puts+0x62>
  4039fc:	ba b4 00 00 00       	mov    $0xb4,%edx
  403a01:	48 8d 35 02 24 00 00 	lea    0x2402(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  403a08:	48 8d 05 b1 33 20 00 	lea    0x2033b1(%rip),%rax        # 606dc0 <Assert_Failed>
  403a0f:	48 89 c7             	mov    %rax,%rdi
  403a12:	e8 79 f4 ff ff       	callq  402e90 <Except_raise>
  403a17:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  403a1c:	75 1b                	jne    403a39 <Fmt_puts+0x84>
  403a1e:	ba b5 00 00 00       	mov    $0xb5,%edx
  403a23:	48 8d 35 e0 23 00 00 	lea    0x23e0(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  403a2a:	48 8d 05 8f 33 20 00 	lea    0x20338f(%rip),%rax        # 606dc0 <Assert_Failed>
  403a31:	48 89 c7             	mov    %rax,%rdi
  403a34:	e8 57 f4 ff ff       	callq  402e90 <Except_raise>
  403a39:	81 7d c4 00 00 00 80 	cmpl   $0x80000000,-0x3c(%rbp)
  403a40:	75 07                	jne    403a49 <Fmt_puts+0x94>
  403a42:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  403a49:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  403a4d:	79 0e                	jns    403a5d <Fmt_puts+0xa8>
  403a4f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403a53:	48 83 c0 2d          	add    $0x2d,%rax
  403a57:	c6 00 01             	movb   $0x1,(%rax)
  403a5a:	f7 5d c4             	negl   -0x3c(%rbp)
  403a5d:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  403a61:	78 0b                	js     403a6e <Fmt_puts+0xb9>
  403a63:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403a67:	48 83 c0 30          	add    $0x30,%rax
  403a6b:	c6 00 00             	movb   $0x0,(%rax)
  403a6e:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  403a72:	78 0e                	js     403a82 <Fmt_puts+0xcd>
  403a74:	8b 45 10             	mov    0x10(%rbp),%eax
  403a77:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  403a7a:	7d 06                	jge    403a82 <Fmt_puts+0xcd>
  403a7c:	8b 45 10             	mov    0x10(%rbp),%eax
  403a7f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  403a82:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403a86:	48 83 c0 2d          	add    $0x2d,%rax
  403a8a:	0f b6 00             	movzbl (%rax),%eax
  403a8d:	84 c0                	test   %al,%al
  403a8f:	75 32                	jne    403ac3 <Fmt_puts+0x10e>
  403a91:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  403a94:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  403a97:	89 d1                	mov    %edx,%ecx
  403a99:	29 c1                	sub    %eax,%ecx
  403a9b:	89 c8                	mov    %ecx,%eax
  403a9d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  403aa0:	eb 12                	jmp    403ab4 <Fmt_puts+0xff>
  403aa2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403aa6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  403aaa:	48 89 c6             	mov    %rax,%rsi
  403aad:	bf 20 00 00 00       	mov    $0x20,%edi
  403ab2:	ff d2                	callq  *%rdx
  403ab4:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  403ab8:	0f 9f c0             	setg   %al
  403abb:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  403abf:	84 c0                	test   %al,%al
  403ac1:	75 df                	jne    403aa2 <Fmt_puts+0xed>
  403ac3:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  403aca:	eb 22                	jmp    403aee <Fmt_puts+0x139>
  403acc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403ad0:	0f b6 00             	movzbl (%rax),%eax
  403ad3:	0f b6 c0             	movzbl %al,%eax
  403ad6:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  403adb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  403adf:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  403ae3:	48 89 d6             	mov    %rdx,%rsi
  403ae6:	89 c7                	mov    %eax,%edi
  403ae8:	ff d1                	callq  *%rcx
  403aea:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  403aee:	8b 45 f8             	mov    -0x8(%rbp),%eax
  403af1:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  403af4:	7c d6                	jl     403acc <Fmt_puts+0x117>
  403af6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403afa:	48 83 c0 2d          	add    $0x2d,%rax
  403afe:	0f b6 00             	movzbl (%rax),%eax
  403b01:	84 c0                	test   %al,%al
  403b03:	74 32                	je     403b37 <Fmt_puts+0x182>
  403b05:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  403b08:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  403b0b:	89 d1                	mov    %edx,%ecx
  403b0d:	29 c1                	sub    %eax,%ecx
  403b0f:	89 c8                	mov    %ecx,%eax
  403b11:	89 45 f4             	mov    %eax,-0xc(%rbp)
  403b14:	eb 12                	jmp    403b28 <Fmt_puts+0x173>
  403b16:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403b1a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  403b1e:	48 89 c6             	mov    %rax,%rsi
  403b21:	bf 20 00 00 00       	mov    $0x20,%edi
  403b26:	ff d2                	callq  *%rdx
  403b28:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  403b2c:	0f 9f c0             	setg   %al
  403b2f:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
  403b33:	84 c0                	test   %al,%al
  403b35:	75 df                	jne    403b16 <Fmt_puts+0x161>
  403b37:	c9                   	leaveq 
  403b38:	c3                   	retq   

0000000000403b39 <Fmt_fmt>:
  403b39:	55                   	push   %rbp
  403b3a:	48 89 e5             	mov    %rsp,%rbp
  403b3d:	53                   	push   %rbx
  403b3e:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
  403b45:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  403b4c:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  403b53:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  403b5a:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
  403b61:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
  403b68:	0f b6 c0             	movzbl %al,%eax
  403b6b:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
  403b72:	00 
  403b73:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403ba3 <Fmt_fmt+0x6a>
  403b7a:	48 29 c8             	sub    %rcx,%rax
  403b7d:	48 8d 4d ef          	lea    -0x11(%rbp),%rcx
  403b81:	ff e0                	jmpq   *%rax
  403b83:	0f 29 79 f1          	movaps %xmm7,-0xf(%rcx)
  403b87:	0f 29 71 e1          	movaps %xmm6,-0x1f(%rcx)
  403b8b:	0f 29 69 d1          	movaps %xmm5,-0x2f(%rcx)
  403b8f:	0f 29 61 c1          	movaps %xmm4,-0x3f(%rcx)
  403b93:	0f 29 59 b1          	movaps %xmm3,-0x4f(%rcx)
  403b97:	0f 29 51 a1          	movaps %xmm2,-0x5f(%rcx)
  403b9b:	0f 29 49 91          	movaps %xmm1,-0x6f(%rcx)
  403b9f:	0f 29 41 81          	movaps %xmm0,-0x7f(%rcx)
  403ba3:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
  403baa:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403bb1:	c7 00 18 00 00 00    	movl   $0x18,(%rax)
  403bb7:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403bbe:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  403bc5:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403bcc:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  403bd0:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403bd4:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403bdb:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
  403be2:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403be6:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  403bed:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
  403bf4:	48 8b 9d 10 ff ff ff 	mov    -0xf0(%rbp),%rbx
  403bfb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  403c02:	48 89 de             	mov    %rbx,%rsi
  403c05:	48 89 c7             	mov    %rax,%rdi
  403c08:	e8 2b 05 00 00       	callq  404138 <Fmt_vfmt>
  403c0d:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
  403c14:	5b                   	pop    %rbx
  403c15:	c9                   	leaveq 
  403c16:	c3                   	retq   

0000000000403c17 <Fmt_print>:
  403c17:	55                   	push   %rbp
  403c18:	48 89 e5             	mov    %rsp,%rbp
  403c1b:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  403c22:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
  403c29:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  403c30:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  403c37:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  403c3e:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  403c45:	0f b6 c0             	movzbl %al,%eax
  403c48:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  403c4f:	00 
  403c50:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403c80 <Fmt_print+0x69>
  403c57:	48 29 d0             	sub    %rdx,%rax
  403c5a:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  403c5e:	ff e0                	jmpq   *%rax
  403c60:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)
  403c64:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)
  403c68:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)
  403c6c:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)
  403c70:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)
  403c74:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)
  403c78:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)
  403c7c:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)
  403c80:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  403c87:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403c8e:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  403c94:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403c9b:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  403ca2:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403ca9:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  403cad:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403cb1:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403cb8:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  403cbf:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403cc3:	48 8b 05 16 33 20 00 	mov    0x203316(%rip),%rax        # 606fe0 <stdout@GLIBC_2.2.5>
  403cca:	48 8b 00             	mov    (%rax),%rax
  403ccd:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  403cd4:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  403cdb:	48 89 c6             	mov    %rax,%rsi
  403cde:	48 8d 3d 79 fb ff ff 	lea    -0x487(%rip),%rdi        # 40385e <outc>
  403ce5:	e8 4e 04 00 00       	callq  404138 <Fmt_vfmt>
  403cea:	c9                   	leaveq 
  403ceb:	c3                   	retq   

0000000000403cec <Fmt_fprint>:
  403cec:	55                   	push   %rbp
  403ced:	48 89 e5             	mov    %rsp,%rbp
  403cf0:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  403cf7:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  403cfe:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  403d05:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  403d0c:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  403d13:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  403d1a:	0f b6 c0             	movzbl %al,%eax
  403d1d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  403d24:	00 
  403d25:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403d55 <Fmt_fprint+0x69>
  403d2c:	48 29 d0             	sub    %rdx,%rax
  403d2f:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  403d33:	ff e0                	jmpq   *%rax
  403d35:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)
  403d39:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)
  403d3d:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)
  403d41:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)
  403d45:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)
  403d49:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)
  403d4d:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)
  403d51:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)
  403d55:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
  403d5c:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403d63:	c7 00 10 00 00 00    	movl   $0x10,(%rax)
  403d69:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403d70:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  403d77:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403d7e:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  403d82:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403d86:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403d8d:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  403d94:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403d98:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  403d9f:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
  403da6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  403dad:	48 89 c6             	mov    %rax,%rsi
  403db0:	48 8d 3d a7 fa ff ff 	lea    -0x559(%rip),%rdi        # 40385e <outc>
  403db7:	e8 7c 03 00 00       	callq  404138 <Fmt_vfmt>
  403dbc:	c9                   	leaveq 
  403dbd:	c3                   	retq   

0000000000403dbe <Fmt_sfmt>:
  403dbe:	55                   	push   %rbp
  403dbf:	48 89 e5             	mov    %rsp,%rbp
  403dc2:	53                   	push   %rbx
  403dc3:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
  403dca:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  403dd1:	89 b5 14 ff ff ff    	mov    %esi,-0xec(%rbp)
  403dd7:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  403dde:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
  403de5:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
  403dec:	0f b6 c0             	movzbl %al,%eax
  403def:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
  403df6:	00 
  403df7:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403e27 <Fmt_sfmt+0x69>
  403dfe:	48 29 c8             	sub    %rcx,%rax
  403e01:	48 8d 4d ef          	lea    -0x11(%rbp),%rcx
  403e05:	ff e0                	jmpq   *%rax
  403e07:	0f 29 79 f1          	movaps %xmm7,-0xf(%rcx)
  403e0b:	0f 29 71 e1          	movaps %xmm6,-0x1f(%rcx)
  403e0f:	0f 29 69 d1          	movaps %xmm5,-0x2f(%rcx)
  403e13:	0f 29 61 c1          	movaps %xmm4,-0x3f(%rcx)
  403e17:	0f 29 59 b1          	movaps %xmm3,-0x4f(%rcx)
  403e1b:	0f 29 51 a1          	movaps %xmm2,-0x5f(%rcx)
  403e1f:	0f 29 49 91          	movaps %xmm1,-0x6f(%rcx)
  403e23:	0f 29 41 81          	movaps %xmm0,-0x7f(%rcx)
  403e27:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
  403e2e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403e35:	c7 00 18 00 00 00    	movl   $0x18,(%rax)
  403e3b:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403e42:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  403e49:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403e50:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  403e54:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403e58:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403e5f:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
  403e66:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403e6a:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  403e71:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
  403e78:	8b 9d 14 ff ff ff    	mov    -0xec(%rbp),%ebx
  403e7e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  403e85:	89 de                	mov    %ebx,%esi
  403e87:	48 89 c7             	mov    %rax,%rdi
  403e8a:	e8 16 00 00 00       	callq  403ea5 <Fmt_vsfmt>
  403e8f:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  403e95:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  403e9b:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
  403ea2:	5b                   	pop    %rbx
  403ea3:	c9                   	leaveq 
  403ea4:	c3                   	retq   

0000000000403ea5 <Fmt_vsfmt>:
  403ea5:	55                   	push   %rbp
  403ea6:	48 89 e5             	mov    %rsp,%rbp
  403ea9:	48 83 ec 40          	sub    $0x40,%rsp
  403ead:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  403eb1:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  403eb4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  403eb8:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  403ebc:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  403ec1:	75 1b                	jne    403ede <Fmt_vsfmt+0x39>
  403ec3:	ba e8 00 00 00       	mov    $0xe8,%edx
  403ec8:	48 8d 35 3b 1f 00 00 	lea    0x1f3b(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  403ecf:	48 8d 05 ea 2e 20 00 	lea    0x202eea(%rip),%rax        # 606dc0 <Assert_Failed>
  403ed6:	48 89 c7             	mov    %rax,%rdi
  403ed9:	e8 b2 ef ff ff       	callq  402e90 <Except_raise>
  403ede:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  403ee2:	7f 1b                	jg     403eff <Fmt_vsfmt+0x5a>
  403ee4:	ba e9 00 00 00       	mov    $0xe9,%edx
  403ee9:	48 8d 35 1a 1f 00 00 	lea    0x1f1a(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  403ef0:	48 8d 05 c9 2e 20 00 	lea    0x202ec9(%rip),%rax        # 606dc0 <Assert_Failed>
  403ef7:	48 89 c7             	mov    %rax,%rdi
  403efa:	e8 91 ef ff ff       	callq  402e90 <Except_raise>
  403eff:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  403f04:	75 1b                	jne    403f21 <Fmt_vsfmt+0x7c>
  403f06:	ba ea 00 00 00       	mov    $0xea,%edx
  403f0b:	48 8d 35 f8 1e 00 00 	lea    0x1ef8(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  403f12:	48 8d 05 a7 2e 20 00 	lea    0x202ea7(%rip),%rax        # 606dc0 <Assert_Failed>
  403f19:	48 89 c7             	mov    %rax,%rdi
  403f1c:	e8 6f ef ff ff       	callq  402e90 <Except_raise>
  403f21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403f25:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  403f29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403f2d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403f31:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  403f34:	89 45 f0             	mov    %eax,-0x10(%rbp)
  403f37:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  403f3b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  403f3f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  403f43:	48 89 c6             	mov    %rax,%rsi
  403f46:	48 8d 3d 3b f9 ff ff 	lea    -0x6c5(%rip),%rdi        # 403888 <insert>
  403f4d:	e8 e6 01 00 00       	callq  404138 <Fmt_vfmt>
  403f52:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  403f56:	48 89 c6             	mov    %rax,%rsi
  403f59:	bf 00 00 00 00       	mov    $0x0,%edi
  403f5e:	e8 25 f9 ff ff       	callq  403888 <insert>
  403f63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403f67:	89 c2                	mov    %eax,%edx
  403f69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403f6d:	89 d1                	mov    %edx,%ecx
  403f6f:	29 c1                	sub    %eax,%ecx
  403f71:	89 c8                	mov    %ecx,%eax
  403f73:	83 e8 01             	sub    $0x1,%eax
  403f76:	c9                   	leaveq 
  403f77:	c3                   	retq   

0000000000403f78 <Fmt_string>:
  403f78:	55                   	push   %rbp
  403f79:	48 89 e5             	mov    %rsp,%rbp
  403f7c:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  403f83:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
  403f8a:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  403f91:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  403f98:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  403f9f:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  403fa6:	0f b6 c0             	movzbl %al,%eax
  403fa9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  403fb0:	00 
  403fb1:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403fe1 <Fmt_string+0x69>
  403fb8:	48 29 d0             	sub    %rdx,%rax
  403fbb:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  403fbf:	ff e0                	jmpq   *%rax
  403fc1:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)
  403fc5:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)
  403fc9:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)
  403fcd:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)
  403fd1:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)
  403fd5:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)
  403fd9:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)
  403fdd:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)
  403fe1:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  403fe8:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
  403fef:	00 
  403ff0:	75 1b                	jne    40400d <Fmt_string+0x95>
  403ff2:	ba f4 00 00 00       	mov    $0xf4,%edx
  403ff7:	48 8d 35 0c 1e 00 00 	lea    0x1e0c(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  403ffe:	48 8d 05 bb 2d 20 00 	lea    0x202dbb(%rip),%rax        # 606dc0 <Assert_Failed>
  404005:	48 89 c7             	mov    %rax,%rdi
  404008:	e8 83 ee ff ff       	callq  402e90 <Except_raise>
  40400d:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  404014:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  40401a:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  404021:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  404028:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  40402f:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  404033:	48 89 50 08          	mov    %rdx,0x8(%rax)
  404037:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  40403e:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  404045:	48 89 50 10          	mov    %rdx,0x10(%rax)
  404049:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
  404050:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  404057:	48 89 d6             	mov    %rdx,%rsi
  40405a:	48 89 c7             	mov    %rax,%rdi
  40405d:	e8 10 00 00 00       	callq  404072 <Fmt_vstring>
  404062:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  404069:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  404070:	c9                   	leaveq 
  404071:	c3                   	retq   

0000000000404072 <Fmt_vstring>:
  404072:	55                   	push   %rbp
  404073:	48 89 e5             	mov    %rsp,%rbp
  404076:	53                   	push   %rbx
  404077:	48 83 ec 38          	sub    $0x38,%rsp
  40407b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40407f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  404083:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  404088:	75 1b                	jne    4040a5 <Fmt_vstring+0x33>
  40408a:	ba fc 00 00 00       	mov    $0xfc,%edx
  40408f:	48 8d 35 74 1d 00 00 	lea    0x1d74(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  404096:	48 8d 05 23 2d 20 00 	lea    0x202d23(%rip),%rax        # 606dc0 <Assert_Failed>
  40409d:	48 89 c7             	mov    %rax,%rdi
  4040a0:	e8 eb ed ff ff       	callq  402e90 <Except_raise>
  4040a5:	c7 45 e0 00 01 00 00 	movl   $0x100,-0x20(%rbp)
  4040ac:	8b 45 e0             	mov    -0x20(%rbp),%eax
  4040af:	48 98                	cltq   
  4040b1:	ba fe 00 00 00       	mov    $0xfe,%edx
  4040b6:	48 8d 35 4d 1d 00 00 	lea    0x1d4d(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  4040bd:	48 89 c7             	mov    %rax,%rdi
  4040c0:	e8 13 09 00 00       	callq  4049d8 <Mem_alloc>
  4040c5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4040c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4040cd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4040d1:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  4040d5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4040d9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  4040dd:	48 89 c6             	mov    %rax,%rsi
  4040e0:	48 8d 3d 12 f8 ff ff 	lea    -0x7ee(%rip),%rdi        # 4038f9 <append>
  4040e7:	e8 4c 00 00 00       	callq  404138 <Fmt_vfmt>
  4040ec:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  4040f0:	48 89 c6             	mov    %rax,%rsi
  4040f3:	bf 00 00 00 00       	mov    $0x0,%edi
  4040f8:	e8 fc f7 ff ff       	callq  4038f9 <append>
  4040fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404101:	48 89 c2             	mov    %rax,%rdx
  404104:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404108:	48 89 d3             	mov    %rdx,%rbx
  40410b:	48 29 c3             	sub    %rax,%rbx
  40410e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404112:	b9 01 01 00 00       	mov    $0x101,%ecx
  404117:	48 8d 15 ec 1c 00 00 	lea    0x1cec(%rip),%rdx        # 405e0a <_IO_stdin_used+0x2fa>
  40411e:	48 89 de             	mov    %rbx,%rsi
  404121:	48 89 c7             	mov    %rax,%rdi
  404124:	e8 22 0a 00 00       	callq  404b4b <Mem_resize>
  404129:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  40412d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404131:	48 83 c4 38          	add    $0x38,%rsp
  404135:	5b                   	pop    %rbx
  404136:	c9                   	leaveq 
  404137:	c3                   	retq   

0000000000404138 <Fmt_vfmt>:
  404138:	55                   	push   %rbp
  404139:	48 89 e5             	mov    %rsp,%rbp
  40413c:	53                   	push   %rbx
  40413d:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
  404144:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
  40414b:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  404152:	48 89 95 b8 fe ff ff 	mov    %rdx,-0x148(%rbp)
  404159:	48 89 8d b0 fe ff ff 	mov    %rcx,-0x150(%rbp)
  404160:	48 83 bd c8 fe ff ff 	cmpq   $0x0,-0x138(%rbp)
  404167:	00 
  404168:	75 1b                	jne    404185 <Fmt_vfmt+0x4d>
  40416a:	ba 05 01 00 00       	mov    $0x105,%edx
  40416f:	48 8d 35 94 1c 00 00 	lea    0x1c94(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  404176:	48 8d 05 43 2c 20 00 	lea    0x202c43(%rip),%rax        # 606dc0 <Assert_Failed>
  40417d:	48 89 c7             	mov    %rax,%rdi
  404180:	e8 0b ed ff ff       	callq  402e90 <Except_raise>
  404185:	48 83 bd b8 fe ff ff 	cmpq   $0x0,-0x148(%rbp)
  40418c:	00 
  40418d:	0f 85 bf 04 00 00    	jne    404652 <Fmt_vfmt+0x51a>
  404193:	ba 06 01 00 00       	mov    $0x106,%edx
  404198:	48 8d 35 6b 1c 00 00 	lea    0x1c6b(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  40419f:	48 8d 05 1a 2c 20 00 	lea    0x202c1a(%rip),%rax        # 606dc0 <Assert_Failed>
  4041a6:	48 89 c7             	mov    %rax,%rdi
  4041a9:	e8 e2 ec ff ff       	callq  402e90 <Except_raise>
  4041ae:	e9 a0 04 00 00       	jmpq   404653 <Fmt_vfmt+0x51b>
  4041b3:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4041ba:	0f b6 00             	movzbl (%rax),%eax
  4041bd:	3c 25                	cmp    $0x25,%al
  4041bf:	75 16                	jne    4041d7 <Fmt_vfmt+0x9f>
  4041c1:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4041c8:	01 
  4041c9:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4041d0:	0f b6 00             	movzbl (%rax),%eax
  4041d3:	3c 25                	cmp    $0x25,%al
  4041d5:	75 2f                	jne    404206 <Fmt_vfmt+0xce>
  4041d7:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4041de:	0f b6 00             	movzbl (%rax),%eax
  4041e1:	0f b6 c0             	movzbl %al,%eax
  4041e4:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4041eb:	01 
  4041ec:	48 8b 95 c0 fe ff ff 	mov    -0x140(%rbp),%rdx
  4041f3:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
  4041fa:	48 89 d6             	mov    %rdx,%rsi
  4041fd:	89 c7                	mov    %eax,%edi
  4041ff:	ff d1                	callq  *%rcx
  404201:	e9 4d 04 00 00       	jmpq   404653 <Fmt_vfmt+0x51b>
  404206:	c7 45 ec 00 00 00 80 	movl   $0x80000000,-0x14(%rbp)
  40420d:	c7 45 e8 00 00 00 80 	movl   $0x80000000,-0x18(%rbp)
  404214:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
  40421b:	ba 00 01 00 00       	mov    $0x100,%edx
  404220:	be 00 00 00 00       	mov    $0x0,%esi
  404225:	48 89 c7             	mov    %rax,%rdi
  404228:	e8 43 cb ff ff       	callq  400d70 <memset@plt>
  40422d:	48 8d 05 0c 37 20 00 	lea    0x20370c(%rip),%rax        # 607940 <Fmt_flags>
  404234:	48 8b 00             	mov    (%rax),%rax
  404237:	48 85 c0             	test   %rax,%rax
  40423a:	0f 84 8f 00 00 00    	je     4042cf <Fmt_vfmt+0x197>
  404240:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404247:	0f b6 00             	movzbl (%rax),%eax
  40424a:	88 45 e7             	mov    %al,-0x19(%rbp)
  40424d:	eb 5d                	jmp    4042ac <Fmt_vfmt+0x174>
  40424f:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  404253:	48 98                	cltq   
  404255:	0f b6 84 05 d0 fe ff 	movzbl -0x130(%rbp,%rax,1),%eax
  40425c:	ff 
  40425d:	3c ff                	cmp    $0xff,%al
  40425f:	75 1b                	jne    40427c <Fmt_vfmt+0x144>
  404261:	ba 12 01 00 00       	mov    $0x112,%edx
  404266:	48 8d 35 9d 1b 00 00 	lea    0x1b9d(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  40426d:	48 8d 05 4c 2b 20 00 	lea    0x202b4c(%rip),%rax        # 606dc0 <Assert_Failed>
  404274:	48 89 c7             	mov    %rax,%rdi
  404277:	e8 14 ec ff ff       	callq  402e90 <Except_raise>
  40427c:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  404280:	48 63 d0             	movslq %eax,%rdx
  404283:	0f b6 94 15 d0 fe ff 	movzbl -0x130(%rbp,%rdx,1),%edx
  40428a:	ff 
  40428b:	83 c2 01             	add    $0x1,%edx
  40428e:	48 98                	cltq   
  404290:	88 94 05 d0 fe ff ff 	mov    %dl,-0x130(%rbp,%rax,1)
  404297:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  40429e:	01 
  40429f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4042a6:	0f b6 00             	movzbl (%rax),%eax
  4042a9:	88 45 e7             	mov    %al,-0x19(%rbp)
  4042ac:	80 7d e7 00          	cmpb   $0x0,-0x19(%rbp)
  4042b0:	74 1d                	je     4042cf <Fmt_vfmt+0x197>
  4042b2:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
  4042b6:	48 8d 05 83 36 20 00 	lea    0x203683(%rip),%rax        # 607940 <Fmt_flags>
  4042bd:	48 8b 00             	mov    (%rax),%rax
  4042c0:	89 d6                	mov    %edx,%esi
  4042c2:	48 89 c7             	mov    %rax,%rdi
  4042c5:	e8 66 ca ff ff       	callq  400d30 <strchr@plt>
  4042ca:	48 85 c0             	test   %rax,%rax
  4042cd:	75 80                	jne    40424f <Fmt_vfmt+0x117>
  4042cf:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4042d6:	0f b6 00             	movzbl (%rax),%eax
  4042d9:	3c 2a                	cmp    $0x2a,%al
  4042db:	74 30                	je     40430d <Fmt_vfmt+0x1d5>
  4042dd:	e8 ae cb ff ff       	callq  400e90 <__ctype_b_loc@plt>
  4042e2:	48 8b 10             	mov    (%rax),%rdx
  4042e5:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4042ec:	0f b6 00             	movzbl (%rax),%eax
  4042ef:	48 0f be c0          	movsbq %al,%rax
  4042f3:	48 01 c0             	add    %rax,%rax
  4042f6:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  4042fa:	0f b7 00             	movzwl (%rax),%eax
  4042fd:	0f b7 c0             	movzwl %ax,%eax
  404300:	25 00 08 00 00       	and    $0x800,%eax
  404305:	85 c0                	test   %eax,%eax
  404307:	0f 84 26 01 00 00    	je     404433 <Fmt_vfmt+0x2fb>
  40430d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404314:	0f b6 00             	movzbl (%rax),%eax
  404317:	3c 2a                	cmp    $0x2a,%al
  404319:	75 6b                	jne    404386 <Fmt_vfmt+0x24e>
  40431b:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  404322:	8b 10                	mov    (%rax),%edx
  404324:	83 fa 30             	cmp    $0x30,%edx
  404327:	73 15                	jae    40433e <Fmt_vfmt+0x206>
  404329:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40432d:	8b 10                	mov    (%rax),%edx
  40432f:	89 d2                	mov    %edx,%edx
  404331:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  404335:	8b 08                	mov    (%rax),%ecx
  404337:	83 c1 08             	add    $0x8,%ecx
  40433a:	89 08                	mov    %ecx,(%rax)
  40433c:	eb 0f                	jmp    40434d <Fmt_vfmt+0x215>
  40433e:	48 8b 48 08          	mov    0x8(%rax),%rcx
  404342:	48 89 ca             	mov    %rcx,%rdx
  404345:	48 83 c1 08          	add    $0x8,%rcx
  404349:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40434d:	48 89 d0             	mov    %rdx,%rax
  404350:	8b 00                	mov    (%rax),%eax
  404352:	89 45 e0             	mov    %eax,-0x20(%rbp)
  404355:	81 7d e0 00 00 00 80 	cmpl   $0x80000000,-0x20(%rbp)
  40435c:	75 1b                	jne    404379 <Fmt_vfmt+0x241>
  40435e:	ba 1a 01 00 00       	mov    $0x11a,%edx
  404363:	48 8d 35 a0 1a 00 00 	lea    0x1aa0(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  40436a:	48 8d 05 4f 2a 20 00 	lea    0x202a4f(%rip),%rax        # 606dc0 <Assert_Failed>
  404371:	48 89 c7             	mov    %rax,%rdi
  404374:	e8 17 eb ff ff       	callq  402e90 <Except_raise>
  404379:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  404380:	01 
  404381:	e9 a7 00 00 00       	jmpq   40442d <Fmt_vfmt+0x2f5>
  404386:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  40438d:	eb 6e                	jmp    4043fd <Fmt_vfmt+0x2c5>
  40438f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404396:	0f b6 00             	movzbl (%rax),%eax
  404399:	0f be c0             	movsbl %al,%eax
  40439c:	83 e8 30             	sub    $0x30,%eax
  40439f:	89 45 d8             	mov    %eax,-0x28(%rbp)
  4043a2:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
  4043a7:	89 c1                	mov    %eax,%ecx
  4043a9:	2b 4d d8             	sub    -0x28(%rbp),%ecx
  4043ac:	ba 67 66 66 66       	mov    $0x66666667,%edx
  4043b1:	89 c8                	mov    %ecx,%eax
  4043b3:	f7 ea                	imul   %edx
  4043b5:	c1 fa 02             	sar    $0x2,%edx
  4043b8:	89 c8                	mov    %ecx,%eax
  4043ba:	c1 f8 1f             	sar    $0x1f,%eax
  4043bd:	89 d1                	mov    %edx,%ecx
  4043bf:	29 c1                	sub    %eax,%ecx
  4043c1:	89 c8                	mov    %ecx,%eax
  4043c3:	3b 45 e0             	cmp    -0x20(%rbp),%eax
  4043c6:	7d 1b                	jge    4043e3 <Fmt_vfmt+0x2ab>
  4043c8:	ba 1f 01 00 00       	mov    $0x11f,%edx
  4043cd:	48 8d 35 36 1a 00 00 	lea    0x1a36(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  4043d4:	48 8d 05 e5 29 20 00 	lea    0x2029e5(%rip),%rax        # 606dc0 <Assert_Failed>
  4043db:	48 89 c7             	mov    %rax,%rdi
  4043de:	e8 ad ea ff ff       	callq  402e90 <Except_raise>
  4043e3:	8b 55 e0             	mov    -0x20(%rbp),%edx
  4043e6:	89 d0                	mov    %edx,%eax
  4043e8:	c1 e0 02             	shl    $0x2,%eax
  4043eb:	01 d0                	add    %edx,%eax
  4043ed:	01 c0                	add    %eax,%eax
  4043ef:	03 45 d8             	add    -0x28(%rbp),%eax
  4043f2:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4043f5:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4043fc:	01 
  4043fd:	e8 8e ca ff ff       	callq  400e90 <__ctype_b_loc@plt>
  404402:	48 8b 10             	mov    (%rax),%rdx
  404405:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40440c:	0f b6 00             	movzbl (%rax),%eax
  40440f:	48 0f be c0          	movsbq %al,%rax
  404413:	48 01 c0             	add    %rax,%rax
  404416:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  40441a:	0f b7 00             	movzwl (%rax),%eax
  40441d:	0f b7 c0             	movzwl %ax,%eax
  404420:	25 00 08 00 00       	and    $0x800,%eax
  404425:	85 c0                	test   %eax,%eax
  404427:	0f 85 62 ff ff ff    	jne    40438f <Fmt_vfmt+0x257>
  40442d:	8b 45 e0             	mov    -0x20(%rbp),%eax
  404430:	89 45 ec             	mov    %eax,-0x14(%rbp)
  404433:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40443a:	0f b6 00             	movzbl (%rax),%eax
  40443d:	3c 2e                	cmp    $0x2e,%al
  40443f:	0f 85 6c 01 00 00    	jne    4045b1 <Fmt_vfmt+0x479>
  404445:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  40444c:	01 
  40444d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404454:	0f b6 00             	movzbl (%rax),%eax
  404457:	3c 2a                	cmp    $0x2a,%al
  404459:	74 30                	je     40448b <Fmt_vfmt+0x353>
  40445b:	e8 30 ca ff ff       	callq  400e90 <__ctype_b_loc@plt>
  404460:	48 8b 10             	mov    (%rax),%rdx
  404463:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40446a:	0f b6 00             	movzbl (%rax),%eax
  40446d:	48 0f be c0          	movsbq %al,%rax
  404471:	48 01 c0             	add    %rax,%rax
  404474:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  404478:	0f b7 00             	movzwl (%rax),%eax
  40447b:	0f b7 c0             	movzwl %ax,%eax
  40447e:	25 00 08 00 00       	and    $0x800,%eax
  404483:	85 c0                	test   %eax,%eax
  404485:	0f 84 26 01 00 00    	je     4045b1 <Fmt_vfmt+0x479>
  40448b:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404492:	0f b6 00             	movzbl (%rax),%eax
  404495:	3c 2a                	cmp    $0x2a,%al
  404497:	75 6b                	jne    404504 <Fmt_vfmt+0x3cc>
  404499:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  4044a0:	8b 10                	mov    (%rax),%edx
  4044a2:	83 fa 30             	cmp    $0x30,%edx
  4044a5:	73 15                	jae    4044bc <Fmt_vfmt+0x384>
  4044a7:	48 8b 48 10          	mov    0x10(%rax),%rcx
  4044ab:	8b 10                	mov    (%rax),%edx
  4044ad:	89 d2                	mov    %edx,%edx
  4044af:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  4044b3:	8b 08                	mov    (%rax),%ecx
  4044b5:	83 c1 08             	add    $0x8,%ecx
  4044b8:	89 08                	mov    %ecx,(%rax)
  4044ba:	eb 0f                	jmp    4044cb <Fmt_vfmt+0x393>
  4044bc:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4044c0:	48 89 ca             	mov    %rcx,%rdx
  4044c3:	48 83 c1 08          	add    $0x8,%rcx
  4044c7:	48 89 48 08          	mov    %rcx,0x8(%rax)
  4044cb:	48 89 d0             	mov    %rdx,%rax
  4044ce:	8b 00                	mov    (%rax),%eax
  4044d0:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4044d3:	81 7d dc 00 00 00 80 	cmpl   $0x80000000,-0x24(%rbp)
  4044da:	75 1b                	jne    4044f7 <Fmt_vfmt+0x3bf>
  4044dc:	ba 28 01 00 00       	mov    $0x128,%edx
  4044e1:	48 8d 35 22 19 00 00 	lea    0x1922(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  4044e8:	48 8d 05 d1 28 20 00 	lea    0x2028d1(%rip),%rax        # 606dc0 <Assert_Failed>
  4044ef:	48 89 c7             	mov    %rax,%rdi
  4044f2:	e8 99 e9 ff ff       	callq  402e90 <Except_raise>
  4044f7:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4044fe:	01 
  4044ff:	e9 a7 00 00 00       	jmpq   4045ab <Fmt_vfmt+0x473>
  404504:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  40450b:	eb 6e                	jmp    40457b <Fmt_vfmt+0x443>
  40450d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404514:	0f b6 00             	movzbl (%rax),%eax
  404517:	0f be c0             	movsbl %al,%eax
  40451a:	83 e8 30             	sub    $0x30,%eax
  40451d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  404520:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
  404525:	89 c1                	mov    %eax,%ecx
  404527:	2b 4d d4             	sub    -0x2c(%rbp),%ecx
  40452a:	ba 67 66 66 66       	mov    $0x66666667,%edx
  40452f:	89 c8                	mov    %ecx,%eax
  404531:	f7 ea                	imul   %edx
  404533:	c1 fa 02             	sar    $0x2,%edx
  404536:	89 c8                	mov    %ecx,%eax
  404538:	c1 f8 1f             	sar    $0x1f,%eax
  40453b:	89 d1                	mov    %edx,%ecx
  40453d:	29 c1                	sub    %eax,%ecx
  40453f:	89 c8                	mov    %ecx,%eax
  404541:	3b 45 dc             	cmp    -0x24(%rbp),%eax
  404544:	7d 1b                	jge    404561 <Fmt_vfmt+0x429>
  404546:	ba 2d 01 00 00       	mov    $0x12d,%edx
  40454b:	48 8d 35 b8 18 00 00 	lea    0x18b8(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  404552:	48 8d 05 67 28 20 00 	lea    0x202867(%rip),%rax        # 606dc0 <Assert_Failed>
  404559:	48 89 c7             	mov    %rax,%rdi
  40455c:	e8 2f e9 ff ff       	callq  402e90 <Except_raise>
  404561:	8b 55 dc             	mov    -0x24(%rbp),%edx
  404564:	89 d0                	mov    %edx,%eax
  404566:	c1 e0 02             	shl    $0x2,%eax
  404569:	01 d0                	add    %edx,%eax
  40456b:	01 c0                	add    %eax,%eax
  40456d:	03 45 d4             	add    -0x2c(%rbp),%eax
  404570:	89 45 dc             	mov    %eax,-0x24(%rbp)
  404573:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  40457a:	01 
  40457b:	e8 10 c9 ff ff       	callq  400e90 <__ctype_b_loc@plt>
  404580:	48 8b 10             	mov    (%rax),%rdx
  404583:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40458a:	0f b6 00             	movzbl (%rax),%eax
  40458d:	48 0f be c0          	movsbq %al,%rax
  404591:	48 01 c0             	add    %rax,%rax
  404594:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  404598:	0f b7 00             	movzwl (%rax),%eax
  40459b:	0f b7 c0             	movzwl %ax,%eax
  40459e:	25 00 08 00 00       	and    $0x800,%eax
  4045a3:	85 c0                	test   %eax,%eax
  4045a5:	0f 85 62 ff ff ff    	jne    40450d <Fmt_vfmt+0x3d5>
  4045ab:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4045ae:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4045b1:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4045b8:	0f b6 00             	movzbl (%rax),%eax
  4045bb:	88 45 d3             	mov    %al,-0x2d(%rbp)
  4045be:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4045c5:	01 
  4045c6:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  4045ca:	48 98                	cltq   
  4045cc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4045d3:	00 
  4045d4:	48 8d 05 65 2b 20 00 	lea    0x202b65(%rip),%rax        # 607140 <cvt>
  4045db:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  4045df:	48 85 c0             	test   %rax,%rax
  4045e2:	75 1b                	jne    4045ff <Fmt_vfmt+0x4c7>
  4045e4:	ba 33 01 00 00       	mov    $0x133,%edx
  4045e9:	48 8d 35 1a 18 00 00 	lea    0x181a(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  4045f0:	48 8d 05 c9 27 20 00 	lea    0x2027c9(%rip),%rax        # 606dc0 <Assert_Failed>
  4045f7:	48 89 c7             	mov    %rax,%rdi
  4045fa:	e8 91 e8 ff ff       	callq  402e90 <Except_raise>
  4045ff:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  404603:	48 98                	cltq   
  404605:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  40460c:	00 
  40460d:	48 8d 05 2c 2b 20 00 	lea    0x202b2c(%rip),%rax        # 607140 <cvt>
  404614:	4c 8b 14 02          	mov    (%rdx,%rax,1),%r10
  404618:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  40461c:	44 8b 45 ec          	mov    -0x14(%rbp),%r8d
  404620:	48 8d bd d0 fe ff ff 	lea    -0x130(%rbp),%rdi
  404627:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  40462e:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  404635:	48 8b 9d b0 fe ff ff 	mov    -0x150(%rbp),%rbx
  40463c:	8b 75 e8             	mov    -0x18(%rbp),%esi
  40463f:	89 34 24             	mov    %esi,(%rsp)
  404642:	45 89 c1             	mov    %r8d,%r9d
  404645:	49 89 f8             	mov    %rdi,%r8
  404648:	48 89 de             	mov    %rbx,%rsi
  40464b:	89 c7                	mov    %eax,%edi
  40464d:	41 ff d2             	callq  *%r10
  404650:	eb 01                	jmp    404653 <Fmt_vfmt+0x51b>
  404652:	90                   	nop
  404653:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40465a:	0f b6 00             	movzbl (%rax),%eax
  40465d:	84 c0                	test   %al,%al
  40465f:	0f 85 4e fb ff ff    	jne    4041b3 <Fmt_vfmt+0x7b>
  404665:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
  40466c:	5b                   	pop    %rbx
  40466d:	c9                   	leaveq 
  40466e:	c3                   	retq   

000000000040466f <Fmt_register>:
  40466f:	55                   	push   %rbp
  404670:	48 89 e5             	mov    %rsp,%rbp
  404673:	48 83 ec 20          	sub    $0x20,%rsp
  404677:	89 7d ec             	mov    %edi,-0x14(%rbp)
  40467a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40467e:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  404682:	7e 09                	jle    40468d <Fmt_register+0x1e>
  404684:	81 7d ec ff 00 00 00 	cmpl   $0xff,-0x14(%rbp)
  40468b:	7e 1d                	jle    4046aa <Fmt_register+0x3b>
  40468d:	ba 3a 01 00 00       	mov    $0x13a,%edx
  404692:	48 8d 35 71 17 00 00 	lea    0x1771(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  404699:	48 8d 05 20 27 20 00 	lea    0x202720(%rip),%rax        # 606dc0 <Assert_Failed>
  4046a0:	48 89 c7             	mov    %rax,%rdi
  4046a3:	e8 e8 e7 ff ff       	callq  402e90 <Except_raise>
  4046a8:	eb 01                	jmp    4046ab <Fmt_register+0x3c>
  4046aa:	90                   	nop
  4046ab:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4046ae:	48 98                	cltq   
  4046b0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4046b7:	00 
  4046b8:	48 8d 05 81 2a 20 00 	lea    0x202a81(%rip),%rax        # 607140 <cvt>
  4046bf:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  4046c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4046c7:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4046ca:	48 98                	cltq   
  4046cc:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
  4046d3:	00 
  4046d4:	48 8d 05 65 2a 20 00 	lea    0x202a65(%rip),%rax        # 607140 <cvt>
  4046db:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4046df:	48 89 14 01          	mov    %rdx,(%rcx,%rax,1)
  4046e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4046e7:	c9                   	leaveq 
  4046e8:	c3                   	retq   

00000000004046e9 <Fmt_putd>:
  4046e9:	55                   	push   %rbp
  4046ea:	48 89 e5             	mov    %rsp,%rbp
  4046ed:	48 83 ec 50          	sub    $0x50,%rsp
  4046f1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4046f5:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4046f8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4046fc:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  404700:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  404704:	44 89 4d b4          	mov    %r9d,-0x4c(%rbp)
  404708:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40470d:	75 1b                	jne    40472a <Fmt_putd+0x41>
  40470f:	ba 43 01 00 00       	mov    $0x143,%edx
  404714:	48 8d 35 ef 16 00 00 	lea    0x16ef(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  40471b:	48 8d 05 9e 26 20 00 	lea    0x20269e(%rip),%rax        # 606dc0 <Assert_Failed>
  404722:	48 89 c7             	mov    %rax,%rdi
  404725:	e8 66 e7 ff ff       	callq  402e90 <Except_raise>
  40472a:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  40472e:	79 1b                	jns    40474b <Fmt_putd+0x62>
  404730:	ba 44 01 00 00       	mov    $0x144,%edx
  404735:	48 8d 35 ce 16 00 00 	lea    0x16ce(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  40473c:	48 8d 05 7d 26 20 00 	lea    0x20267d(%rip),%rax        # 606dc0 <Assert_Failed>
  404743:	48 89 c7             	mov    %rax,%rdi
  404746:	e8 45 e7 ff ff       	callq  402e90 <Except_raise>
  40474b:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  404750:	75 1b                	jne    40476d <Fmt_putd+0x84>
  404752:	ba 45 01 00 00       	mov    $0x145,%edx
  404757:	48 8d 35 ac 16 00 00 	lea    0x16ac(%rip),%rsi        # 405e0a <_IO_stdin_used+0x2fa>
  40475e:	48 8d 05 5b 26 20 00 	lea    0x20265b(%rip),%rax        # 606dc0 <Assert_Failed>
  404765:	48 89 c7             	mov    %rax,%rdi
  404768:	e8 23 e7 ff ff       	callq  402e90 <Except_raise>
  40476d:	81 7d b4 00 00 00 80 	cmpl   $0x80000000,-0x4c(%rbp)
  404774:	75 07                	jne    40477d <Fmt_putd+0x94>
  404776:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  40477d:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
  404781:	79 0e                	jns    404791 <Fmt_putd+0xa8>
  404783:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  404787:	48 83 c0 2d          	add    $0x2d,%rax
  40478b:	c6 00 01             	movb   $0x1,(%rax)
  40478e:	f7 5d b4             	negl   -0x4c(%rbp)
  404791:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  404795:	78 0b                	js     4047a2 <Fmt_putd+0xb9>
  404797:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40479b:	48 83 c0 30          	add    $0x30,%rax
  40479f:	c6 00 00             	movb   $0x0,(%rax)
  4047a2:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  4047a6:	7e 2e                	jle    4047d6 <Fmt_putd+0xed>
  4047a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4047ac:	0f b6 00             	movzbl (%rax),%eax
  4047af:	3c 2d                	cmp    $0x2d,%al
  4047b1:	74 0b                	je     4047be <Fmt_putd+0xd5>
  4047b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4047b7:	0f b6 00             	movzbl (%rax),%eax
  4047ba:	3c 2b                	cmp    $0x2b,%al
  4047bc:	75 18                	jne    4047d6 <Fmt_putd+0xed>
  4047be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4047c2:	0f b6 00             	movzbl (%rax),%eax
  4047c5:	0f be c0             	movsbl %al,%eax
  4047c8:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4047cb:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
  4047d0:	83 6d d4 01          	subl   $0x1,-0x2c(%rbp)
  4047d4:	eb 37                	jmp    40480d <Fmt_putd+0x124>
  4047d6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4047da:	48 83 c0 2b          	add    $0x2b,%rax
  4047de:	0f b6 00             	movzbl (%rax),%eax
  4047e1:	84 c0                	test   %al,%al
  4047e3:	74 09                	je     4047ee <Fmt_putd+0x105>
  4047e5:	c7 45 fc 2b 00 00 00 	movl   $0x2b,-0x4(%rbp)
  4047ec:	eb 1f                	jmp    40480d <Fmt_putd+0x124>
  4047ee:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4047f2:	48 83 c0 20          	add    $0x20,%rax
  4047f6:	0f b6 00             	movzbl (%rax),%eax
  4047f9:	84 c0                	test   %al,%al
  4047fb:	74 09                	je     404806 <Fmt_putd+0x11d>
  4047fd:	c7 45 fc 20 00 00 00 	movl   $0x20,-0x4(%rbp)
  404804:	eb 07                	jmp    40480d <Fmt_putd+0x124>
  404806:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40480d:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  404811:	79 07                	jns    40481a <Fmt_putd+0x131>
  404813:	c7 45 10 01 00 00 00 	movl   $0x1,0x10(%rbp)
  40481a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40481d:	3b 45 10             	cmp    0x10(%rbp),%eax
  404820:	7d 08                	jge    40482a <Fmt_putd+0x141>
  404822:	8b 45 10             	mov    0x10(%rbp),%eax
  404825:	89 45 f8             	mov    %eax,-0x8(%rbp)
  404828:	eb 26                	jmp    404850 <Fmt_putd+0x167>
  40482a:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  40482e:	75 1a                	jne    40484a <Fmt_putd+0x161>
  404830:	83 7d d4 01          	cmpl   $0x1,-0x2c(%rbp)
  404834:	75 14                	jne    40484a <Fmt_putd+0x161>
  404836:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40483a:	0f b6 00             	movzbl (%rax),%eax
  40483d:	3c 30                	cmp    $0x30,%al
  40483f:	75 09                	jne    40484a <Fmt_putd+0x161>
  404841:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  404848:	eb 06                	jmp    404850 <Fmt_putd+0x167>
  40484a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40484d:	89 45 f8             	mov    %eax,-0x8(%rbp)
  404850:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  404854:	74 04                	je     40485a <Fmt_putd+0x171>
  404856:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  40485a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40485e:	48 83 c0 2d          	add    $0x2d,%rax
  404862:	0f b6 00             	movzbl (%rax),%eax
  404865:	84 c0                	test   %al,%al
  404867:	74 21                	je     40488a <Fmt_putd+0x1a1>
  404869:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40486d:	0f 84 bc 00 00 00    	je     40492f <Fmt_putd+0x246>
  404873:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  404877:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40487a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40487e:	48 89 d6             	mov    %rdx,%rsi
  404881:	89 c7                	mov    %eax,%edi
  404883:	ff d1                	callq  *%rcx
  404885:	e9 a5 00 00 00       	jmpq   40492f <Fmt_putd+0x246>
  40488a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40488e:	48 83 c0 30          	add    $0x30,%rax
  404892:	0f b6 00             	movzbl (%rax),%eax
  404895:	84 c0                	test   %al,%al
  404897:	74 4c                	je     4048e5 <Fmt_putd+0x1fc>
  404899:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40489d:	74 12                	je     4048b1 <Fmt_putd+0x1c8>
  40489f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4048a3:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4048a6:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4048aa:	48 89 d6             	mov    %rdx,%rsi
  4048ad:	89 c7                	mov    %eax,%edi
  4048af:	ff d1                	callq  *%rcx
  4048b1:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4048b4:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  4048b7:	89 d1                	mov    %edx,%ecx
  4048b9:	29 c1                	sub    %eax,%ecx
  4048bb:	89 c8                	mov    %ecx,%eax
  4048bd:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4048c0:	eb 12                	jmp    4048d4 <Fmt_putd+0x1eb>
  4048c2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4048c6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4048ca:	48 89 c6             	mov    %rax,%rsi
  4048cd:	bf 30 00 00 00       	mov    $0x30,%edi
  4048d2:	ff d2                	callq  *%rdx
  4048d4:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  4048d8:	0f 9f c0             	setg   %al
  4048db:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
  4048df:	84 c0                	test   %al,%al
  4048e1:	75 df                	jne    4048c2 <Fmt_putd+0x1d9>
  4048e3:	eb 4a                	jmp    40492f <Fmt_putd+0x246>
  4048e5:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4048e8:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  4048eb:	89 d1                	mov    %edx,%ecx
  4048ed:	29 c1                	sub    %eax,%ecx
  4048ef:	89 c8                	mov    %ecx,%eax
  4048f1:	89 45 f0             	mov    %eax,-0x10(%rbp)
  4048f4:	eb 12                	jmp    404908 <Fmt_putd+0x21f>
  4048f6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4048fa:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4048fe:	48 89 c6             	mov    %rax,%rsi
  404901:	bf 20 00 00 00       	mov    $0x20,%edi
  404906:	ff d2                	callq  *%rdx
  404908:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
  40490c:	0f 9f c0             	setg   %al
  40490f:	83 6d f0 01          	subl   $0x1,-0x10(%rbp)
  404913:	84 c0                	test   %al,%al
  404915:	75 df                	jne    4048f6 <Fmt_putd+0x20d>
  404917:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40491b:	74 12                	je     40492f <Fmt_putd+0x246>
  40491d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  404921:	8b 45 fc             	mov    -0x4(%rbp),%eax
  404924:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  404928:	48 89 d6             	mov    %rdx,%rsi
  40492b:	89 c7                	mov    %eax,%edi
  40492d:	ff d1                	callq  *%rcx
  40492f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  404932:	8b 55 10             	mov    0x10(%rbp),%edx
  404935:	89 d1                	mov    %edx,%ecx
  404937:	29 c1                	sub    %eax,%ecx
  404939:	89 c8                	mov    %ecx,%eax
  40493b:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40493e:	eb 12                	jmp    404952 <Fmt_putd+0x269>
  404940:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  404944:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  404948:	48 89 c6             	mov    %rax,%rsi
  40494b:	bf 30 00 00 00       	mov    $0x30,%edi
  404950:	ff d2                	callq  *%rdx
  404952:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  404956:	0f 9f c0             	setg   %al
  404959:	83 6d ec 01          	subl   $0x1,-0x14(%rbp)
  40495d:	84 c0                	test   %al,%al
  40495f:	75 df                	jne    404940 <Fmt_putd+0x257>
  404961:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  404968:	eb 22                	jmp    40498c <Fmt_putd+0x2a3>
  40496a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40496e:	0f b6 00             	movzbl (%rax),%eax
  404971:	0f b6 c0             	movzbl %al,%eax
  404974:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
  404979:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40497d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  404981:	48 89 d6             	mov    %rdx,%rsi
  404984:	89 c7                	mov    %eax,%edi
  404986:	ff d1                	callq  *%rcx
  404988:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
  40498c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40498f:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
  404992:	7c d6                	jl     40496a <Fmt_putd+0x281>
  404994:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  404998:	48 83 c0 2d          	add    $0x2d,%rax
  40499c:	0f b6 00             	movzbl (%rax),%eax
  40499f:	84 c0                	test   %al,%al
  4049a1:	74 32                	je     4049d5 <Fmt_putd+0x2ec>
  4049a3:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4049a6:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  4049a9:	89 d1                	mov    %edx,%ecx
  4049ab:	29 c1                	sub    %eax,%ecx
  4049ad:	89 c8                	mov    %ecx,%eax
  4049af:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4049b2:	eb 12                	jmp    4049c6 <Fmt_putd+0x2dd>
  4049b4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4049b8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4049bc:	48 89 c6             	mov    %rax,%rsi
  4049bf:	bf 20 00 00 00       	mov    $0x20,%edi
  4049c4:	ff d2                	callq  *%rdx
  4049c6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4049ca:	0f 9f c0             	setg   %al
  4049cd:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
  4049d1:	84 c0                	test   %al,%al
  4049d3:	75 df                	jne    4049b4 <Fmt_putd+0x2cb>
  4049d5:	c9                   	leaveq 
  4049d6:	c3                   	retq   
  4049d7:	90                   	nop

00000000004049d8 <Mem_alloc>:
  4049d8:	55                   	push   %rbp
  4049d9:	48 89 e5             	mov    %rsp,%rbp
  4049dc:	48 83 ec 30          	sub    $0x30,%rsp
  4049e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4049e4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4049e8:	89 55 dc             	mov    %edx,-0x24(%rbp)
  4049eb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4049f0:	7f 1b                	jg     404a0d <Mem_alloc+0x35>
  4049f2:	ba 0a 00 00 00       	mov    $0xa,%edx
  4049f7:	48 8d 35 52 14 00 00 	lea    0x1452(%rip),%rsi        # 405e50 <_IO_stdin_used+0x340>
  4049fe:	48 8d 05 bb 23 20 00 	lea    0x2023bb(%rip),%rax        # 606dc0 <Assert_Failed>
  404a05:	48 89 c7             	mov    %rax,%rdi
  404a08:	e8 83 e4 ff ff       	callq  402e90 <Except_raise>
  404a0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404a11:	48 89 c7             	mov    %rax,%rdi
  404a14:	e8 d7 c3 ff ff       	callq  400df0 <malloc@plt>
  404a19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  404a1d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404a22:	75 3d                	jne    404a61 <Mem_alloc+0x89>
  404a24:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  404a29:	75 1d                	jne    404a48 <Mem_alloc+0x70>
  404a2b:	ba 0f 00 00 00       	mov    $0xf,%edx
  404a30:	48 8d 35 19 14 00 00 	lea    0x1419(%rip),%rsi        # 405e50 <_IO_stdin_used+0x340>
  404a37:	48 8d 05 92 23 20 00 	lea    0x202392(%rip),%rax        # 606dd0 <Mem_Failed>
  404a3e:	48 89 c7             	mov    %rax,%rdi
  404a41:	e8 4a e4 ff ff       	callq  402e90 <Except_raise>
  404a46:	eb 19                	jmp    404a61 <Mem_alloc+0x89>
  404a48:	8b 55 dc             	mov    -0x24(%rbp),%edx
  404a4b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404a4f:	48 89 c6             	mov    %rax,%rsi
  404a52:	48 8d 05 77 23 20 00 	lea    0x202377(%rip),%rax        # 606dd0 <Mem_Failed>
  404a59:	48 89 c7             	mov    %rax,%rdi
  404a5c:	e8 2f e4 ff ff       	callq  402e90 <Except_raise>
  404a61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a65:	c9                   	leaveq 
  404a66:	c3                   	retq   

0000000000404a67 <Mem_calloc>:
  404a67:	55                   	push   %rbp
  404a68:	48 89 e5             	mov    %rsp,%rbp
  404a6b:	48 83 ec 30          	sub    $0x30,%rsp
  404a6f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  404a73:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  404a77:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  404a7b:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  404a7e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  404a83:	7f 1b                	jg     404aa0 <Mem_calloc+0x39>
  404a85:	ba 18 00 00 00       	mov    $0x18,%edx
  404a8a:	48 8d 35 bf 13 00 00 	lea    0x13bf(%rip),%rsi        # 405e50 <_IO_stdin_used+0x340>
  404a91:	48 8d 05 28 23 20 00 	lea    0x202328(%rip),%rax        # 606dc0 <Assert_Failed>
  404a98:	48 89 c7             	mov    %rax,%rdi
  404a9b:	e8 f0 e3 ff ff       	callq  402e90 <Except_raise>
  404aa0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  404aa5:	7f 1b                	jg     404ac2 <Mem_calloc+0x5b>
  404aa7:	ba 19 00 00 00       	mov    $0x19,%edx
  404aac:	48 8d 35 9d 13 00 00 	lea    0x139d(%rip),%rsi        # 405e50 <_IO_stdin_used+0x340>
  404ab3:	48 8d 05 06 23 20 00 	lea    0x202306(%rip),%rax        # 606dc0 <Assert_Failed>
  404aba:	48 89 c7             	mov    %rax,%rdi
  404abd:	e8 ce e3 ff ff       	callq  402e90 <Except_raise>
  404ac2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  404ac6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404aca:	48 89 d6             	mov    %rdx,%rsi
  404acd:	48 89 c7             	mov    %rax,%rdi
  404ad0:	e8 cb c2 ff ff       	callq  400da0 <calloc@plt>
  404ad5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  404ad9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404ade:	75 3d                	jne    404b1d <Mem_calloc+0xb6>
  404ae0:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  404ae5:	75 1d                	jne    404b04 <Mem_calloc+0x9d>
  404ae7:	ba 1e 00 00 00       	mov    $0x1e,%edx
  404aec:	48 8d 35 5d 13 00 00 	lea    0x135d(%rip),%rsi        # 405e50 <_IO_stdin_used+0x340>
  404af3:	48 8d 05 d6 22 20 00 	lea    0x2022d6(%rip),%rax        # 606dd0 <Mem_Failed>
  404afa:	48 89 c7             	mov    %rax,%rdi
  404afd:	e8 8e e3 ff ff       	callq  402e90 <Except_raise>
  404b02:	eb 19                	jmp    404b1d <Mem_calloc+0xb6>
  404b04:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  404b07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404b0b:	48 89 c6             	mov    %rax,%rsi
  404b0e:	48 8d 05 bb 22 20 00 	lea    0x2022bb(%rip),%rax        # 606dd0 <Mem_Failed>
  404b15:	48 89 c7             	mov    %rax,%rdi
  404b18:	e8 73 e3 ff ff       	callq  402e90 <Except_raise>
  404b1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404b21:	c9                   	leaveq 
  404b22:	c3                   	retq   

0000000000404b23 <Mem_free>:
  404b23:	55                   	push   %rbp
  404b24:	48 89 e5             	mov    %rsp,%rbp
  404b27:	48 83 ec 20          	sub    $0x20,%rsp
  404b2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  404b2f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  404b33:	89 55 ec             	mov    %edx,-0x14(%rbp)
  404b36:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404b3b:	74 0c                	je     404b49 <Mem_free+0x26>
  404b3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404b41:	48 89 c7             	mov    %rax,%rdi
  404b44:	e8 97 c1 ff ff       	callq  400ce0 <free@plt>
  404b49:	c9                   	leaveq 
  404b4a:	c3                   	retq   

0000000000404b4b <Mem_resize>:
  404b4b:	55                   	push   %rbp
  404b4c:	48 89 e5             	mov    %rsp,%rbp
  404b4f:	48 83 ec 20          	sub    $0x20,%rsp
  404b53:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  404b57:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  404b5b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  404b5f:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  404b62:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404b67:	75 1b                	jne    404b84 <Mem_resize+0x39>
  404b69:	ba 2a 00 00 00       	mov    $0x2a,%edx
  404b6e:	48 8d 35 db 12 00 00 	lea    0x12db(%rip),%rsi        # 405e50 <_IO_stdin_used+0x340>
  404b75:	48 8d 05 44 22 20 00 	lea    0x202244(%rip),%rax        # 606dc0 <Assert_Failed>
  404b7c:	48 89 c7             	mov    %rax,%rdi
  404b7f:	e8 0c e3 ff ff       	callq  402e90 <Except_raise>
  404b84:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  404b89:	7f 1b                	jg     404ba6 <Mem_resize+0x5b>
  404b8b:	ba 2b 00 00 00       	mov    $0x2b,%edx
  404b90:	48 8d 35 b9 12 00 00 	lea    0x12b9(%rip),%rsi        # 405e50 <_IO_stdin_used+0x340>
  404b97:	48 8d 05 22 22 20 00 	lea    0x202222(%rip),%rax        # 606dc0 <Assert_Failed>
  404b9e:	48 89 c7             	mov    %rax,%rdi
  404ba1:	e8 ea e2 ff ff       	callq  402e90 <Except_raise>
  404ba6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  404baa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404bae:	48 89 d6             	mov    %rdx,%rsi
  404bb1:	48 89 c7             	mov    %rax,%rdi
  404bb4:	e8 77 c2 ff ff       	callq  400e30 <realloc@plt>
  404bb9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  404bbd:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404bc2:	75 3d                	jne    404c01 <Mem_resize+0xb6>
  404bc4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  404bc9:	75 1d                	jne    404be8 <Mem_resize+0x9d>
  404bcb:	ba 30 00 00 00       	mov    $0x30,%edx
  404bd0:	48 8d 35 79 12 00 00 	lea    0x1279(%rip),%rsi        # 405e50 <_IO_stdin_used+0x340>
  404bd7:	48 8d 05 f2 21 20 00 	lea    0x2021f2(%rip),%rax        # 606dd0 <Mem_Failed>
  404bde:	48 89 c7             	mov    %rax,%rdi
  404be1:	e8 aa e2 ff ff       	callq  402e90 <Except_raise>
  404be6:	eb 19                	jmp    404c01 <Mem_resize+0xb6>
  404be8:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  404beb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404bef:	48 89 c6             	mov    %rax,%rsi
  404bf2:	48 8d 05 d7 21 20 00 	lea    0x2021d7(%rip),%rax        # 606dd0 <Mem_Failed>
  404bf9:	48 89 c7             	mov    %rax,%rdi
  404bfc:	e8 8f e2 ff ff       	callq  402e90 <Except_raise>
  404c01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404c05:	c9                   	leaveq 
  404c06:	c3                   	retq   
  404c07:	90                   	nop

0000000000404c08 <expand>:
  404c08:	55                   	push   %rbp
  404c09:	48 89 e5             	mov    %rsp,%rbp
  404c0c:	48 83 ec 20          	sub    $0x20,%rsp
  404c10:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  404c14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404c18:	8b 00                	mov    (%rax),%eax
  404c1a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  404c1d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  404c20:	8d 14 00             	lea    (%rax,%rax,1),%edx
  404c23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404c27:	89 d6                	mov    %edx,%esi
  404c29:	48 89 c7             	mov    %rax,%rdi
  404c2c:	e8 5b 0c 00 00       	callq  40588c <UArray_resize>
  404c31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404c35:	8b 40 14             	mov    0x14(%rax),%eax
  404c38:	85 c0                	test   %eax,%eax
  404c3a:	7e 69                	jle    404ca5 <expand+0x9d>
  404c3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404c40:	48 8b 40 08          	mov    0x8(%rax),%rax
  404c44:	48 89 c2             	mov    %rax,%rdx
  404c47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404c4b:	8b 40 14             	mov    0x14(%rax),%eax
  404c4e:	48 98                	cltq   
  404c50:	48 c1 e0 03          	shl    $0x3,%rax
  404c54:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  404c58:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  404c5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404c60:	8b 40 14             	mov    0x14(%rax),%eax
  404c63:	8b 55 fc             	mov    -0x4(%rbp),%edx
  404c66:	89 d1                	mov    %edx,%ecx
  404c68:	29 c1                	sub    %eax,%ecx
  404c6a:	89 c8                	mov    %ecx,%eax
  404c6c:	48 98                	cltq   
  404c6e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  404c75:	00 
  404c76:	8b 45 fc             	mov    -0x4(%rbp),%eax
  404c79:	48 98                	cltq   
  404c7b:	48 c1 e0 03          	shl    $0x3,%rax
  404c7f:	48 03 45 f0          	add    -0x10(%rbp),%rax
  404c83:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  404c87:	48 89 ce             	mov    %rcx,%rsi
  404c8a:	48 89 c7             	mov    %rax,%rdi
  404c8d:	e8 4e c1 ff ff       	callq  400de0 <memcpy@plt>
  404c92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404c96:	8b 40 14             	mov    0x14(%rax),%eax
  404c99:	89 c2                	mov    %eax,%edx
  404c9b:	03 55 fc             	add    -0x4(%rbp),%edx
  404c9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404ca2:	89 50 14             	mov    %edx,0x14(%rax)
  404ca5:	c9                   	leaveq 
  404ca6:	c3                   	retq   

0000000000404ca7 <Seq_new>:
  404ca7:	55                   	push   %rbp
  404ca8:	48 89 e5             	mov    %rsp,%rbp
  404cab:	53                   	push   %rbx
  404cac:	48 83 ec 28          	sub    $0x28,%rsp
  404cb0:	89 7d dc             	mov    %edi,-0x24(%rbp)
  404cb3:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  404cb7:	79 1b                	jns    404cd4 <Seq_new+0x2d>
  404cb9:	ba 1c 00 00 00       	mov    $0x1c,%edx
  404cbe:	48 8d 35 95 11 00 00 	lea    0x1195(%rip),%rsi        # 405e5a <_IO_stdin_used+0x34a>
  404cc5:	48 8d 05 f4 20 20 00 	lea    0x2020f4(%rip),%rax        # 606dc0 <Assert_Failed>
  404ccc:	48 89 c7             	mov    %rax,%rdi
  404ccf:	e8 bc e1 ff ff       	callq  402e90 <Except_raise>
  404cd4:	b9 1d 00 00 00       	mov    $0x1d,%ecx
  404cd9:	48 8d 15 7a 11 00 00 	lea    0x117a(%rip),%rdx        # 405e5a <_IO_stdin_used+0x34a>
  404ce0:	be 18 00 00 00       	mov    $0x18,%esi
  404ce5:	bf 01 00 00 00       	mov    $0x1,%edi
  404cea:	e8 78 fd ff ff       	callq  404a67 <Mem_calloc>
  404cef:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  404cf3:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  404cf7:	75 07                	jne    404d00 <Seq_new+0x59>
  404cf9:	c7 45 dc 10 00 00 00 	movl   $0x10,-0x24(%rbp)
  404d00:	8b 45 dc             	mov    -0x24(%rbp),%eax
  404d03:	48 98                	cltq   
  404d05:	48 c1 e0 03          	shl    $0x3,%rax
  404d09:	ba 21 00 00 00       	mov    $0x21,%edx
  404d0e:	48 8d 35 45 11 00 00 	lea    0x1145(%rip),%rsi        # 405e5a <_IO_stdin_used+0x34a>
  404d15:	48 89 c7             	mov    %rax,%rdi
  404d18:	e8 bb fc ff ff       	callq  4049d8 <Mem_alloc>
  404d1d:	48 89 c2             	mov    %rax,%rdx
  404d20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404d24:	8b 5d dc             	mov    -0x24(%rbp),%ebx
  404d27:	48 89 d1             	mov    %rdx,%rcx
  404d2a:	ba 08 00 00 00       	mov    $0x8,%edx
  404d2f:	89 de                	mov    %ebx,%esi
  404d31:	48 89 c7             	mov    %rax,%rdi
  404d34:	e8 15 09 00 00       	callq  40564e <UArrayRep_init>
  404d39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404d3d:	48 83 c4 28          	add    $0x28,%rsp
  404d41:	5b                   	pop    %rbx
  404d42:	c9                   	leaveq 
  404d43:	c3                   	retq   

0000000000404d44 <Seq_seq>:
  404d44:	55                   	push   %rbp
  404d45:	48 89 e5             	mov    %rsp,%rbp
  404d48:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  404d4f:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
  404d56:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  404d5d:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  404d64:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  404d6b:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  404d72:	0f b6 c0             	movzbl %al,%eax
  404d75:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  404d7c:	00 
  404d7d:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 404dad <Seq_seq+0x69>
  404d84:	48 29 d0             	sub    %rdx,%rax
  404d87:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  404d8b:	ff e0                	jmpq   *%rax
  404d8d:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)
  404d91:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)
  404d95:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)
  404d99:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)
  404d9d:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)
  404da1:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)
  404da5:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)
  404da9:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)
  404dad:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  404db4:	bf 00 00 00 00       	mov    $0x0,%edi
  404db9:	e8 e9 fe ff ff       	callq  404ca7 <Seq_new>
  404dbe:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  404dc5:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  404dcc:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  404dd2:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  404dd9:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  404de0:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  404de7:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  404deb:	48 89 50 08          	mov    %rdx,0x8(%rax)
  404def:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  404df6:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  404dfd:	48 89 50 10          	mov    %rdx,0x10(%rax)
  404e01:	eb 67                	jmp    404e6a <Seq_seq+0x126>
  404e03:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  404e0a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  404e11:	48 89 d6             	mov    %rdx,%rsi
  404e14:	48 89 c7             	mov    %rax,%rdi
  404e17:	e8 cd 03 00 00       	callq  4051e9 <Seq_addhi>
  404e1c:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
  404e22:	83 f8 30             	cmp    $0x30,%eax
  404e25:	73 24                	jae    404e4b <Seq_seq+0x107>
  404e27:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  404e2e:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
  404e34:	89 c0                	mov    %eax,%eax
  404e36:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  404e3a:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
  404e40:	83 c2 08             	add    $0x8,%edx
  404e43:	89 95 30 ff ff ff    	mov    %edx,-0xd0(%rbp)
  404e49:	eb 15                	jmp    404e60 <Seq_seq+0x11c>
  404e4b:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
  404e52:	48 89 d0             	mov    %rdx,%rax
  404e55:	48 83 c2 08          	add    $0x8,%rdx
  404e59:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
  404e60:	48 8b 00             	mov    (%rax),%rax
  404e63:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  404e6a:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
  404e71:	00 
  404e72:	75 8f                	jne    404e03 <Seq_seq+0xbf>
  404e74:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  404e7b:	c9                   	leaveq 
  404e7c:	c3                   	retq   

0000000000404e7d <Seq_free>:
  404e7d:	55                   	push   %rbp
  404e7e:	48 89 e5             	mov    %rsp,%rbp
  404e81:	48 83 ec 10          	sub    $0x10,%rsp
  404e85:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  404e89:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404e8e:	74 0c                	je     404e9c <Seq_free+0x1f>
  404e90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404e94:	48 8b 00             	mov    (%rax),%rax
  404e97:	48 85 c0             	test   %rax,%rax
  404e9a:	75 1d                	jne    404eb9 <Seq_free+0x3c>
  404e9c:	ba 2e 00 00 00       	mov    $0x2e,%edx
  404ea1:	48 8d 35 b2 0f 00 00 	lea    0xfb2(%rip),%rsi        # 405e5a <_IO_stdin_used+0x34a>
  404ea8:	48 8d 05 11 1f 20 00 	lea    0x201f11(%rip),%rax        # 606dc0 <Assert_Failed>
  404eaf:	48 89 c7             	mov    %rax,%rdi
  404eb2:	e8 d9 df ff ff       	callq  402e90 <Except_raise>
  404eb7:	eb 01                	jmp    404eba <Seq_free+0x3d>
  404eb9:	90                   	nop
  404eba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404ebe:	48 89 c7             	mov    %rax,%rdi
  404ec1:	e8 4b 08 00 00       	callq  405711 <UArray_free>
  404ec6:	c9                   	leaveq 
  404ec7:	c3                   	retq   

0000000000404ec8 <Seq_length>:
  404ec8:	55                   	push   %rbp
  404ec9:	48 89 e5             	mov    %rsp,%rbp
  404ecc:	48 83 ec 10          	sub    $0x10,%rsp
  404ed0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  404ed4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404ed9:	75 1b                	jne    404ef6 <Seq_length+0x2e>
  404edb:	ba 33 00 00 00       	mov    $0x33,%edx
  404ee0:	48 8d 35 73 0f 00 00 	lea    0xf73(%rip),%rsi        # 405e5a <_IO_stdin_used+0x34a>
  404ee7:	48 8d 05 d2 1e 20 00 	lea    0x201ed2(%rip),%rax        # 606dc0 <Assert_Failed>
  404eee:	48 89 c7             	mov    %rax,%rdi
  404ef1:	e8 9a df ff ff       	callq  402e90 <Except_raise>
  404ef6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404efa:	8b 40 10             	mov    0x10(%rax),%eax
  404efd:	c9                   	leaveq 
  404efe:	c3                   	retq   

0000000000404eff <Seq_get>:
  404eff:	55                   	push   %rbp
  404f00:	48 89 e5             	mov    %rsp,%rbp
  404f03:	53                   	push   %rbx
  404f04:	48 83 ec 18          	sub    $0x18,%rsp
  404f08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  404f0c:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  404f0f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  404f14:	75 1b                	jne    404f31 <Seq_get+0x32>
  404f16:	ba 37 00 00 00       	mov    $0x37,%edx
  404f1b:	48 8d 35 38 0f 00 00 	lea    0xf38(%rip),%rsi        # 405e5a <_IO_stdin_used+0x34a>
  404f22:	48 8d 05 97 1e 20 00 	lea    0x201e97(%rip),%rax        # 606dc0 <Assert_Failed>
  404f29:	48 89 c7             	mov    %rax,%rdi
  404f2c:	e8 5f df ff ff       	callq  402e90 <Except_raise>
  404f31:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  404f35:	78 0c                	js     404f43 <Seq_get+0x44>
  404f37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404f3b:	8b 40 10             	mov    0x10(%rax),%eax
  404f3e:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  404f41:	7f 1d                	jg     404f60 <Seq_get+0x61>
  404f43:	ba 38 00 00 00       	mov    $0x38,%edx
  404f48:	48 8d 35 0b 0f 00 00 	lea    0xf0b(%rip),%rsi        # 405e5a <_IO_stdin_used+0x34a>
  404f4f:	48 8d 05 6a 1e 20 00 	lea    0x201e6a(%rip),%rax        # 606dc0 <Assert_Failed>
  404f56:	48 89 c7             	mov    %rax,%rdi
  404f59:	e8 32 df ff ff       	callq  402e90 <Except_raise>
  404f5e:	eb 01                	jmp    404f61 <Seq_get+0x62>
  404f60:	90                   	nop
  404f61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404f65:	48 8b 40 08          	mov    0x8(%rax),%rax
  404f69:	48 89 c1             	mov    %rax,%rcx
  404f6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404f70:	8b 40 14             	mov    0x14(%rax),%eax
  404f73:	03 45 e4             	add    -0x1c(%rbp),%eax
  404f76:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  404f7a:	8b 1a                	mov    (%rdx),%ebx
  404f7c:	89 c2                	mov    %eax,%edx
  404f7e:	c1 fa 1f             	sar    $0x1f,%edx
  404f81:	f7 fb                	idiv   %ebx
  404f83:	89 d0                	mov    %edx,%eax
  404f85:	48 98                	cltq   
  404f87:	48 c1 e0 03          	shl    $0x3,%rax
  404f8b:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax
  404f8f:	48 8b 00             	mov    (%rax),%rax
  404f92:	48 83 c4 18          	add    $0x18,%rsp
  404f96:	5b                   	pop    %rbx
  404f97:	c9                   	leaveq 
  404f98:	c3                   	retq   

0000000000404f99 <Seq_put>:
  404f99:	55                   	push   %rbp
  404f9a:	48 89 e5             	mov    %rsp,%rbp
  404f9d:	53                   	push   %rbx
  404f9e:	48 83 ec 38          	sub    $0x38,%rsp
  404fa2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  404fa6:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  404fa9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  404fad:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  404fb2:	75 1b                	jne    404fcf <Seq_put+0x36>
  404fb4:	ba 3e 00 00 00       	mov    $0x3e,%edx
  404fb9:	48 8d 35 9a 0e 00 00 	lea    0xe9a(%rip),%rsi        # 405e5a <_IO_stdin_used+0x34a>
  404fc0:	48 8d 05 f9 1d 20 00 	lea    0x201df9(%rip),%rax        # 606dc0 <Assert_Failed>
  404fc7:	48 89 c7             	mov    %rax,%rdi
  404fca:	e8 c1 de ff ff       	callq  402e90 <Except_raise>
  404fcf:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  404fd3:	78 0c                	js     404fe1 <Seq_put+0x48>
  404fd5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404fd9:	8b 40 10             	mov    0x10(%rax),%eax
  404fdc:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
  404fdf:	7f 1d                	jg     404ffe <Seq_put+0x65>
  404fe1:	ba 3f 00 00 00       	mov    $0x3f,%edx
  404fe6:	48 8d 35 6d 0e 00 00 	lea    0xe6d(%rip),%rsi        # 405e5a <_IO_stdin_used+0x34a>
  404fed:	48 8d 05 cc 1d 20 00 	lea    0x201dcc(%rip),%rax        # 606dc0 <Assert_Failed>
  404ff4:	48 89 c7             	mov    %rax,%rdi
  404ff7:	e8 94 de ff ff       	callq  402e90 <Except_raise>
  404ffc:	eb 01                	jmp    404fff <Seq_put+0x66>
  404ffe:	90                   	nop
  404fff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405003:	48 8b 40 08          	mov    0x8(%rax),%rax
  405007:	48 89 c1             	mov    %rax,%rcx
  40500a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40500e:	8b 40 14             	mov    0x14(%rax),%eax
  405011:	03 45 d4             	add    -0x2c(%rbp),%eax
  405014:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  405018:	8b 1a                	mov    (%rdx),%ebx
  40501a:	89 c2                	mov    %eax,%edx
  40501c:	c1 fa 1f             	sar    $0x1f,%edx
  40501f:	f7 fb                	idiv   %ebx
  405021:	89 d0                	mov    %edx,%eax
  405023:	48 98                	cltq   
  405025:	48 c1 e0 03          	shl    $0x3,%rax
  405029:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax
  40502d:	48 8b 00             	mov    (%rax),%rax
  405030:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  405034:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405038:	48 8b 40 08          	mov    0x8(%rax),%rax
  40503c:	48 89 c1             	mov    %rax,%rcx
  40503f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405043:	8b 40 14             	mov    0x14(%rax),%eax
  405046:	03 45 d4             	add    -0x2c(%rbp),%eax
  405049:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40504d:	8b 1a                	mov    (%rdx),%ebx
  40504f:	89 c2                	mov    %eax,%edx
  405051:	c1 fa 1f             	sar    $0x1f,%edx
  405054:	f7 fb                	idiv   %ebx
  405056:	89 d0                	mov    %edx,%eax
  405058:	48 98                	cltq   
  40505a:	48 c1 e0 03          	shl    $0x3,%rax
  40505e:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
  405062:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  405066:	48 89 02             	mov    %rax,(%rdx)
  405069:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40506d:	48 83 c4 38          	add    $0x38,%rsp
  405071:	5b                   	pop    %rbx
  405072:	c9                   	leaveq 
  405073:	c3                   	retq   

0000000000405074 <Seq_remhi>:
  405074:	55                   	push   %rbp
  405075:	48 89 e5             	mov    %rsp,%rbp
  405078:	53                   	push   %rbx
  405079:	48 83 ec 28          	sub    $0x28,%rsp
  40507d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  405081:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  405086:	75 1b                	jne    4050a3 <Seq_remhi+0x2f>
  405088:	ba 48 00 00 00       	mov    $0x48,%edx
  40508d:	48 8d 35 c6 0d 00 00 	lea    0xdc6(%rip),%rsi        # 405e5a <_IO_stdin_used+0x34a>
  405094:	48 8d 05 25 1d 20 00 	lea    0x201d25(%rip),%rax        # 606dc0 <Assert_Failed>
  40509b:	48 89 c7             	mov    %rax,%rdi
  40509e:	e8 ed dd ff ff       	callq  402e90 <Except_raise>
  4050a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4050a7:	8b 40 10             	mov    0x10(%rax),%eax
  4050aa:	85 c0                	test   %eax,%eax
  4050ac:	7f 1b                	jg     4050c9 <Seq_remhi+0x55>
  4050ae:	ba 49 00 00 00       	mov    $0x49,%edx
  4050b3:	48 8d 35 a0 0d 00 00 	lea    0xda0(%rip),%rsi        # 405e5a <_IO_stdin_used+0x34a>
  4050ba:	48 8d 05 ff 1c 20 00 	lea    0x201cff(%rip),%rax        # 606dc0 <Assert_Failed>
  4050c1:	48 89 c7             	mov    %rax,%rdi
  4050c4:	e8 c7 dd ff ff       	callq  402e90 <Except_raise>
  4050c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4050cd:	8b 40 10             	mov    0x10(%rax),%eax
  4050d0:	8d 50 ff             	lea    -0x1(%rax),%edx
  4050d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4050d7:	89 50 10             	mov    %edx,0x10(%rax)
  4050da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4050de:	8b 40 10             	mov    0x10(%rax),%eax
  4050e1:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4050e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4050e8:	48 8b 40 08          	mov    0x8(%rax),%rax
  4050ec:	48 89 c1             	mov    %rax,%rcx
  4050ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4050f3:	8b 40 14             	mov    0x14(%rax),%eax
  4050f6:	03 45 ec             	add    -0x14(%rbp),%eax
  4050f9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4050fd:	8b 1a                	mov    (%rdx),%ebx
  4050ff:	89 c2                	mov    %eax,%edx
  405101:	c1 fa 1f             	sar    $0x1f,%edx
  405104:	f7 fb                	idiv   %ebx
  405106:	89 d0                	mov    %edx,%eax
  405108:	48 98                	cltq   
  40510a:	48 c1 e0 03          	shl    $0x3,%rax
  40510e:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax
  405112:	48 8b 00             	mov    (%rax),%rax
  405115:	48 83 c4 28          	add    $0x28,%rsp
  405119:	5b                   	pop    %rbx
  40511a:	c9                   	leaveq 
  40511b:	c3                   	retq   

000000000040511c <Seq_remlo>:
  40511c:	55                   	push   %rbp
  40511d:	48 89 e5             	mov    %rsp,%rbp
  405120:	53                   	push   %rbx
  405121:	48 83 ec 28          	sub    $0x28,%rsp
  405125:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  405129:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  405130:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  405135:	75 1b                	jne    405152 <Seq_remlo+0x36>
  405137:	ba 51 00 00 00       	mov    $0x51,%edx
  40513c:	48 8d 35 17 0d 00 00 	lea    0xd17(%rip),%rsi        # 405e5a <_IO_stdin_used+0x34a>
  405143:	48 8d 05 76 1c 20 00 	lea    0x201c76(%rip),%rax        # 606dc0 <Assert_Failed>
  40514a:	48 89 c7             	mov    %rax,%rdi
  40514d:	e8 3e dd ff ff       	callq  402e90 <Except_raise>
  405152:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405156:	8b 40 10             	mov    0x10(%rax),%eax
  405159:	85 c0                	test   %eax,%eax
  40515b:	7f 1b                	jg     405178 <Seq_remlo+0x5c>
  40515d:	ba 52 00 00 00       	mov    $0x52,%edx
  405162:	48 8d 35 f1 0c 00 00 	lea    0xcf1(%rip),%rsi        # 405e5a <_IO_stdin_used+0x34a>
  405169:	48 8d 05 50 1c 20 00 	lea    0x201c50(%rip),%rax        # 606dc0 <Assert_Failed>
  405170:	48 89 c7             	mov    %rax,%rdi
  405173:	e8 18 dd ff ff       	callq  402e90 <Except_raise>
  405178:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40517c:	48 8b 40 08          	mov    0x8(%rax),%rax
  405180:	48 89 c1             	mov    %rax,%rcx
  405183:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405187:	8b 40 14             	mov    0x14(%rax),%eax
  40518a:	03 45 ec             	add    -0x14(%rbp),%eax
  40518d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  405191:	8b 1a                	mov    (%rdx),%ebx
  405193:	89 c2                	mov    %eax,%edx
  405195:	c1 fa 1f             	sar    $0x1f,%edx
  405198:	f7 fb                	idiv   %ebx
  40519a:	89 d0                	mov    %edx,%eax
  40519c:	48 98                	cltq   
  40519e:	48 c1 e0 03          	shl    $0x3,%rax
  4051a2:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax
  4051a6:	48 8b 00             	mov    (%rax),%rax
  4051a9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4051ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4051b1:	8b 40 14             	mov    0x14(%rax),%eax
  4051b4:	8d 50 01             	lea    0x1(%rax),%edx
  4051b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4051bb:	8b 08                	mov    (%rax),%ecx
  4051bd:	89 d0                	mov    %edx,%eax
  4051bf:	89 c2                	mov    %eax,%edx
  4051c1:	c1 fa 1f             	sar    $0x1f,%edx
  4051c4:	f7 f9                	idiv   %ecx
  4051c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4051ca:	89 50 14             	mov    %edx,0x14(%rax)
  4051cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4051d1:	8b 40 10             	mov    0x10(%rax),%eax
  4051d4:	8d 50 ff             	lea    -0x1(%rax),%edx
  4051d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4051db:	89 50 10             	mov    %edx,0x10(%rax)
  4051de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4051e2:	48 83 c4 28          	add    $0x28,%rsp
  4051e6:	5b                   	pop    %rbx
  4051e7:	c9                   	leaveq 
  4051e8:	c3                   	retq   

00000000004051e9 <Seq_addhi>:
  4051e9:	55                   	push   %rbp
  4051ea:	48 89 e5             	mov    %rsp,%rbp
  4051ed:	53                   	push   %rbx
  4051ee:	48 83 ec 28          	sub    $0x28,%rsp
  4051f2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4051f6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4051fa:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4051ff:	75 1b                	jne    40521c <Seq_addhi+0x33>
  405201:	ba 5b 00 00 00       	mov    $0x5b,%edx
  405206:	48 8d 35 4d 0c 00 00 	lea    0xc4d(%rip),%rsi        # 405e5a <_IO_stdin_used+0x34a>
  40520d:	48 8d 05 ac 1b 20 00 	lea    0x201bac(%rip),%rax        # 606dc0 <Assert_Failed>
  405214:	48 89 c7             	mov    %rax,%rdi
  405217:	e8 74 dc ff ff       	callq  402e90 <Except_raise>
  40521c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405220:	8b 50 10             	mov    0x10(%rax),%edx
  405223:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405227:	8b 00                	mov    (%rax),%eax
  405229:	39 c2                	cmp    %eax,%edx
  40522b:	75 0c                	jne    405239 <Seq_addhi+0x50>
  40522d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405231:	48 89 c7             	mov    %rax,%rdi
  405234:	e8 cf f9 ff ff       	callq  404c08 <expand>
  405239:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40523d:	8b 40 10             	mov    0x10(%rax),%eax
  405240:	89 45 ec             	mov    %eax,-0x14(%rbp)
  405243:	8d 50 01             	lea    0x1(%rax),%edx
  405246:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40524a:	89 50 10             	mov    %edx,0x10(%rax)
  40524d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405251:	48 8b 40 08          	mov    0x8(%rax),%rax
  405255:	48 89 c1             	mov    %rax,%rcx
  405258:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40525c:	8b 40 14             	mov    0x14(%rax),%eax
  40525f:	03 45 ec             	add    -0x14(%rbp),%eax
  405262:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  405266:	8b 1a                	mov    (%rdx),%ebx
  405268:	89 c2                	mov    %eax,%edx
  40526a:	c1 fa 1f             	sar    $0x1f,%edx
  40526d:	f7 fb                	idiv   %ebx
  40526f:	89 d0                	mov    %edx,%eax
  405271:	48 98                	cltq   
  405273:	48 c1 e0 03          	shl    $0x3,%rax
  405277:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax
  40527b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40527f:	48 89 10             	mov    %rdx,(%rax)
  405282:	48 8b 00             	mov    (%rax),%rax
  405285:	48 83 c4 28          	add    $0x28,%rsp
  405289:	5b                   	pop    %rbx
  40528a:	c9                   	leaveq 
  40528b:	c3                   	retq   

000000000040528c <Seq_addlo>:
  40528c:	55                   	push   %rbp
  40528d:	48 89 e5             	mov    %rsp,%rbp
  405290:	53                   	push   %rbx
  405291:	48 83 ec 28          	sub    $0x28,%rsp
  405295:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  405299:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  40529d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  4052a4:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4052a9:	75 1b                	jne    4052c6 <Seq_addlo+0x3a>
  4052ab:	ba 64 00 00 00       	mov    $0x64,%edx
  4052b0:	48 8d 35 a3 0b 00 00 	lea    0xba3(%rip),%rsi        # 405e5a <_IO_stdin_used+0x34a>
  4052b7:	48 8d 05 02 1b 20 00 	lea    0x201b02(%rip),%rax        # 606dc0 <Assert_Failed>
  4052be:	48 89 c7             	mov    %rax,%rdi
  4052c1:	e8 ca db ff ff       	callq  402e90 <Except_raise>
  4052c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4052ca:	8b 50 10             	mov    0x10(%rax),%edx
  4052cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4052d1:	8b 00                	mov    (%rax),%eax
  4052d3:	39 c2                	cmp    %eax,%edx
  4052d5:	75 0c                	jne    4052e3 <Seq_addlo+0x57>
  4052d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4052db:	48 89 c7             	mov    %rax,%rdi
  4052de:	e8 25 f9 ff ff       	callq  404c08 <expand>
  4052e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4052e7:	8b 40 14             	mov    0x14(%rax),%eax
  4052ea:	8d 50 ff             	lea    -0x1(%rax),%edx
  4052ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4052f1:	89 50 14             	mov    %edx,0x14(%rax)
  4052f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4052f8:	8b 40 14             	mov    0x14(%rax),%eax
  4052fb:	85 c0                	test   %eax,%eax
  4052fd:	79 10                	jns    40530f <Seq_addlo+0x83>
  4052ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405303:	8b 00                	mov    (%rax),%eax
  405305:	8d 50 ff             	lea    -0x1(%rax),%edx
  405308:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40530c:	89 50 14             	mov    %edx,0x14(%rax)
  40530f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405313:	8b 40 10             	mov    0x10(%rax),%eax
  405316:	8d 50 01             	lea    0x1(%rax),%edx
  405319:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40531d:	89 50 10             	mov    %edx,0x10(%rax)
  405320:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405324:	48 8b 40 08          	mov    0x8(%rax),%rax
  405328:	48 89 c1             	mov    %rax,%rcx
  40532b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40532f:	8b 40 14             	mov    0x14(%rax),%eax
  405332:	03 45 ec             	add    -0x14(%rbp),%eax
  405335:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  405339:	8b 1a                	mov    (%rdx),%ebx
  40533b:	89 c2                	mov    %eax,%edx
  40533d:	c1 fa 1f             	sar    $0x1f,%edx
  405340:	f7 fb                	idiv   %ebx
  405342:	89 d0                	mov    %edx,%eax
  405344:	48 98                	cltq   
  405346:	48 c1 e0 03          	shl    $0x3,%rax
  40534a:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax
  40534e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  405352:	48 89 10             	mov    %rdx,(%rax)
  405355:	48 8b 00             	mov    (%rax),%rax
  405358:	48 83 c4 28          	add    $0x28,%rsp
  40535c:	5b                   	pop    %rbx
  40535d:	c9                   	leaveq 
  40535e:	c3                   	retq   
  40535f:	90                   	nop

0000000000405360 <Stack_new>:
  405360:	55                   	push   %rbp
  405361:	48 89 e5             	mov    %rsp,%rbp
  405364:	48 83 ec 10          	sub    $0x10,%rsp
  405368:	ba 10 00 00 00       	mov    $0x10,%edx
  40536d:	48 8d 35 f0 0a 00 00 	lea    0xaf0(%rip),%rsi        # 405e64 <_IO_stdin_used+0x354>
  405374:	bf 10 00 00 00       	mov    $0x10,%edi
  405379:	e8 5a f6 ff ff       	callq  4049d8 <Mem_alloc>
  40537e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  405382:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405386:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  40538c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405390:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  405397:	00 
  405398:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40539c:	c9                   	leaveq 
  40539d:	c3                   	retq   

000000000040539e <Stack_empty>:
  40539e:	55                   	push   %rbp
  40539f:	48 89 e5             	mov    %rsp,%rbp
  4053a2:	48 83 ec 10          	sub    $0x10,%rsp
  4053a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4053aa:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4053af:	75 1b                	jne    4053cc <Stack_empty+0x2e>
  4053b1:	ba 16 00 00 00       	mov    $0x16,%edx
  4053b6:	48 8d 35 a7 0a 00 00 	lea    0xaa7(%rip),%rsi        # 405e64 <_IO_stdin_used+0x354>
  4053bd:	48 8d 05 fc 19 20 00 	lea    0x2019fc(%rip),%rax        # 606dc0 <Assert_Failed>
  4053c4:	48 89 c7             	mov    %rax,%rdi
  4053c7:	e8 c4 da ff ff       	callq  402e90 <Except_raise>
  4053cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4053d0:	8b 00                	mov    (%rax),%eax
  4053d2:	85 c0                	test   %eax,%eax
  4053d4:	0f 94 c0             	sete   %al
  4053d7:	0f b6 c0             	movzbl %al,%eax
  4053da:	c9                   	leaveq 
  4053db:	c3                   	retq   

00000000004053dc <Stack_push>:
  4053dc:	55                   	push   %rbp
  4053dd:	48 89 e5             	mov    %rsp,%rbp
  4053e0:	48 83 ec 20          	sub    $0x20,%rsp
  4053e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4053e8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4053ec:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4053f1:	75 1b                	jne    40540e <Stack_push+0x32>
  4053f3:	ba 1b 00 00 00       	mov    $0x1b,%edx
  4053f8:	48 8d 35 65 0a 00 00 	lea    0xa65(%rip),%rsi        # 405e64 <_IO_stdin_used+0x354>
  4053ff:	48 8d 05 ba 19 20 00 	lea    0x2019ba(%rip),%rax        # 606dc0 <Assert_Failed>
  405406:	48 89 c7             	mov    %rax,%rdi
  405409:	e8 82 da ff ff       	callq  402e90 <Except_raise>
  40540e:	ba 1c 00 00 00       	mov    $0x1c,%edx
  405413:	48 8d 35 4a 0a 00 00 	lea    0xa4a(%rip),%rsi        # 405e64 <_IO_stdin_used+0x354>
  40541a:	bf 10 00 00 00       	mov    $0x10,%edi
  40541f:	e8 b4 f5 ff ff       	callq  4049d8 <Mem_alloc>
  405424:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  405428:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40542c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  405430:	48 89 10             	mov    %rdx,(%rax)
  405433:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405437:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40543b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40543f:	48 89 50 08          	mov    %rdx,0x8(%rax)
  405443:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405447:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40544b:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40544f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405453:	8b 00                	mov    (%rax),%eax
  405455:	8d 50 01             	lea    0x1(%rax),%edx
  405458:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40545c:	89 10                	mov    %edx,(%rax)
  40545e:	c9                   	leaveq 
  40545f:	c3                   	retq   

0000000000405460 <Stack_pop>:
  405460:	55                   	push   %rbp
  405461:	48 89 e5             	mov    %rsp,%rbp
  405464:	48 83 ec 20          	sub    $0x20,%rsp
  405468:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40546c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  405471:	75 1b                	jne    40548e <Stack_pop+0x2e>
  405473:	ba 25 00 00 00       	mov    $0x25,%edx
  405478:	48 8d 35 e5 09 00 00 	lea    0x9e5(%rip),%rsi        # 405e64 <_IO_stdin_used+0x354>
  40547f:	48 8d 05 3a 19 20 00 	lea    0x20193a(%rip),%rax        # 606dc0 <Assert_Failed>
  405486:	48 89 c7             	mov    %rax,%rdi
  405489:	e8 02 da ff ff       	callq  402e90 <Except_raise>
  40548e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405492:	8b 00                	mov    (%rax),%eax
  405494:	85 c0                	test   %eax,%eax
  405496:	7f 1b                	jg     4054b3 <Stack_pop+0x53>
  405498:	ba 26 00 00 00       	mov    $0x26,%edx
  40549d:	48 8d 35 c0 09 00 00 	lea    0x9c0(%rip),%rsi        # 405e64 <_IO_stdin_used+0x354>
  4054a4:	48 8d 05 15 19 20 00 	lea    0x201915(%rip),%rax        # 606dc0 <Assert_Failed>
  4054ab:	48 89 c7             	mov    %rax,%rdi
  4054ae:	e8 dd d9 ff ff       	callq  402e90 <Except_raise>
  4054b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4054b7:	48 8b 40 08          	mov    0x8(%rax),%rax
  4054bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4054bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4054c3:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4054c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4054cb:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4054cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4054d3:	8b 00                	mov    (%rax),%eax
  4054d5:	8d 50 ff             	lea    -0x1(%rax),%edx
  4054d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4054dc:	89 10                	mov    %edx,(%rax)
  4054de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4054e2:	48 8b 00             	mov    (%rax),%rax
  4054e5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4054e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4054ed:	ba 2b 00 00 00       	mov    $0x2b,%edx
  4054f2:	48 8d 35 6b 09 00 00 	lea    0x96b(%rip),%rsi        # 405e64 <_IO_stdin_used+0x354>
  4054f9:	48 89 c7             	mov    %rax,%rdi
  4054fc:	e8 22 f6 ff ff       	callq  404b23 <Mem_free>
  405501:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  405508:	00 
  405509:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40550d:	c9                   	leaveq 
  40550e:	c3                   	retq   

000000000040550f <Stack_free>:
  40550f:	55                   	push   %rbp
  405510:	48 89 e5             	mov    %rsp,%rbp
  405513:	48 83 ec 20          	sub    $0x20,%rsp
  405517:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40551b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  405520:	74 0c                	je     40552e <Stack_free+0x1f>
  405522:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405526:	48 8b 00             	mov    (%rax),%rax
  405529:	48 85 c0             	test   %rax,%rax
  40552c:	75 1d                	jne    40554b <Stack_free+0x3c>
  40552e:	ba 30 00 00 00       	mov    $0x30,%edx
  405533:	48 8d 35 2a 09 00 00 	lea    0x92a(%rip),%rsi        # 405e64 <_IO_stdin_used+0x354>
  40553a:	48 8d 05 7f 18 20 00 	lea    0x20187f(%rip),%rax        # 606dc0 <Assert_Failed>
  405541:	48 89 c7             	mov    %rax,%rdi
  405544:	e8 47 d9 ff ff       	callq  402e90 <Except_raise>
  405549:	eb 01                	jmp    40554c <Stack_free+0x3d>
  40554b:	90                   	nop
  40554c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405550:	48 8b 00             	mov    (%rax),%rax
  405553:	48 8b 40 08          	mov    0x8(%rax),%rax
  405557:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40555b:	eb 34                	jmp    405591 <Stack_free+0x82>
  40555d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405561:	48 8b 40 08          	mov    0x8(%rax),%rax
  405565:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  405569:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40556d:	ba 33 00 00 00       	mov    $0x33,%edx
  405572:	48 8d 35 eb 08 00 00 	lea    0x8eb(%rip),%rsi        # 405e64 <_IO_stdin_used+0x354>
  405579:	48 89 c7             	mov    %rax,%rdi
  40557c:	e8 a2 f5 ff ff       	callq  404b23 <Mem_free>
  405581:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  405588:	00 
  405589:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40558d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  405591:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  405596:	75 c5                	jne    40555d <Stack_free+0x4e>
  405598:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40559c:	48 8b 00             	mov    (%rax),%rax
  40559f:	ba 35 00 00 00       	mov    $0x35,%edx
  4055a4:	48 8d 35 b9 08 00 00 	lea    0x8b9(%rip),%rsi        # 405e64 <_IO_stdin_used+0x354>
  4055ab:	48 89 c7             	mov    %rax,%rdi
  4055ae:	e8 70 f5 ff ff       	callq  404b23 <Mem_free>
  4055b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4055b7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  4055be:	c9                   	leaveq 
  4055bf:	c3                   	retq   

00000000004055c0 <UArray_new>:
  4055c0:	55                   	push   %rbp
  4055c1:	48 89 e5             	mov    %rsp,%rbp
  4055c4:	53                   	push   %rbx
  4055c5:	48 83 ec 28          	sub    $0x28,%rsp
  4055c9:	89 7d dc             	mov    %edi,-0x24(%rbp)
  4055cc:	89 75 d8             	mov    %esi,-0x28(%rbp)
  4055cf:	ba 0b 00 00 00       	mov    $0xb,%edx
  4055d4:	48 8d 35 95 08 00 00 	lea    0x895(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  4055db:	bf 10 00 00 00       	mov    $0x10,%edi
  4055e0:	e8 f3 f3 ff ff       	callq  4049d8 <Mem_alloc>
  4055e5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4055e9:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  4055ed:	7e 3b                	jle    40562a <UArray_new+0x6a>
  4055ef:	8b 45 d8             	mov    -0x28(%rbp),%eax
  4055f2:	48 63 d8             	movslq %eax,%rbx
  4055f5:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4055f8:	48 98                	cltq   
  4055fa:	b9 0d 00 00 00       	mov    $0xd,%ecx
  4055ff:	48 8d 15 6a 08 00 00 	lea    0x86a(%rip),%rdx        # 405e70 <_IO_stdin_used+0x360>
  405606:	48 89 de             	mov    %rbx,%rsi
  405609:	48 89 c7             	mov    %rax,%rdi
  40560c:	e8 56 f4 ff ff       	callq  404a67 <Mem_calloc>
  405611:	48 89 c1             	mov    %rax,%rcx
  405614:	8b 55 d8             	mov    -0x28(%rbp),%edx
  405617:	8b 5d dc             	mov    -0x24(%rbp),%ebx
  40561a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40561e:	89 de                	mov    %ebx,%esi
  405620:	48 89 c7             	mov    %rax,%rdi
  405623:	e8 26 00 00 00       	callq  40564e <UArrayRep_init>
  405628:	eb 19                	jmp    405643 <UArray_new+0x83>
  40562a:	8b 55 d8             	mov    -0x28(%rbp),%edx
  40562d:	8b 5d dc             	mov    -0x24(%rbp),%ebx
  405630:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405634:	b9 00 00 00 00       	mov    $0x0,%ecx
  405639:	89 de                	mov    %ebx,%esi
  40563b:	48 89 c7             	mov    %rax,%rdi
  40563e:	e8 0b 00 00 00       	callq  40564e <UArrayRep_init>
  405643:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405647:	48 83 c4 28          	add    $0x28,%rsp
  40564b:	5b                   	pop    %rbx
  40564c:	c9                   	leaveq 
  40564d:	c3                   	retq   

000000000040564e <UArrayRep_init>:
  40564e:	55                   	push   %rbp
  40564f:	48 89 e5             	mov    %rsp,%rbp
  405652:	48 83 ec 20          	sub    $0x20,%rsp
  405656:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40565a:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40565d:	89 55 f0             	mov    %edx,-0x10(%rbp)
  405660:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  405664:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  405669:	75 1b                	jne    405686 <UArrayRep_init+0x38>
  40566b:	ba 13 00 00 00       	mov    $0x13,%edx
  405670:	48 8d 35 f9 07 00 00 	lea    0x7f9(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  405677:	48 8d 05 42 17 20 00 	lea    0x201742(%rip),%rax        # 606dc0 <Assert_Failed>
  40567e:	48 89 c7             	mov    %rax,%rdi
  405681:	e8 0a d8 ff ff       	callq  402e90 <Except_raise>
  405686:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40568b:	74 06                	je     405693 <UArrayRep_init+0x45>
  40568d:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  405691:	7f 28                	jg     4056bb <UArrayRep_init+0x6d>
  405693:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  405697:	75 07                	jne    4056a0 <UArrayRep_init+0x52>
  405699:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40569e:	74 1b                	je     4056bb <UArrayRep_init+0x6d>
  4056a0:	ba 14 00 00 00       	mov    $0x14,%edx
  4056a5:	48 8d 35 c4 07 00 00 	lea    0x7c4(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  4056ac:	48 8d 05 0d 17 20 00 	lea    0x20170d(%rip),%rax        # 606dc0 <Assert_Failed>
  4056b3:	48 89 c7             	mov    %rax,%rdi
  4056b6:	e8 d5 d7 ff ff       	callq  402e90 <Except_raise>
  4056bb:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
  4056bf:	7f 1b                	jg     4056dc <UArrayRep_init+0x8e>
  4056c1:	ba 15 00 00 00       	mov    $0x15,%edx
  4056c6:	48 8d 35 a3 07 00 00 	lea    0x7a3(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  4056cd:	48 8d 05 ec 16 20 00 	lea    0x2016ec(%rip),%rax        # 606dc0 <Assert_Failed>
  4056d4:	48 89 c7             	mov    %rax,%rdi
  4056d7:	e8 b4 d7 ff ff       	callq  402e90 <Except_raise>
  4056dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4056e0:	8b 55 f4             	mov    -0xc(%rbp),%edx
  4056e3:	89 10                	mov    %edx,(%rax)
  4056e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4056e9:	8b 55 f0             	mov    -0x10(%rbp),%edx
  4056ec:	89 50 04             	mov    %edx,0x4(%rax)
  4056ef:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  4056f3:	7e 0e                	jle    405703 <UArrayRep_init+0xb5>
  4056f5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4056f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4056fd:	48 89 50 08          	mov    %rdx,0x8(%rax)
  405701:	eb 0c                	jmp    40570f <UArrayRep_init+0xc1>
  405703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405707:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  40570e:	00 
  40570f:	c9                   	leaveq 
  405710:	c3                   	retq   

0000000000405711 <UArray_free>:
  405711:	55                   	push   %rbp
  405712:	48 89 e5             	mov    %rsp,%rbp
  405715:	48 83 ec 10          	sub    $0x10,%rsp
  405719:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40571d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  405722:	74 0c                	je     405730 <UArray_free+0x1f>
  405724:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405728:	48 8b 00             	mov    (%rax),%rax
  40572b:	48 85 c0             	test   %rax,%rax
  40572e:	75 1d                	jne    40574d <UArray_free+0x3c>
  405730:	ba 1e 00 00 00       	mov    $0x1e,%edx
  405735:	48 8d 35 34 07 00 00 	lea    0x734(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  40573c:	48 8d 05 7d 16 20 00 	lea    0x20167d(%rip),%rax        # 606dc0 <Assert_Failed>
  405743:	48 89 c7             	mov    %rax,%rdi
  405746:	e8 45 d7 ff ff       	callq  402e90 <Except_raise>
  40574b:	eb 01                	jmp    40574e <UArray_free+0x3d>
  40574d:	90                   	nop
  40574e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405752:	48 8b 00             	mov    (%rax),%rax
  405755:	48 8b 40 08          	mov    0x8(%rax),%rax
  405759:	ba 1f 00 00 00       	mov    $0x1f,%edx
  40575e:	48 8d 35 0b 07 00 00 	lea    0x70b(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  405765:	48 89 c7             	mov    %rax,%rdi
  405768:	e8 b6 f3 ff ff       	callq  404b23 <Mem_free>
  40576d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405771:	48 8b 00             	mov    (%rax),%rax
  405774:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  40577b:	00 
  40577c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405780:	48 8b 00             	mov    (%rax),%rax
  405783:	ba 20 00 00 00       	mov    $0x20,%edx
  405788:	48 8d 35 e1 06 00 00 	lea    0x6e1(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  40578f:	48 89 c7             	mov    %rax,%rdi
  405792:	e8 8c f3 ff ff       	callq  404b23 <Mem_free>
  405797:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40579b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  4057a2:	c9                   	leaveq 
  4057a3:	c3                   	retq   

00000000004057a4 <UArray_at>:
  4057a4:	55                   	push   %rbp
  4057a5:	48 89 e5             	mov    %rsp,%rbp
  4057a8:	48 83 ec 10          	sub    $0x10,%rsp
  4057ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4057b0:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4057b3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4057b8:	75 1b                	jne    4057d5 <UArray_at+0x31>
  4057ba:	ba 23 00 00 00       	mov    $0x23,%edx
  4057bf:	48 8d 35 aa 06 00 00 	lea    0x6aa(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  4057c6:	48 8d 05 f3 15 20 00 	lea    0x2015f3(%rip),%rax        # 606dc0 <Assert_Failed>
  4057cd:	48 89 c7             	mov    %rax,%rdi
  4057d0:	e8 bb d6 ff ff       	callq  402e90 <Except_raise>
  4057d5:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  4057d9:	78 0b                	js     4057e6 <UArray_at+0x42>
  4057db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4057df:	8b 00                	mov    (%rax),%eax
  4057e1:	3b 45 f4             	cmp    -0xc(%rbp),%eax
  4057e4:	7f 1d                	jg     405803 <UArray_at+0x5f>
  4057e6:	ba 24 00 00 00       	mov    $0x24,%edx
  4057eb:	48 8d 35 7e 06 00 00 	lea    0x67e(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  4057f2:	48 8d 05 c7 15 20 00 	lea    0x2015c7(%rip),%rax        # 606dc0 <Assert_Failed>
  4057f9:	48 89 c7             	mov    %rax,%rdi
  4057fc:	e8 8f d6 ff ff       	callq  402e90 <Except_raise>
  405801:	eb 01                	jmp    405804 <UArray_at+0x60>
  405803:	90                   	nop
  405804:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405808:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40580c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405810:	8b 40 04             	mov    0x4(%rax),%eax
  405813:	0f af 45 f4          	imul   -0xc(%rbp),%eax
  405817:	48 98                	cltq   
  405819:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  40581d:	c9                   	leaveq 
  40581e:	c3                   	retq   

000000000040581f <UArray_length>:
  40581f:	55                   	push   %rbp
  405820:	48 89 e5             	mov    %rsp,%rbp
  405823:	48 83 ec 10          	sub    $0x10,%rsp
  405827:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40582b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  405830:	75 1b                	jne    40584d <UArray_length+0x2e>
  405832:	ba 28 00 00 00       	mov    $0x28,%edx
  405837:	48 8d 35 32 06 00 00 	lea    0x632(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  40583e:	48 8d 05 7b 15 20 00 	lea    0x20157b(%rip),%rax        # 606dc0 <Assert_Failed>
  405845:	48 89 c7             	mov    %rax,%rdi
  405848:	e8 43 d6 ff ff       	callq  402e90 <Except_raise>
  40584d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405851:	8b 00                	mov    (%rax),%eax
  405853:	c9                   	leaveq 
  405854:	c3                   	retq   

0000000000405855 <UArray_size>:
  405855:	55                   	push   %rbp
  405856:	48 89 e5             	mov    %rsp,%rbp
  405859:	48 83 ec 10          	sub    $0x10,%rsp
  40585d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  405861:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  405866:	75 1b                	jne    405883 <UArray_size+0x2e>
  405868:	ba 2c 00 00 00       	mov    $0x2c,%edx
  40586d:	48 8d 35 fc 05 00 00 	lea    0x5fc(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  405874:	48 8d 05 45 15 20 00 	lea    0x201545(%rip),%rax        # 606dc0 <Assert_Failed>
  40587b:	48 89 c7             	mov    %rax,%rdi
  40587e:	e8 0d d6 ff ff       	callq  402e90 <Except_raise>
  405883:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405887:	8b 40 04             	mov    0x4(%rax),%eax
  40588a:	c9                   	leaveq 
  40588b:	c3                   	retq   

000000000040588c <UArray_resize>:
  40588c:	55                   	push   %rbp
  40588d:	48 89 e5             	mov    %rsp,%rbp
  405890:	53                   	push   %rbx
  405891:	48 83 ec 18          	sub    $0x18,%rsp
  405895:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  405899:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40589c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4058a1:	75 1b                	jne    4058be <UArray_resize+0x32>
  4058a3:	ba 30 00 00 00       	mov    $0x30,%edx
  4058a8:	48 8d 35 c1 05 00 00 	lea    0x5c1(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  4058af:	48 8d 05 0a 15 20 00 	lea    0x20150a(%rip),%rax        # 606dc0 <Assert_Failed>
  4058b6:	48 89 c7             	mov    %rax,%rdi
  4058b9:	e8 d2 d5 ff ff       	callq  402e90 <Except_raise>
  4058be:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4058c2:	79 1b                	jns    4058df <UArray_resize+0x53>
  4058c4:	ba 31 00 00 00       	mov    $0x31,%edx
  4058c9:	48 8d 35 a0 05 00 00 	lea    0x5a0(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  4058d0:	48 8d 05 e9 14 20 00 	lea    0x2014e9(%rip),%rax        # 606dc0 <Assert_Failed>
  4058d7:	48 89 c7             	mov    %rax,%rdi
  4058da:	e8 b1 d5 ff ff       	callq  402e90 <Except_raise>
  4058df:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4058e3:	75 2a                	jne    40590f <UArray_resize+0x83>
  4058e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4058e9:	48 8b 40 08          	mov    0x8(%rax),%rax
  4058ed:	ba 33 00 00 00       	mov    $0x33,%edx
  4058f2:	48 8d 35 77 05 00 00 	lea    0x577(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  4058f9:	48 89 c7             	mov    %rax,%rdi
  4058fc:	e8 22 f2 ff ff       	callq  404b23 <Mem_free>
  405901:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405905:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  40590c:	00 
  40590d:	eb 70                	jmp    40597f <UArray_resize+0xf3>
  40590f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405913:	8b 00                	mov    (%rax),%eax
  405915:	85 c0                	test   %eax,%eax
  405917:	75 2e                	jne    405947 <UArray_resize+0xbb>
  405919:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40591d:	8b 40 04             	mov    0x4(%rax),%eax
  405920:	0f af 45 e4          	imul   -0x1c(%rbp),%eax
  405924:	48 98                	cltq   
  405926:	ba 35 00 00 00       	mov    $0x35,%edx
  40592b:	48 8d 35 3e 05 00 00 	lea    0x53e(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  405932:	48 89 c7             	mov    %rax,%rdi
  405935:	e8 9e f0 ff ff       	callq  4049d8 <Mem_alloc>
  40593a:	48 89 c2             	mov    %rax,%rdx
  40593d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405941:	48 89 50 08          	mov    %rdx,0x8(%rax)
  405945:	eb 38                	jmp    40597f <UArray_resize+0xf3>
  405947:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40594b:	8b 40 04             	mov    0x4(%rax),%eax
  40594e:	0f af 45 e4          	imul   -0x1c(%rbp),%eax
  405952:	48 63 d8             	movslq %eax,%rbx
  405955:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405959:	48 8b 40 08          	mov    0x8(%rax),%rax
  40595d:	b9 37 00 00 00       	mov    $0x37,%ecx
  405962:	48 8d 15 07 05 00 00 	lea    0x507(%rip),%rdx        # 405e70 <_IO_stdin_used+0x360>
  405969:	48 89 de             	mov    %rbx,%rsi
  40596c:	48 89 c7             	mov    %rax,%rdi
  40596f:	e8 d7 f1 ff ff       	callq  404b4b <Mem_resize>
  405974:	48 89 c2             	mov    %rax,%rdx
  405977:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40597b:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40597f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405983:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  405986:	89 10                	mov    %edx,(%rax)
  405988:	48 83 c4 18          	add    $0x18,%rsp
  40598c:	5b                   	pop    %rbx
  40598d:	c9                   	leaveq 
  40598e:	c3                   	retq   

000000000040598f <UArray_copy>:
  40598f:	55                   	push   %rbp
  405990:	48 89 e5             	mov    %rsp,%rbp
  405993:	48 83 ec 20          	sub    $0x20,%rsp
  405997:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40599b:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40599e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4059a3:	75 1b                	jne    4059c0 <UArray_copy+0x31>
  4059a5:	ba 3c 00 00 00       	mov    $0x3c,%edx
  4059aa:	48 8d 35 bf 04 00 00 	lea    0x4bf(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  4059b1:	48 8d 05 08 14 20 00 	lea    0x201408(%rip),%rax        # 606dc0 <Assert_Failed>
  4059b8:	48 89 c7             	mov    %rax,%rdi
  4059bb:	e8 d0 d4 ff ff       	callq  402e90 <Except_raise>
  4059c0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4059c4:	79 1b                	jns    4059e1 <UArray_copy+0x52>
  4059c6:	ba 3d 00 00 00       	mov    $0x3d,%edx
  4059cb:	48 8d 35 9e 04 00 00 	lea    0x49e(%rip),%rsi        # 405e70 <_IO_stdin_used+0x360>
  4059d2:	48 8d 05 e7 13 20 00 	lea    0x2013e7(%rip),%rax        # 606dc0 <Assert_Failed>
  4059d9:	48 89 c7             	mov    %rax,%rdi
  4059dc:	e8 af d4 ff ff       	callq  402e90 <Except_raise>
  4059e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4059e5:	8b 50 04             	mov    0x4(%rax),%edx
  4059e8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4059eb:	89 d6                	mov    %edx,%esi
  4059ed:	89 c7                	mov    %eax,%edi
  4059ef:	e8 cc fb ff ff       	callq  4055c0 <UArray_new>
  4059f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4059f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4059fc:	8b 10                	mov    (%rax),%edx
  4059fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a02:	8b 00                	mov    (%rax),%eax
  405a04:	39 c2                	cmp    %eax,%edx
  405a06:	7c 3a                	jl     405a42 <UArray_copy+0xb3>
  405a08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a0c:	8b 00                	mov    (%rax),%eax
  405a0e:	85 c0                	test   %eax,%eax
  405a10:	7e 30                	jle    405a42 <UArray_copy+0xb3>
  405a12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a16:	8b 10                	mov    (%rax),%edx
  405a18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a1c:	8b 40 04             	mov    0x4(%rax),%eax
  405a1f:	0f af c2             	imul   %edx,%eax
  405a22:	48 63 d0             	movslq %eax,%rdx
  405a25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a29:	48 8b 48 08          	mov    0x8(%rax),%rcx
  405a2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405a31:	48 8b 40 08          	mov    0x8(%rax),%rax
  405a35:	48 89 ce             	mov    %rcx,%rsi
  405a38:	48 89 c7             	mov    %rax,%rdi
  405a3b:	e8 a0 b3 ff ff       	callq  400de0 <memcpy@plt>
  405a40:	eb 48                	jmp    405a8a <UArray_copy+0xfb>
  405a42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a46:	8b 10                	mov    (%rax),%edx
  405a48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405a4c:	8b 00                	mov    (%rax),%eax
  405a4e:	39 c2                	cmp    %eax,%edx
  405a50:	7e 38                	jle    405a8a <UArray_copy+0xfb>
  405a52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405a56:	8b 00                	mov    (%rax),%eax
  405a58:	85 c0                	test   %eax,%eax
  405a5a:	7e 2e                	jle    405a8a <UArray_copy+0xfb>
  405a5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405a60:	8b 10                	mov    (%rax),%edx
  405a62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a66:	8b 40 04             	mov    0x4(%rax),%eax
  405a69:	0f af c2             	imul   %edx,%eax
  405a6c:	48 63 d0             	movslq %eax,%rdx
  405a6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a73:	48 8b 48 08          	mov    0x8(%rax),%rcx
  405a77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405a7b:	48 8b 40 08          	mov    0x8(%rax),%rax
  405a7f:	48 89 ce             	mov    %rcx,%rsi
  405a82:	48 89 c7             	mov    %rax,%rdi
  405a85:	e8 56 b3 ff ff       	callq  400de0 <memcpy@plt>
  405a8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405a8e:	c9                   	leaveq 
  405a8f:	c3                   	retq   

0000000000405a90 <__libc_csu_init>:
  405a90:	41 57                	push   %r15
  405a92:	41 89 ff             	mov    %edi,%r15d
  405a95:	41 56                	push   %r14
  405a97:	49 89 f6             	mov    %rsi,%r14
  405a9a:	41 55                	push   %r13
  405a9c:	49 89 d5             	mov    %rdx,%r13
  405a9f:	41 54                	push   %r12
  405aa1:	4c 8d 25 08 13 20 00 	lea    0x201308(%rip),%r12        # 606db0 <__frame_dummy_init_array_entry>
  405aa8:	55                   	push   %rbp
  405aa9:	48 8d 2d 08 13 20 00 	lea    0x201308(%rip),%rbp        # 606db8 <__init_array_end>
  405ab0:	53                   	push   %rbx
  405ab1:	4c 29 e5             	sub    %r12,%rbp
  405ab4:	31 db                	xor    %ebx,%ebx
  405ab6:	48 c1 fd 03          	sar    $0x3,%rbp
  405aba:	48 83 ec 08          	sub    $0x8,%rsp
  405abe:	e8 ed b1 ff ff       	callq  400cb0 <_init>
  405ac3:	48 85 ed             	test   %rbp,%rbp
  405ac6:	74 1e                	je     405ae6 <__libc_csu_init+0x56>
  405ac8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  405acf:	00 
  405ad0:	4c 89 ea             	mov    %r13,%rdx
  405ad3:	4c 89 f6             	mov    %r14,%rsi
  405ad6:	44 89 ff             	mov    %r15d,%edi
  405ad9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  405add:	48 83 c3 01          	add    $0x1,%rbx
  405ae1:	48 39 eb             	cmp    %rbp,%rbx
  405ae4:	75 ea                	jne    405ad0 <__libc_csu_init+0x40>
  405ae6:	48 83 c4 08          	add    $0x8,%rsp
  405aea:	5b                   	pop    %rbx
  405aeb:	5d                   	pop    %rbp
  405aec:	41 5c                	pop    %r12
  405aee:	41 5d                	pop    %r13
  405af0:	41 5e                	pop    %r14
  405af2:	41 5f                	pop    %r15
  405af4:	c3                   	retq   
  405af5:	90                   	nop
  405af6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  405afd:	00 00 00 

0000000000405b00 <__libc_csu_fini>:
  405b00:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000405b04 <_fini>:
  405b04:	48 83 ec 08          	sub    $0x8,%rsp
  405b08:	48 83 c4 08          	add    $0x8,%rsp
  405b0c:	c3                   	retq   
